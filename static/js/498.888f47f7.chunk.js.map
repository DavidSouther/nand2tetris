{"version":3,"file":"static/js/498.888f47f7.chunk.js","mappings":"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","sources":["components/pinout.tsx","../../simulator/src/languages/base.ts","../../simulator/src/languages/grammars/base.ohm.js","../../simulator/src/languages/grammars/hdl.ohm.js","../../simulator/src/languages/hdl.ts","../../simulator/src/languages/grammars/tst.ohm.js","../../simulator/src/languages/tst.ts","../../simulator/src/chip/clock.ts","../../simulator/src/chip/chip.tsx","../../simulator/src/chip/builtins/logic/and.ts","../../simulator/src/chip/builtins/logic/dmux.ts","../../simulator/src/chip/builtins/logic/mux.ts","../../simulator/src/chip/builtins/logic/nand.ts","../../simulator/src/chip/builtins/logic/not.ts","../../simulator/src/chip/builtins/logic/or.ts","../../simulator/src/chip/builtins/logic/xor.ts","../../simulator/src/chip/builtins/arithmetic/add_16.ts","../../simulator/src/chip/builtins/arithmetic/alu.tsx","../../simulator/src/chip/builtins/arithmetic/half_adder.ts","../../simulator/src/chip/builtins/arithmetic/full_adder.ts","../../simulator/src/chip/builtins/arithmetic/inc16.ts","../../simulator/src/languages/grammars/asm.ohm.js","../../simulator/src/languages/asm.ts","../../simulator/src/fs.ts","../../simulator/src/cpu/memory.ts","../../simulator/src/chip/builtins/sequential/ram.tsx","../../simulator/src/cpu/cpu.ts","../../simulator/src/chip/builtins/computer/computer.tsx","../../simulator/src/chip/builtins/sequential/bit.tsx","../../simulator/src/chip/builtins/index.ts","../../simulator/src/chip/builtins/sequential/dff.ts","../../simulator/src/chip/builder.ts","../../simulator/src/output.ts","../../simulator/src/tst.ts","util/storage.ts","util/react.ts","pages/chip.store.ts","../../simulator/src/languages/grammars/cmp.ohm.js","../../simulator/src/languages/cmp.ts","components/difftable.tsx","components/editor.tsx","components/shell/panel.tsx","components/runbar.tsx","components/timer.tsx","../../simulator/src/timer.ts","components/clockface.tsx","components/chips/alu.tsx","components/chips/register.tsx","components/chips/keyboard.tsx","components/pico/inline_edit.tsx","components/pico/virtual_scroll.tsx","components/chips/memory.tsx","components/chips/screen.tsx","components/chips/visualizations.tsx","pages/chip.tsx","../../simulator/src/cpu/alu.ts","../../simulator/src/util/asm.ts","../../simulator/src/util/twos.ts"],"sourcesContent":["import { plural, Trans } from \"@lingui/macro\";\nimport {\n  Pin as ChipPin,\n  Pins,\n  Voltage,\n} from \"@computron5k/simulator/chip/chip.js\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range\";\n\nimport \"./pinout.scss\";\nimport { ChipSim } from \"../pages/chip.store\";\n\nexport interface ImmPin {\n  bits: [number, Voltage][];\n  pin: ChipPin;\n}\n\nexport function reducePin(pin: ChipPin) {\n  return {\n    pin,\n    bits: range(0, pin.width)\n      .map((i) => [i, pin.voltage(i)] as [number, Voltage])\n      .reverse(),\n  };\n}\n\nexport function reducePins(pins: Pins): ImmPin[] {\n  return [...pins.entries()].map(reducePin);\n}\n\nexport interface PinoutPins {\n  pins: ImmPin[];\n  toggle?: (pin: ChipPin, bit?: number) => void;\n}\n\nexport const FullPinout = (props: {\n  sim: ChipSim;\n  toggle: (pin: ChipPin, i: number | undefined) => void;\n}) => {\n  const { inPins, outPins, internalPins } = props.sim;\n  return (\n    <table className=\"pinout\">\n      <tbody>\n        <PinoutBlock\n          pins={inPins}\n          header={plural(inPins.length, {\n            one: \"Input pin\",\n            other: \"Input pins\",\n          })}\n          toggle={props.toggle}\n        />\n        <PinoutBlock\n          pins={outPins}\n          header={plural(outPins.length, {\n            one: \"Output pin\",\n            other: \"Output pins\",\n          })}\n          disabled={props.sim.pending}\n        />\n        <PinoutBlock\n          pins={internalPins}\n          header={plural(internalPins.length, {\n            one: \"Internal pin\",\n            other: \"Internal pins\",\n          })}\n          disabled={props.sim.pending}\n        />\n      </tbody>\n    </table>\n  );\n};\n\nexport const PinoutBlock = (\n  props: PinoutPins & { header: string; disabled?: boolean }\n) => (\n  <>\n    {props.pins.length > 0 && (\n      <tr>\n        <th colSpan={2}>{props.header}</th>\n      </tr>\n    )}\n    {[...props.pins].map((immPin) => (\n      <tr key={immPin.pin.name}>\n        <td>{immPin.pin.name}</td>\n        <td>\n          <Pin pin={immPin} toggle={props.toggle} disabled={props.disabled} />\n        </td>\n      </tr>\n    ))}\n  </>\n);\n\nexport const Pinout = ({\n  pins,\n  toggle,\n}: {\n  pins: ImmPin[];\n  toggle?: (pin: ChipPin, bit?: number) => void;\n}) => {\n  if (pins.length === 0) {\n    return <Trans>None</Trans>;\n  }\n  return (\n    <table className=\"pinout\">\n      <thead>\n        <tr>\n          <th>\n            <Trans>Name</Trans>\n          </th>\n          <th>\n            <Trans>Value</Trans>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {[...pins].map((immPin) => (\n          <tr key={immPin.pin.name}>\n            <td>{immPin.pin.name}</td>\n            <td>\n              <Pin pin={immPin} toggle={toggle} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst Pin = ({\n  pin,\n  toggle,\n  disabled = false,\n}: {\n  pin: ImmPin;\n  toggle: ((pin: ChipPin, bit?: number) => void) | undefined;\n  disabled?: boolean;\n}) => {\n  return (\n    <fieldset role=\"group\" style={{ width: `${pin.bits.length}rem` }}>\n      {pin.bits.map(([i, v]) => (\n        <button\n          key={i}\n          onClick={() => toggle?.(pin.pin, i)}\n          disabled={disabled}\n          data-testid={`pin-${i}`}\n        >\n          {v}\n        </button>\n      ))}\n    </fieldset>\n  );\n};\n","import ohm from \"ohm-js\";\nimport { int10, int16, int2 } from \"../util/twos.js\";\nimport { Err, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result.js\";\n\nexport const UNKNOWN_PARSE_ERROR = `Unknown parse error`;\n\nimport baseGrammar from \"./grammars/base.ohm.js\";\nexport const grammars = {\n  Base: ohm.grammar(baseGrammar),\n};\n\nexport const baseSemantics = grammars.Base.createSemantics();\n\nbaseSemantics.extendOperation(\"asIteration\", {\n  List(list, _) {\n    return list.asIteration();\n  },\n});\n\nbaseSemantics.addAttribute(\"value\", {\n  decNumber(_, digits): number {\n    return int10(digits.sourceString);\n  },\n  wholeDec(_, digits): number {\n    return int10(digits.sourceString);\n  },\n  binNumber(_, digits) {\n    return int2(digits.sourceString);\n  },\n  hexNumber(_, digits) {\n    return int16(digits.sourceString);\n  },\n  Number(num) {\n    return num.value;\n  },\n  Name(ident) {\n    return ident.name;\n  },\n  identifier(_, __): string {\n    return this.sourceString;\n  },\n});\n\nbaseSemantics.addAttribute(\"name\", {\n  identifier(_, __): string {\n    return this.sourceString;\n  },\n  Name(_): string {\n    return this.child(0)?.name;\n  },\n});\n\nbaseSemantics.addAttribute(\"String\", {\n  String(_a, str, _b) {\n    return str.sourceString;\n  },\n});\n\nexport type ParseError = Error | { message: string; shortMessage: string };\n\nexport function makeParser<ResultType>(\n  grammar: ohm.Grammar,\n  semantics: ohm.Semantics,\n  property: (obj: ohm.Dict) => ResultType = ({ root }) => root\n): (source: string) => Result<ResultType, ParseError> {\n  return function parse(source) {\n    try {\n      const match = grammar.match(source);\n      if (match.succeeded()) {\n        const parsed = semantics(match);\n        const parse = property(parsed);\n        return Ok(parse);\n      } else {\n        return Err({\n          message: match.message ?? UNKNOWN_PARSE_ERROR,\n          shortMessage: match.shortMessage ?? UNKNOWN_PARSE_ERROR,\n        });\n      }\n    } catch (e) {\n      return Err(e as Error);\n    }\n  };\n}\n\nexport interface Span {\n  start: number;\n  end: number;\n}\n","const base = `\nBase {\n  Root = Value*\n\n  At = at\n  Bang = bang\n  Bar = bar\n  CloseAngle = closeAngle\n  CloseBrace = closeBrace\n  CloseParen = closeParen\n  CloseSquare = closeSquare\n  Comma = comma\n  Dollar = dollar\n  Dot = dot\n  DoubleQuote = doubleQuote\n  Equal = equal\n  OpenAngle = openAngle\n  OpenBrace = openBrace\n  OpenParen = openParen\n  OpenSquare = openSquare\n  Percent = percent\n  Semi = semi\n  Underscore = underscore\n\n  at = \"@\"\n  bang = \"!\"\n  bar = \"|\"\n  closeAngle = \">\"\n  closeBrace = \"}\"\n  closeParen = \")\"\n  closeSquare = \"]\"\n  comma = \",\"\n  dollar = \"$\"\n  dot = \".\"\n  doubleQuote = \"\\\\\"\"\n  equal = \"=\"\n  minus = \"-\"\n  newline = \"\\\\r\"? \"\\\\n\"\n  openAngle = \"<\"\n  openBrace = \"{\"\n  openParen = \"(\"\n  openSquare = \"[\"\n  percent = \"%\"\n  semi = \";\"\n  underscore = \"_\"\n\n  Value = identifier | number | boolean\n\n  boolean = true | false\n  True = true\n  False = false\n  true = \"true\"\n  false = \"false\"\n\n  Name = identifier\n  identifier = (letter|underscore) (alnum|underscore|dot|dollar)*\n\n  Number = number\n  number = hexNumber | decNumber | binNumber\n  binNumber = (\"%B\") (\"0\"|\"1\")+\n  hexNumber = (\"%X\") hexDigit+\n  decNumber = (\"%D\")? (wholeDec | realDec)\n  wholeDec = minus? digit+\n  realDec = minus? digit* \".\" digit+\n\n  String = DoubleQuote (~doubleQuote any)* doubleQuote\n  \n  spaces := (lineComment | comment | space)*\n  commentStart = \"/*\"\n  commentEnd = \"*/\"\n  comment = commentStart (~commentEnd any)* commentEnd\n  lineCommentStart = \"//\"\n  lineComment = lineCommentStart (~\"\\\\n\" any)* \"\\\\n\"\n\n  List<elem, sep> = NonemptyListOf<elem, sep> sep?\n  EmptyList<elem, sep> = EmptyList<elem, sep> sep?\n}`;\nexport default base;\n","const hdl = `\nHdl <: Base{\n  Root := Chip\n  Chip = \"CHIP\" Name OpenBrace ChipBody CloseBrace\n  ChipBody = InList? OutList? PartList ClockedList?\n  InList = \"IN\" PinList Semi\n  OutList = \"OUT\" PinList Semi\n  PartList = BuiltinPart | Parts\n  PinList = List<PinDecl, Comma>\n  PinDecl = Name PinWidth?\n  PinWidth = OpenSquare decNumber CloseSquare\n  BuiltinPart = \"BUILTIN\" Semi\n  Parts = \"PARTS:\" Part*\n  Part = Name \"(\" Wires \")\" Semi\n  Wires = List<Wire, Comma>\n  Wire = WireSide Equal (WireSide | True | False) \n  WireSide = Name SubBus? \n  SubBus = OpenSquare decNumber subBusRest? CloseSquare\n  subBusRest = \"..\" decNumber\n  ClockedList = \"CLOCKED\" SimplePinList Semi\n  SimplePinList = List<Name, Comma>\n}`;\nexport default hdl;\n","/** Reads and parses HDL chip descriptions. */\nimport ohm from \"ohm-js\";\nimport { grammars, baseSemantics } from \"./base.js\";\nimport { makeParser } from \"./base.js\";\n\nexport interface PinIndex {\n  start?: number | undefined;\n  end?: number | undefined;\n}\n\nexport interface PinParts extends PinIndex {\n  pin: string;\n}\n\nexport interface PinDeclaration {\n  pin: string | string;\n  width: number;\n}\n\nexport interface Wire {\n  lhs: PinParts;\n  rhs: PinParts;\n}\n\nexport interface Part {\n  name: string;\n  wires: Wire[];\n}\n\nexport interface HdlParse {\n  name: string;\n  ins: PinDeclaration[];\n  outs: PinDeclaration[];\n  clocked: string[];\n  parts: \"BUILTIN\" | Part[];\n}\n\nimport hdlGrammar from \"./grammars/hdl.ohm.js\";\nexport const grammar = ohm.grammar(hdlGrammar, grammars);\n\nexport const hdlSemantics = grammar.extendSemantics(baseSemantics);\n\nhdlSemantics.addAttribute<PinIndex>(\"SubBus\", {\n  SubBus(_a, startNode, endNode, _b) {\n    const start = startNode.value;\n    const end = endNode.child(0)?.child(1)?.value ?? start;\n    return { start, end };\n  },\n});\n\nhdlSemantics.addAttribute<PinParts>(\"WireSide\", {\n  WireSide({ name }, index) {\n    const { start, end } = (index.child(0)?.SubBus as PinIndex) ?? {\n      start: undefined,\n      end: undefined,\n    };\n    return { pin: name, start, end };\n  },\n});\n\nhdlSemantics.addAttribute<Wire>(\"Wire\", {\n  Wire(left, _, right) {\n    const rhs: PinParts = right.isTerminal()\n      ? { pin: right.sourceString }\n      : right.WireSide;\n    return { lhs: left.WireSide as PinParts, rhs };\n  },\n});\n\nhdlSemantics.addAttribute<Wire[]>(\"Wires\", {\n  Wires(list) {\n    return list.asIteration().children.map(({ Wire }: { Wire: Wire }) => Wire);\n  },\n});\n\nhdlSemantics.addAttribute<Part>(\"Part\", {\n  Part({ name }, _a, { Wires }, _b, _c) {\n    return { name: name as string, wires: Wires as Wire[] };\n  },\n});\n\nhdlSemantics.addAttribute<Part[] | \"BUILTIN\">(\"Parts\", {\n  Parts(_, parts) {\n    return parts.children.map((c) => c.Part);\n  },\n  BuiltinPart(_a, _b) {\n    return \"BUILTIN\";\n  },\n});\n\nhdlSemantics.addAttribute<\"BUILTIN\" | Part[]>(\"PartList\", {\n  PartList(list) {\n    return list.Parts;\n  },\n});\n\nhdlSemantics.addAttribute<string[]>(\"Clocked\", {\n  ClockedList(_a, clocked, _b) {\n    return (\n      clocked\n        .asIteration()\n        .children.map(\n          ({ sourceString }: { sourceString: string }) => sourceString\n        ) ?? []\n    );\n  },\n});\n\nhdlSemantics.addAttribute<PinDeclaration>(\"PinDecl\", {\n  PinDecl({ name }, width) {\n    return {\n      pin: name,\n      width: width.child(0)?.child(1)?.value ?? 1,\n    };\n  },\n});\n\nhdlSemantics.addAttribute<PinDeclaration[]>(\"PinList\", {\n  PinList(list) {\n    return list\n      .asIteration()\n      .children.map(({ PinDecl }: { PinDecl: PinDeclaration }) => PinDecl);\n  },\n});\n\nhdlSemantics.addAttribute<HdlParse>(\"Chip\", {\n  Chip(_a, { name }, _b, body, _c) {\n    return {\n      name,\n      ins: body.child(0).child(0)?.child(1)?.PinList ?? [],\n      outs: body.child(1).child(0)?.child(1)?.PinList ?? [],\n      parts: body.child(2).PartList ?? [],\n      clocked: body.child(3).child(0)?.Clocked,\n    };\n  },\n});\n\nhdlSemantics.addAttribute<HdlParse>(\"Root\", {\n  Root(root) {\n    return root.child(0)?.Chip;\n  },\n});\n\nexport const HDL = {\n  parser: grammar,\n  grammar: hdlGrammar,\n  semantics: hdlSemantics,\n  parse: makeParser<HdlParse>(grammar, hdlSemantics, (n) => n.Chip),\n};\n","const tst = `\nTst <: Base {\n  Root := Tst\n  Tst = (TstStatement | TstRepeat | TstWhile)+\n\n  TstRepeat = Repeat Number? OpenBrace TstStatement+ CloseBrace\n  TstWhile = While Condition OpenBrace TstStatement+ CloseBrace\n  TstStatement = List<TstOperation, \",\"> (Semi | Bang)\n\n  TstOperation =\n    | TstFileOperation\n    | TstOutputListOperation\n    | TstEvalOperation\n    | TstSetOperation\n    | TstOutputOperation\n    | TstEchoOperation\n    | TstClearEchoOperation\n    | TstLoadROMOperation\n\n  TstLoadROMOperation = ROM32K Load FileName\n  TstFileOperation = FileOperation FileName\n  TstOutputListOperation = \"output-list\" OutputFormat+\n  OutputFormat = Name Index? percent FormatStyle wholeDec dot wholeDec dot wholeDec\n  TstSetOperation = Set Name Index? Number\n  Index = OpenSquare wholeDec? CloseSquare\n  Condition = Value CompareOp Value\n  TstEvalOperation = Eval | Tick | Tock\n  TstOutputOperation = Output\n  TstEchoOperation = Echo String\n  TstClearEchoOperation = ClearEcho\n\n  FileName = Name\n  FileOperation = \"load\" | \"output-file\" | \"compare-to\"\n\n  Set = \"set\"\n  Eval = \"eval\"\n  Tick = \"tick\"\n  Tock = \"tock\"\n  Echo = \"echo\"\n  Repeat = \"repeat\"\n  ClearEcho = \"clear-echo\"\n  Output = \"output\"\n  OutputList = \"output-list\"\n  FormatStyle = \"B\"|\"D\"|\"S\"|\"X\"\n  ROM32K = \"ROM32K\"\n  Load = \"load\"\n  While = \"while\"\n\n  CompareOp = \"<>\" | \"<=\" | \">=\" | \"=\" | \"<\" | \">\"\n}`;\nexport default tst;\n","/** Reads tst files to apply and perform test runs. */\n\nimport ohm from \"ohm-js\";\nimport { baseSemantics, grammars, makeParser, Span } from \"./base.js\";\n\nexport interface TstEchoOperation {\n  op: \"echo\";\n  message: string;\n}\n\nexport interface TstClearEchoOperation {\n  op: \"clear-echo\";\n}\n\nexport interface TstSetOperation {\n  op: \"set\";\n  id: string;\n  index?: number;\n  value: number;\n}\n\nexport interface TstEvalOperation {\n  op: \"eval\" | \"tick\" | \"tock\";\n}\n\nexport interface TstOutputOperation {\n  op: \"output\";\n}\n\nexport interface TstOutputSpec {\n  id: string;\n  builtin: boolean;\n  address: number;\n  style: \"D\" | \"X\" | \"B\" | \"S\";\n  width: number;\n  lpad: number;\n  rpad: number;\n}\n\nexport interface TstOutputListOperation {\n  op: \"output-list\";\n  spec: TstOutputSpec[];\n}\n\nexport interface TstLoadROMOperation {\n  op: \"load\";\n  file: string;\n}\n\nexport type TstOperation =\n  | TstEvalOperation\n  | TstEchoOperation\n  | TstClearEchoOperation\n  | TstOutputOperation\n  | TstSetOperation\n  | TstOutputListOperation\n  | TstLoadROMOperation;\n\nexport interface TstLineStatement {\n  ops: TstOperation[];\n  break?: true;\n  span: Span;\n}\n\nexport interface TstRepeat {\n  statements: TstLineStatement[];\n  count: number;\n  span: Span;\n}\n\nexport interface TstWhileCondition {\n  op: \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"<>\";\n  left: string | number;\n  right: string | number;\n}\n\nexport interface TstWhileStatement {\n  statements: TstLineStatement[];\n  condition: TstWhileCondition;\n  span: Span;\n}\n\nexport type TstStatement = TstLineStatement | TstRepeat | TstWhileStatement;\n\nexport interface Tst {\n  lines: TstStatement[];\n}\n\nimport tstGrammar from \"./grammars/tst.ohm.js\";\nexport const grammar = ohm.grammar(tstGrammar, grammars);\nexport const tstSemantics = grammar.extendSemantics(baseSemantics);\n\ntstSemantics.extendAttribute<number>(\"value\", {\n  Index(_a, idx, _b) {\n    return idx?.child(0)?.value ?? -1;\n  },\n});\n\ntstSemantics.extendAttribute<string>(\"name\", {\n  FileName({ name }) {\n    return name;\n  },\n});\n\ntstSemantics.addAttribute<number>(\"index\", {\n  Index(_open, dec, _close) {\n    return dec.child(0)?.value ?? 0;\n  },\n});\n\ntstSemantics.addAttribute<TstOutputSpec>(\"format\", {\n  OutputFormat(\n    { name: id },\n    index,\n    _a,\n    { sourceString: style },\n    { value: lpad },\n    _b,\n    { value: width },\n    _c,\n    { value: rpad }\n  ) {\n    return {\n      id,\n      builtin: index?.child(0) !== undefined,\n      address: index?.child(0)?.value ?? -1,\n      style: style as TstOutputSpec[\"style\"],\n      width,\n      lpad,\n      rpad,\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstOperation>(\"operation\", {\n  TstEvalOperation(op) {\n    return { op: op.sourceString as TstEvalOperation[\"op\"] };\n  },\n  TstOutputOperation(_) {\n    return { op: \"output\" };\n  },\n  TstOutputListOperation(_, formats) {\n    return {\n      op: \"output-list\",\n      spec: formats.children.map((n) => n.format),\n    };\n  },\n  TstSetOperation(op, { name }, index, { value }) {\n    const setOp: TstSetOperation = {\n      op: \"set\",\n      id: name,\n      value,\n    };\n    const child = index.child(0)?.child(1)?.child(0);\n    if (child) {\n      setOp.index = child.value;\n    }\n    return setOp;\n  },\n  TstEchoOperation(op, str) {\n    return {\n      op: \"echo\",\n      message: str.String as string,\n    };\n  },\n  TstClearEchoOperation(op) {\n    return {\n      op: \"clear-echo\",\n    };\n  },\n  TstLoadROMOperation(_r, _l, { name }) {\n    return {\n      op: \"load\",\n      file: name,\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstWhileCondition>(\"condition\", {\n  Condition({ value: left }, { sourceString: op }, { value: right }) {\n    return {\n      left,\n      right,\n      op: op as \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"<>\",\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstStatement>(\"statement\", {\n  TstWhile(op, cond, _o, statements, _c) {\n    return {\n      statements: statements.children.map(({ statement }) => statement),\n      condition: cond.condition,\n      span: {\n        start: op.source.startIdx,\n        end: cond.source.endIdx,\n      },\n    };\n  },\n  TstRepeat(op, count, _o, statements, _c) {\n    return {\n      statements: statements.children.map(({ statement }) => statement),\n      count: count.child(0)?.value ?? -1,\n      span: {\n        start: op.source.startIdx,\n        end: count.source.endIdx,\n      },\n    };\n  },\n  TstStatement(list, end) {\n    const stmt: TstStatement = {\n      ops: list\n        .asIteration()\n        .children.map(\n          ({ operation }: { operation: TstOperation }) => operation\n        ),\n      span: {\n        start: this.source.startIdx,\n        end: this.source.endIdx,\n      },\n    };\n    if (end.sourceString === \"!\") {\n      stmt.break = true;\n    }\n    return stmt;\n  },\n});\n\ntstSemantics.addAttribute<Tst>(\"tst\", {\n  Tst(lines) {\n    return {\n      lines: lines.children.map((n) => n.statement),\n    };\n  },\n});\n\ntstSemantics.addAttribute<Tst>(\"root\", {\n  Root({ tst }) {\n    return tst;\n  },\n});\n\nexport const TST = {\n  grammar: tstGrammar,\n  semantics: tstSemantics,\n  parser: grammar,\n  parse: makeParser<Tst>(grammar, tstSemantics),\n};\n","import { BehaviorSubject, Observable, Subject } from \"rxjs\";\nimport { assert } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { HIGH, LOW, Voltage } from \"./chip.js\";\n\ninterface Tick {\n  readonly level: Voltage;\n  readonly ticks: number;\n}\n\nlet clock: Clock;\nexport class Clock {\n  private level: Voltage = LOW;\n  private ticks = 0;\n\n  static get() {\n    if (clock === undefined) {\n      clock = new Clock();\n    }\n    return clock;\n  }\n\n  get isHigh(): boolean {\n    return this.level === HIGH;\n  }\n\n  get isLow(): boolean {\n    return this.level === LOW;\n  }\n\n  private subject = new BehaviorSubject<Tick>({\n    level: this.level,\n    ticks: this.ticks,\n  });\n  readonly frameSubject = new Subject<void>();\n\n  readonly $: Observable<Tick> = this.subject;\n  readonly frame$: Observable<void> = this.frameSubject;\n\n  private next() {\n    this.subject.next({\n      level: this.level,\n      ticks: this.ticks,\n    });\n  }\n\n  private constructor() {\n    // private\n  }\n\n  reset() {\n    this.level = LOW;\n    this.ticks = 0;\n    this.next();\n  }\n\n  tick() {\n    assert(this.level === LOW, \"Can only tick up from LOW\");\n    this.level = HIGH;\n    this.next();\n  }\n\n  tock() {\n    assert(this.level === HIGH, \"Can only tock down from HIGH\");\n    this.level = LOW;\n    this.ticks += 1;\n    this.next();\n  }\n\n  toggle() {\n    this.level === HIGH ? this.tock() : this.tick();\n  }\n\n  eval() {\n    this.tick();\n    this.tock();\n  }\n\n  frame() {\n    this.frameSubject.next();\n  }\n\n  toString() {\n    return `${this.ticks}${this.level === HIGH ? \"+\" : \"\"}`;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { assert, assertExists } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs.js\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range.js\";\nimport { bin } from \"../util/twos.js\";\nimport { Clock } from \"./clock.js\";\n\nexport const HIGH = 1;\nexport const LOW = 0;\nexport type Voltage = typeof HIGH | typeof LOW;\n\nexport interface Pin {\n  readonly name: string;\n  readonly width: number;\n  busVoltage: number;\n  pull(voltage: Voltage, bit?: number): void;\n  toggle(bit?: number): void;\n  voltage(bit?: number): Voltage;\n  connect(pin: Pin): void;\n}\n\nexport class Bus implements Pin {\n  state: Voltage[];\n  next: Pin[] = [];\n\n  constructor(readonly name: string, readonly width = 1) {\n    this.state = range(0, this.width).map(() => LOW);\n  }\n\n  ensureWidth(newWidth: number) {\n    assert(newWidth <= 16, `Cannot widen past 16 to ${newWidth} bits`);\n    if (this.width < newWidth) {\n      (this as { width: number }).width = newWidth;\n      this.state = [\n        ...this.state,\n        ...range(this.width, newWidth).map(() => LOW as Voltage),\n      ];\n    }\n  }\n\n  connect(next: Pin) {\n    this.next.push(next);\n    next.busVoltage = this.busVoltage;\n  }\n\n  pull(voltage: Voltage, bit = 0) {\n    assert(\n      bit >= 0 && bit < this.width,\n      `Bit out of bounds: ${this.name}@${bit}`\n    );\n    this.state[bit] = voltage;\n    this.next.forEach((n) => n.pull(voltage, bit));\n  }\n\n  voltage(bit = 0): Voltage {\n    assert(bit >= 0 && bit < this.width);\n    return this.state[bit];\n  }\n\n  set busVoltage(voltage: number) {\n    for (const i of range(0, this.width)) {\n      this.state[i] = ((voltage & (1 << i)) >> i) as Voltage;\n    }\n    this.next.forEach((n) => (n.busVoltage = this.busVoltage));\n  }\n\n  get busVoltage(): number {\n    return range(0, this.width).reduce((b, i) => b | (this.state[i] << i), 0);\n  }\n\n  toggle(bit = 0) {\n    const nextVoltage = this.voltage(bit) === LOW ? HIGH : LOW;\n    this.pull(nextVoltage, bit);\n  }\n}\n\nexport class InSubBus extends Bus {\n  constructor(\n    private bus: Pin,\n    private start: number,\n    override readonly width = 1\n  ) {\n    super(bus.name);\n    assert(\n      start >= 0 && start + width <= bus.width,\n      `Mismatched InSubBus dimensions on ${bus.name} (${width} + ${start} > ${bus.width})`\n    );\n    this.connect(bus);\n  }\n\n  override pull(voltage: Voltage, bit = 0) {\n    assert(bit >= 0 && bit < this.width);\n    this.bus.pull(voltage, this.start + bit);\n  }\n\n  override voltage(bit = 0): Voltage {\n    assert(bit >= 0 && bit < this.width);\n    return this.bus.voltage(this.start + bit);\n  }\n\n  override set busVoltage(voltage: number) {\n    const high = this.bus.busVoltage & ~mask(this.width + this.start);\n    const low = this.bus.busVoltage & mask(this.start);\n    const mid = (voltage & mask(this.width)) << this.start;\n    this.bus.busVoltage = high | mid | low;\n  }\n\n  override get busVoltage(): number {\n    return (this.bus.busVoltage >> this.start) & mask(this.width);\n  }\n\n  override connect(bus: Pin): void {\n    assert(\n      this.start + this.width <= bus.width,\n      `Mismatched InSubBus connection dimensions (From ${bus.name} to ${this.name})`\n    );\n    this.bus = bus;\n  }\n}\n\nexport class OutSubBus extends Bus {\n  constructor(\n    private bus: Pin,\n    private start: number,\n    override readonly width = 1\n  ) {\n    super(bus.name);\n    assert(start >= 0 && width <= bus.width, `Mismatched OutSubBus dimensions`);\n    this.connect(bus);\n  }\n\n  override set busVoltage(voltage: number) {\n    this.bus.busVoltage =\n      (voltage & mask(this.width + this.start)) >> this.start;\n  }\n\n  override get busVoltage(): number {\n    return this.bus.busVoltage & mask(this.width);\n  }\n\n  override connect(bus: Pin): void {\n    assert(\n      this.width <= bus.width,\n      `Mismatched OutSubBus connection dimensions`\n    );\n    this.bus = bus;\n  }\n}\n\nexport class ConstantBus extends Bus {\n  constructor(name: string, private readonly value: number) {\n    super(name, 16 /* TODO: get high bit index */);\n  }\n\n  pullHigh(_ = 0) {\n    return undefined;\n  }\n  pullLow(_ = 0) {\n    return undefined;\n  }\n  override voltage(_ = 0): Voltage {\n    return (this.busVoltage & 0x1) as Voltage;\n  }\n\n  override set busVoltage(voltage: number) {\n    // Noop\n  }\n  override get busVoltage(): number {\n    return this.value;\n  }\n}\n\nexport const TRUE_BUS = new ConstantBus(\"true\", 0xffff);\nexport const FALSE_BUS = new ConstantBus(\"false\", 0);\n\nexport function parsePinDecl(toPin: string): {\n  pin: string;\n  width: number;\n} {\n  const { pin, w } = toPin.match(/(?<pin>[a-zA-Z]+)(\\[(?<w>\\d+)\\])?/)\n    ?.groups as {\n    pin: string;\n    w?: string;\n  };\n  return {\n    pin,\n    width: w ? Number(w) : 1,\n  };\n}\n\nexport function parseToPin(toPin: string): {\n  pin: string;\n  start?: number;\n  end?: number;\n} {\n  const { pin, i, j } = toPin.match(\n    /(?<pin>[a-z]+)(\\[(?<i>\\d+)(\\.\\.(?<j>\\d+))?\\])?/\n  )?.groups as { pin: string; i?: string; j?: string };\n  return {\n    pin,\n    start: i ? Number(i) : undefined,\n    end: j ? Number(j) : undefined,\n  };\n}\n\nexport class Pins {\n  private readonly map = new Map<string, Pin>();\n\n  insert(pin: Pin) {\n    const { name } = pin;\n    assert(!this.map.has(name), `Pins already has ${name}!`);\n    this.map.set(name, pin);\n  }\n\n  emplace(name: string, minWidth?: number) {\n    if (this.has(name)) {\n      return this.get(name)!;\n    } else {\n      const pin = new Bus(name, minWidth);\n      this.insert(pin);\n      return pin;\n    }\n  }\n\n  has(pin: string): boolean {\n    return this.map.has(pin);\n  }\n\n  get(pin: string): Pin | undefined {\n    return this.map.get(pin);\n  }\n\n  entries(): Iterable<Pin> {\n    return this.map.values();\n  }\n\n  [Symbol.iterator]() {\n    return this.map[Symbol.iterator]();\n  }\n}\n\nlet id = 0;\nexport class Chip {\n  readonly id = id++;\n  ins = new Pins();\n  outs = new Pins();\n  pins = new Pins();\n  parts = new Set<Chip>();\n  clockedPins: Set<string>;\n\n  get clocked() {\n    if (this.clockedPins.size > 0) {\n      return true;\n    }\n    for (const part of this.parts) {\n      if (part.clocked) return true;\n    }\n    return false;\n  }\n\n  constructor(\n    ins: (string | { pin: string; width: number })[],\n    outs: (string | { pin: string; width: number })[],\n    public name?: string,\n    internals: (string | { pin: string; width: number })[] = [],\n    clocked: string[] = []\n  ) {\n    for (const inn of ins) {\n      const { pin, width = 1 } =\n        (inn as { pin: string }).pin !== undefined\n          ? (inn as { pin: string; width: number })\n          : parsePinDecl(inn as string);\n      this.ins.insert(new Bus(pin, width));\n    }\n\n    for (const out of outs) {\n      const { pin, width = 1 } =\n        (out as { pin: string }).pin !== undefined\n          ? (out as { pin: string; width: number })\n          : parsePinDecl(out as string);\n      this.outs.insert(new Bus(pin, width));\n    }\n\n    for (const internal of internals) {\n      const { pin, width = 1 } =\n        (internal as { pin: string }).pin !== undefined\n          ? (internal as { pin: string; width: number })\n          : parsePinDecl(internal as string);\n      this.pins.insert(new Bus(pin, width));\n    }\n\n    this.clockedPins = new Set(clocked);\n\n    Clock.get().$.subscribe(() => this.eval());\n  }\n\n  reset() {\n    for (const [_, pin] of this.ins) {\n      pin.busVoltage = 0;\n    }\n    for (const part of this.parts) {\n      part.reset();\n    }\n    this.eval();\n  }\n\n  in(pin = \"in\"): Pin {\n    assert(this.hasIn(pin), `No in pin ${pin}`);\n    return this.ins.get(pin)!;\n  }\n\n  out(pin = \"out\"): Pin {\n    assert(this.hasOut(pin), `No in pin ${pin}`);\n    return this.outs.get(pin)!;\n  }\n\n  hasIn(pin: string): boolean {\n    return this.ins.has(pin);\n  }\n\n  hasOut(pin: string): boolean {\n    return this.outs.has(pin);\n  }\n\n  pin(name: string): Pin {\n    assert(this.pins.has(name));\n    return this.pins.get(name)!;\n  }\n\n  get(name: string, offset?: number): Pin | undefined {\n    if (this.ins.has(name)) {\n      return this.ins.get(name)!;\n    }\n    if (this.outs.has(name)) {\n      return this.outs.get(name)!;\n    }\n    if (this.pins.has(name)) {\n      return this.pins.get(name)!;\n    }\n    return this.getBuiltin(name, offset);\n  }\n\n  private getBuiltin(name: string, offset = 0): Pin | undefined {\n    if (BUILTIN_NAMES.includes(name)) {\n      for (const part of this.parts) {\n        const pin = part.get(name, offset);\n        if (pin) {\n          return pin;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  isOutPin(pin: string): boolean {\n    return this.outs.has(pin);\n  }\n\n  wire(part: Chip, connections: Connection[]) {\n    this.parts.add(part);\n    for (const { to, from } of connections) {\n      if (part.isOutPin(to.name)) {\n        this.wireOutPin(part, to, from);\n      } else {\n        this.wireInPin(part, to, from);\n      }\n    }\n  }\n\n  private findPin(from: string, minWidth?: number): Pin {\n    if (from.toLowerCase() === \"true\" || from === \"1\") {\n      return TRUE_BUS;\n    }\n    if (from.toLowerCase() === \"false\" || from === \"0\") {\n      return FALSE_BUS;\n    }\n    if (this.ins.has(from)) {\n      return this.ins.get(from)!;\n    }\n    if (this.outs.has(from)) {\n      return this.outs.get(from)!;\n    }\n    return this.pins.emplace(from, minWidth);\n  }\n\n  private wireOutPin(part: Chip, to: PinSide, from: PinSide) {\n    const partPin = assertExists(\n      part.outs.get(to.name),\n      () => `Cannot wire to missing pin ${to.name}`\n    );\n    to.width ??= partPin.width;\n\n    let chipPin = this.findPin(from.name, from.width ?? to.width);\n    const isInternal = this.pins.has(chipPin.name);\n\n    from.width ??= chipPin.width;\n\n    if (chipPin instanceof ConstantBus) {\n      throw new Error(`Cannot wire to constant bus`);\n    }\n\n    // Widen internal pins\n    if (isInternal && chipPin instanceof Bus) {\n      chipPin.ensureWidth(from.start + from.width);\n    }\n\n    // Wrap the chipPin in an InBus when the chip side is dimensioned\n    if (from.start > 0 || from.width !== chipPin.width) {\n      chipPin = new InSubBus(chipPin, from.start, from.width);\n    }\n\n    // Wrap the chipPin in an OutBus when the part side is dimensioned\n    if (to.start > 0 || to.width !== chipPin.width) {\n      chipPin = new OutSubBus(chipPin, to.start, to.width);\n    }\n\n    partPin.connect(chipPin);\n  }\n\n  private wireInPin(part: Chip, to: PinSide, from: PinSide) {\n    let partPin = assertExists(\n      part.ins.get(to.name),\n      () => `Cannot wire to missing pin ${to.name}`\n    );\n    to.width ??= partPin.width;\n\n    const chipPin = this.findPin(from.name, from.width ?? to.width);\n\n    from.width ??= chipPin.width;\n\n    // Wrap the partPin in an InBus when the part side is dimensioned\n    if (to.start > 0 || to.width !== chipPin.width) {\n      partPin = new InSubBus(partPin, to.start, to.width);\n    }\n\n    // Wrap the partPin in an OutBus when the chip side is dimensioned\n    if (![\"true\", \"false\"].includes(chipPin.name)) {\n      if (from.start > 0 || from.width !== chipPin.width) {\n        partPin = new OutSubBus(partPin, from.start, from.width);\n      }\n    }\n    chipPin.connect(partPin);\n  }\n\n  eval() {\n    for (const chip of this.parts) {\n      // TODO topological sort\n      // eval chip input busses\n      chip.eval();\n      // eval output busses\n    }\n  }\n\n  tick() {\n    this.eval();\n  }\n\n  tock() {\n    this.eval();\n  }\n\n  remove() {\n    for (const part of this.parts) {\n      part.remove();\n    }\n  }\n\n  // For the ROM32K builtin to load from a file system\n  async load(fs: FileSystem, path: string): Promise<void> {\n    for (const part of this.parts) {\n      if (part.name === \"ROM32K\") {\n        await part.load(fs, path);\n      }\n    }\n  }\n}\n\nexport class Low extends Chip {\n  constructor() {\n    super([], []);\n    this.outs.insert(FALSE_BUS);\n  }\n}\n\nexport class High extends Chip {\n  constructor() {\n    super([], []);\n    this.outs.insert(TRUE_BUS);\n  }\n}\n\nexport class ClockedChip extends Chip {\n  override get clocked(): boolean {\n    return true;\n  }\n\n  #subscription = Clock.get().$.subscribe(({ level }) => {\n    if (level === LOW) {\n      this.tock();\n    } else {\n      this.tick();\n    }\n  });\n\n  override remove() {\n    this.#subscription.unsubscribe();\n    super.remove();\n  }\n}\n\nexport interface PinSide {\n  name: string;\n  start: number;\n  width?: number;\n}\n\nexport interface Connection {\n  // To is the part side\n  to: PinSide;\n  // From is the chip side\n  from: PinSide;\n}\n\nexport type Pinout = Record<string, string>;\nexport interface SerializedChip {\n  id: number;\n  name: string;\n  ins: Pinout;\n  outs: Pinout;\n  pins: Pinout;\n  children: SerializedChip[];\n}\n\nfunction mask(width: number) {\n  return Math.pow(2, width) - 1;\n}\n\nfunction setBus(busses: Pinout, pin: Pin) {\n  busses[pin.name] = bin(\n    (pin.busVoltage & mask(pin.width)) <<\n      (pin as unknown as { start: number }).start ?? 0\n  );\n  return busses;\n}\n\nexport function printChip(chip: Chip): SerializedChip {\n  return {\n    id: chip.id,\n    name: chip.name ?? chip.constructor.name,\n    ins: [...chip.ins.entries()].reduce(setBus, {} as Pinout),\n    outs: [...chip.outs.entries()].reduce(setBus, {} as Pinout),\n    pins: [...chip.pins.entries()].reduce(setBus, {} as Pinout),\n    children: [...chip.parts.values()].map(printChip),\n  };\n}\n\nexport const BUILTIN_NAMES = [\n  \"Register\",\n  \"ARegister\",\n  \"DRegister\",\n  \"PC\",\n  \"RAM8\",\n  \"RAM64\",\n  \"RAM512\",\n  \"RAM4K\",\n  \"RAM16K\",\n  \"ROM32K\",\n  \"Screen\",\n  \"Keyboard\",\n  \"Memory\",\n];\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip.js\";\n\nexport function and(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 && b === 1 ? HIGH : LOW];\n}\n\nexport function and16(a: number, b: number): [number] {\n  return [a & b & 0xffff];\n}\n\nexport class And extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [n] = and(a, b);\n    this.out().pull(n);\n  }\n}\n\nexport class And16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [n] = and16(a, b);\n    this.out().busVoltage = n;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip.js\";\n\nexport function dmux(inn: Voltage, sel: Voltage): [Voltage, Voltage] {\n  const a = sel === LOW && inn === HIGH ? HIGH : LOW;\n  const b = sel === HIGH && inn === HIGH ? HIGH : LOW;\n  return [a, b];\n}\n\nexport function dmux4way(\n  inn: Voltage,\n  sel: number\n): [Voltage, Voltage, Voltage, Voltage] {\n  const a = sel === 0b00 && inn === HIGH ? HIGH : LOW;\n  const b = sel === 0b01 && inn === HIGH ? HIGH : LOW;\n  const c = sel === 0b10 && inn === HIGH ? HIGH : LOW;\n  const d = sel === 0b11 && inn === HIGH ? HIGH : LOW;\n  return [a, b, c, d];\n}\n\nexport function dmux8way(\n  inn: Voltage,\n  sel: number\n): [Voltage, Voltage, Voltage, Voltage, Voltage, Voltage, Voltage, Voltage] {\n  const a = sel === 0b000 && inn === HIGH ? HIGH : LOW;\n  const b = sel === 0b001 && inn === HIGH ? HIGH : LOW;\n  const c = sel === 0b010 && inn === HIGH ? HIGH : LOW;\n  const d = sel === 0b011 && inn === HIGH ? HIGH : LOW;\n  const e = sel === 0b100 && inn === HIGH ? HIGH : LOW;\n  const f = sel === 0b101 && inn === HIGH ? HIGH : LOW;\n  const g = sel === 0b110 && inn === HIGH ? HIGH : LOW;\n  const h = sel === 0b111 && inn === HIGH ? HIGH : LOW;\n  return [a, b, c, d, e, f, g, h];\n}\n\nexport class DMux extends Chip {\n  constructor() {\n    super([\"in\", \"sel\"], [\"a\", \"b\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").voltage();\n\n    const [a, b] = dmux(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n  }\n}\n\nexport class DMux4Way extends Chip {\n  constructor() {\n    super([\"in\", \"sel[2]\"], [\"a\", \"b\", \"c\", \"d\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").busVoltage;\n\n    const [a, b, c, d] = dmux4way(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n    this.out(\"c\").pull(c);\n    this.out(\"d\").pull(d);\n  }\n}\n\nexport class DMux8Way extends Chip {\n  constructor() {\n    super([\"in\", \"sel[3]\"], [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").busVoltage;\n\n    const [a, b, c, d, e, f, g, h] = dmux8way(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n    this.out(\"c\").pull(c);\n    this.out(\"d\").pull(d);\n    this.out(\"e\").pull(e);\n    this.out(\"f\").pull(f);\n    this.out(\"g\").pull(g);\n    this.out(\"h\").pull(h);\n  }\n}\n","import { Chip, LOW, Voltage } from \"../../chip.js\";\n\nexport function mux(a: Voltage, b: Voltage, sel: Voltage): [Voltage] {\n  return [sel === LOW ? a : b];\n}\n\nexport function mux16(a: number, b: number, sel: Voltage): [number] {\n  return [sel === LOW ? a : b];\n}\n\nexport function mux16_4(\n  a: number,\n  b: number,\n  c: number,\n  d: number,\n  sel: number\n): [number] {\n  const s2 = (sel & 0b01) as Voltage;\n  return (sel & 0b10) === 0b00 ? mux16(a, b, s2) : mux16(c, d, s2);\n}\n\nexport function mux16_8(\n  a: number,\n  b: number,\n  c: number,\n  d: number,\n  e: number,\n  f: number,\n  g: number,\n  h: number,\n  sel: number\n): [number] {\n  const s2 = (sel & 0b11) as Voltage;\n  return (sel & 0b100) === 0b000\n    ? mux16_4(a, b, c, d, s2)\n    : mux16_4(e, f, g, h, s2);\n}\n\nexport class Mux extends Chip {\n  constructor() {\n    super([\"a\", \"b\", \"sel\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const sel = this.in(\"sel\").voltage();\n\n    const [set] = mux(a, b, sel);\n    this.out().pull(set);\n  }\n}\n\nexport class Mux16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\", \"sel\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const sel = this.in(\"sel\").voltage();\n    const [out] = mux16(a, b, sel);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Mux4Way16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\", \"c[16]\", \"d[16]\", \"sel[2]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const c = this.in(\"c\").busVoltage;\n    const d = this.in(\"d\").busVoltage;\n    const sel = this.in(\"sel\").busVoltage;\n    const [out] = mux16_4(a, b, c, d, sel);\n\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Mux8Way16 extends Chip {\n  constructor() {\n    super(\n      [\n        \"a[16]\",\n        \"b[16]\",\n        \"c[16]\",\n        \"d[16]\",\n        \"e[16]\",\n        \"f[16]\",\n        \"g[16]\",\n        \"h[16]\",\n        \"sel[3]\",\n      ],\n      [\"out[16]\"]\n    );\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const c = this.in(\"c\").busVoltage;\n    const d = this.in(\"d\").busVoltage;\n    const e = this.in(\"e\").busVoltage;\n    const f = this.in(\"f\").busVoltage;\n    const g = this.in(\"g\").busVoltage;\n    const h = this.in(\"h\").busVoltage;\n    const sel = this.in(\"sel\").busVoltage;\n    const [out] = mux16_8(a, b, c, d, e, f, g, h, sel);\n\n    this.out().busVoltage = out;\n  }\n}\n","import { nand16 } from \"../../../util/twos.js\";\nimport { HIGH, LOW, Chip, Voltage } from \"../../chip.js\";\n\nexport function nand(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 && b === 1 ? LOW : HIGH];\n}\n\nexport class Nand extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = nand(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Nand16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    this.out().busVoltage = nand16(a, b);\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip.js\";\n\nexport function not(inn: Voltage): [Voltage] {\n  return [inn === LOW ? HIGH : LOW];\n}\n\nexport function not16(inn: number): [number] {\n  return [~inn & 0xffff];\n}\n\nexport class Not extends Chip {\n  constructor() {\n    super([\"in\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"in\").voltage();\n    const [out] = not(a);\n    this.out().pull(out);\n  }\n}\n\nexport class Not16 extends Chip {\n  constructor() {\n    super([\"in[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const [n] = not16(this.in().busVoltage);\n    this.out().busVoltage = n;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip.js\";\n\nexport function or(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 || b === 1 ? HIGH : LOW];\n}\n\nexport function or16(a: number, b: number): [number] {\n  return [(a | b) & 0xffff];\n}\n\nexport function or8way(a: number): [Voltage] {\n  return [(a & 0xff) === 0 ? LOW : HIGH];\n}\n\nexport class Or extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = or(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Or16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = or16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Or8way extends Chip {\n  constructor() {\n    super([\"in[8]\"], [\"out\"], \"Or8way\");\n  }\n\n  override eval() {\n    const inn = this.in().busVoltage;\n    const [out] = or8way(inn);\n    this.out().pull(out);\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip.js\";\n\nexport function xor(a: Voltage, b: Voltage): [Voltage] {\n  return [(a === HIGH && b === LOW) || (a === LOW && b === HIGH) ? HIGH : LOW];\n}\n\nexport function xor16(a: number, b: number): [number] {\n  return [(a ^ b) & 0xffff];\n}\n\nexport class Xor extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = xor(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Xor16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = xor16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n","import { Chip } from \"../../chip.js\";\n\nexport function add16(a: number, b: number): [number] {\n  return [(a + b) & 0xffff];\n}\n\nexport class Add16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"], \"Add16\");\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = add16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n","import { alu, COMMANDS_OP, Flags } from \"../../../cpu/alu.js\";\nimport { Chip, HIGH, LOW } from \"../../chip.js\";\n\nexport class ALUNoStat extends Chip {\n  constructor() {\n    super(\n      [\n        \"x[16]\",\n        \"y[16]\", // 16-bit inputs\n        \"zx\", // zero the x input?\n        \"nx\", // negate the x input?\n        \"zy\", // zero the y input?\n        \"ny\", // negate the y input?\n        \"f\", // compute out = x + y (if 1) or x & y (if 0)\n        \"no\", // negate the out output?\n      ],\n      [\n        \"out[16]\", // 16-bit output\n      ],\n      \"ALU\"\n    );\n  }\n\n  override eval() {\n    const x = this.in(\"x\").busVoltage;\n    const y = this.in(\"y\").busVoltage;\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    const [out] = alu(op, x, y);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class ALU extends Chip {\n  constructor() {\n    super(\n      [\n        \"x[16]\",\n        \"y[16]\", // 16-bit inputs\n        \"zx\", // zero the x input?\n        \"nx\", // negate the x input?\n        \"zy\", // zero the y input?\n        \"ny\", // negate the y input?\n        \"f\", // compute out = x + y (if 1) or x & y (if 0)\n        \"no\", // negate the out output?\n      ],\n      [\n        \"out[16]\", // 16-bit output\n        \"zr\", // 1 if (out === 0), 0 otherwise\n        \"ng\", // 1 if (out < 0),  0 otherwise\n      ],\n      \"ALU\"\n    );\n  }\n\n  override eval() {\n    const x = this.in(\"x\").busVoltage;\n    const y = this.in(\"y\").busVoltage;\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    const [out, flags] = alu(op, x, y);\n    const ng = flags === Flags.Negative ? HIGH : LOW;\n    const zr = flags === Flags.Zero ? HIGH : LOW;\n    this.out(\"out\").busVoltage = out;\n    this.out(\"ng\").pull(ng);\n    this.out(\"zr\").pull(zr);\n  }\n\n  op(): COMMANDS_OP {\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    return op as COMMANDS_OP;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip.js\";\n\nexport function halfAdder(a: Voltage, b: Voltage): [Voltage, Voltage] {\n  const sum = (a === 1 && b === 0) || (a === 0 && b === 1) ? HIGH : LOW;\n  const car = a === 1 && b === 1 ? HIGH : LOW;\n\n  return [sum, car];\n}\n\nexport class HalfAdder extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"sum\", \"carry\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [sum, carry] = halfAdder(a, b);\n    this.out(\"sum\").pull(sum);\n    this.out(\"carry\").pull(carry);\n  }\n}\n","import { Chip, Voltage } from \"../../chip.js\";\nimport { or } from \"../logic/or.js\";\nimport { halfAdder } from \"./half_adder.js\";\n\nexport function fullAdder(\n  a: Voltage,\n  b: Voltage,\n  c: Voltage\n): [Voltage, Voltage] {\n  const [s, ca] = halfAdder(a, b);\n  const [sum, cb] = halfAdder(s, c);\n  const [carry] = or(ca, cb);\n\n  return [sum, carry];\n}\n\nexport class FullAdder extends Chip {\n  constructor() {\n    super([\"a\", \"b\", \"c\"], [\"sum\", \"carry\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const c = this.in(\"c\").voltage();\n    const [sum, carry] = fullAdder(a, b, c);\n    this.out(\"sum\").pull(sum);\n    this.out(\"carry\").pull(carry);\n  }\n}\n","import { Chip } from \"../../chip.js\";\nimport { add16 } from \"./add_16.js\";\n\nexport function inc16(n: number): [number] {\n  return add16(n, 1);\n}\n\nexport class Inc16 extends Chip {\n  constructor() {\n    super([\"in[16]\"], [\"out[16]\"], \"Inc16\");\n  }\n\n  override eval() {\n    const a = this.in().busVoltage;\n    const [out] = inc16(a);\n    this.out().busVoltage = out;\n  }\n}\n","const asm = `\nASM <: Base {\n  Root := ASM\n  ASM = Instruction*\n  \n  Instruction = Label|AInstruction|CInstruction\n  \n  Label = OpenParen identifier closeParen\n  AInstruction = at (identifier | decNumber)\n  CInstruction = assign? op jmp?\n  \n  assign = (\n      \"AMD\"\n      | \"AM\"\n      | \"AD\"\n      | \"MD\"\n      | \"M\"\n      | \"D\"\n      | \"A\"\n      ) equal\n      \n  op =\n      | \"0\" | \"1\" | \"-1\"\n      | \"!D\" | \"!A\" | \"!M\"\n      | \"-D\" | \"-A\" | \"-M\"\n      | \"D+1\" | \"A+1\" | \"M+1\"\n      | \"D-1\" | \"A-1\" | \"M-1\"\n      | \"D+A\" | \"D+M\"\n      | \"D-A\" | \"D-M\"\n      | \"A-D\" | \"M-D\"\n      | \"D&A\" | \"D&M\"\n      | \"D|A\" | \"D|M\"\n      | \"D\" | \"A\" | \"M\"\n\n\n  jmp = semi (\"JGT\" | \"JEQ\" | \"JGE\" | \"JLT\" | \"JNE\" | \"JLE\" | \"JMP\")\n}`;\nexport default asm;\n","import { assertExists } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport ohm from \"ohm-js\";\nimport {\n  ASSIGN,\n  ASSIGN_ASM,\n  ASSIGN_OP,\n  COMMANDS,\n  COMMANDS_ASM,\n  COMMANDS_OP,\n  JUMP,\n  JUMP_ASM,\n  JUMP_OP,\n} from \"../cpu/alu.js\";\nimport { KEYBOARD, SCREEN } from \"../cpu/memory.js\";\nimport { makeC } from \"../util/asm.js\";\nimport { grammars, makeParser, baseSemantics } from \"./base.js\";\n\nimport asmGrammar from \"./grammars/asm.ohm.js\";\n\nexport const grammar = ohm.grammar(asmGrammar, grammars);\nexport const asmSemantics = grammar.extendSemantics(baseSemantics);\n\nexport interface Asm {\n  instructions: AsmInstruction[];\n}\n\nexport type AsmInstruction =\n  | AsmAInstruction\n  | AsmCInstruction\n  | AsmLabelInstruction;\n\nexport type AsmAInstruction = AsmALabelInstruction | AsmAValueInstruction;\nexport interface AsmALabelInstruction {\n  type: \"A\";\n  label: string;\n}\n\nexport interface AsmAValueInstruction {\n  type: \"A\";\n  value: number;\n}\n\nfunction isALabelInstruction(\n  inst: AsmAInstruction\n): inst is AsmALabelInstruction {\n  return (inst as AsmALabelInstruction).label !== undefined;\n}\n\nexport interface AsmCInstruction {\n  type: \"C\";\n  op: COMMANDS_OP;\n  isM: boolean;\n  store?: ASSIGN_OP;\n  jump?: JUMP_OP;\n}\n\nexport interface AsmLabelInstruction {\n  type: \"L\";\n  label: string;\n}\n\nasmSemantics.addAttribute<Asm>(\"root\", {\n  Root(_) {\n    return this.asm;\n  },\n});\n\nasmSemantics.addAttribute<Asm>(\"asm\", {\n  Root(asm) {\n    return {\n      instructions: asm\n        .child(0)\n        .children.map(({ instruction }) => instruction as AsmInstruction),\n    };\n  },\n});\n\nasmSemantics.addAttribute<AsmInstruction>(\"instruction\", {\n  AInstruction(_at, val): AsmAInstruction {\n    try {\n      return {\n        type: \"A\",\n        label: val.name,\n      };\n    } catch (e) {\n      // Pass\n    }\n\n    try {\n      return {\n        type: \"A\",\n        value: val.value,\n      };\n    } catch (e) {\n      // pass\n    }\n\n    throw new Error(`AsmAInstruction must have either a name or a value`);\n  },\n  CInstruction(assignN, opN, jmpN): AsmCInstruction {\n    const assign = assignN.child(0)?.child(0)?.sourceString as ASSIGN_ASM;\n    const op = opN.sourceString.replace(\"M\", \"A\") as COMMANDS_ASM;\n    const jmp = jmpN.child(0)?.child(1)?.sourceString as JUMP_ASM;\n    const isM =\n      assignN.sourceString.includes(\"M\") || opN.sourceString.includes(\"M\");\n    const inst: AsmCInstruction = {\n      type: \"C\",\n      op: COMMANDS.asm[op],\n      isM,\n    };\n    if (jmp) inst.jump = JUMP.asm[jmp];\n    if (assign) inst.store = ASSIGN.asm[assign];\n    return inst;\n  },\n  Label(_o, { name }, _c): AsmLabelInstruction {\n    return {\n      type: \"L\",\n      label: name,\n    };\n  },\n});\n\nexport function fillLabel(asm: Asm) {\n  let nextLabel = 16;\n  const symbols = new Map<string, number>([\n    [\"R0\", 0],\n    [\"R1\", 1],\n    [\"R2\", 2],\n    [\"R3\", 3],\n    [\"R4\", 4],\n    [\"R5\", 5],\n    [\"R6\", 6],\n    [\"R7\", 7],\n    [\"R8\", 8],\n    [\"R9\", 9],\n    [\"R10\", 10],\n    [\"R11\", 11],\n    [\"R12\", 12],\n    [\"R13\", 13],\n    [\"R14\", 14],\n    [\"R15\", 15],\n    [\"SP\", 0],\n    [\"LCL\", 1],\n    [\"ARG\", 2],\n    [\"THIS\", 3],\n    [\"THAT\", 4],\n    [\"SCREEN\", SCREEN],\n    [\"KBD\", KEYBOARD],\n  ]);\n\n  function getLabelValue(label: string) {\n    if (!symbols.has(label)) {\n      symbols.set(label, nextLabel);\n      nextLabel += 1;\n    }\n    return assertExists(symbols.get(label), `Label not in symbols: ${label}`);\n  }\n\n  function transmuteAInstruction(instruction: AsmALabelInstruction) {\n    const value = getLabelValue(instruction.label);\n    (instruction as unknown as AsmAValueInstruction).value = value;\n    delete (instruction as unknown as { label: undefined }).label;\n  }\n\n  const unfilled: AsmALabelInstruction[] = [];\n  let line = 0;\n  for (const instruction of asm.instructions) {\n    if (instruction.type === \"L\") {\n      if (symbols.has(instruction.label)) {\n        throw new Error(`ASM Duplicate label ${instruction.label}`);\n      } else {\n        symbols.set(instruction.label, line);\n      }\n      continue;\n    }\n\n    line += 1;\n\n    if (instruction.type === \"A\") {\n      if (isALabelInstruction(instruction)) {\n        unfilled.push(instruction);\n      }\n    }\n  }\n\n  unfilled.forEach(transmuteAInstruction);\n}\n\nexport function emit(asm: Asm): number[] {\n  return asm.instructions\n    .map((inst) => {\n      if (inst.type === \"A\") {\n        if (isALabelInstruction(inst)) {\n          throw new Error(`ASM Emitting unfilled A instruction`);\n        }\n        return inst.value;\n      }\n      if (inst.type === \"C\") {\n        return makeC(inst.isM, inst.op, inst.store, inst.jump);\n      }\n      return undefined;\n    })\n    .filter((op): op is number => op !== undefined);\n}\n\nexport const ASM = {\n  grammar: asmGrammar,\n  semantics: asmSemantics,\n  parser: grammar,\n  parse: makeParser<Asm>(grammar, asmSemantics),\n  passes: {\n    fillLabel,\n    emit,\n  },\n};\n","import { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs.js\";\nimport { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result.js\";\nimport { ASM } from \"./languages/asm.js\";\nimport { int2 } from \"./util/twos.js\";\n\nexport async function load(fs: FileSystem, path: string): Promise<number[]> {\n  if (path.endsWith(\".hack\")) {\n    return loadHack(fs, path);\n  }\n\n  if (path.endsWith(\".asm\")) {\n    return loadAsm(fs, path);\n  }\n\n  throw new Error(`Cannot load file without hack or asm extension ${path}`);\n}\n\nexport async function loadAsm(fs: FileSystem, path: string): Promise<number[]> {\n  const source = await fs.readFile(path);\n  const parsed = ASM.parse(source);\n  if (isErr(parsed)) {\n    throw Err(parsed);\n  }\n\n  const asm = Ok(parsed);\n  ASM.passes.fillLabel(asm);\n  return ASM.passes.emit(asm);\n}\n\nexport async function loadHack(\n  fs: FileSystem,\n  path: string\n): Promise<number[]> {\n  return (await fs.readFile(path))\n    .split(\"\\n\")\n    .filter((line) => line.trim() !== \"\")\n    .map(int2);\n}\n","import { assert } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs.js\";\nimport { Subject } from \"rxjs\";\nimport { op } from \"../util/asm.js\";\nimport { int10, int16, int2 } from \"../util/twos.js\";\nimport { load } from \"../fs.js\";\n\nexport const FORMATS = [\"bin\", \"dec\", \"hex\", \"asm\"];\nexport type Format = typeof FORMATS[number];\n\nexport const SCREEN = 0x4000;\nexport const SCREEN_ROWS = 512;\nexport const SCREEN_COLS = 256;\nexport const KEYBOARD = 0x6000;\n\nexport class Memory {\n  #memory: Int16Array;\n  updates = new Subject<void>();\n\n  get size(): number {\n    return this.#memory.length;\n  }\n\n  constructor(memory: ArrayBuffer | number) {\n    if (typeof memory === \"number\") {\n      this.#memory = new Int16Array(memory);\n    } else {\n      this.#memory = new Int16Array(memory);\n    }\n  }\n\n  get(index: number): number {\n    if (index < 0 || index >= this.size) {\n      return 0xffff;\n    }\n    return this.#memory[index] ?? 0;\n  }\n\n  set(index: number, value: number): void {\n    if (index >= 0 && index < this.size) {\n      this.#memory[index] = value & 0xffff;\n    }\n  }\n\n  update(cell: number, value: string, format: Format) {\n    let current: number;\n    switch (format) {\n      case \"asm\":\n        current = op(value);\n        break;\n      case \"bin\":\n        current = int2(value);\n        break;\n      case \"hex\":\n        current = int16(value);\n        break;\n      case \"dec\":\n      default:\n        current = int10(value);\n        break;\n    }\n\n    if (isFinite(current) && current <= 0xffff) {\n      this.set(cell, current);\n      this.updates.next();\n    }\n  }\n\n  async load(fs: FileSystem, path: string) {\n    try {\n      (await load(fs, path)).map((v, i) => this.set(i, v));\n    } catch (cause) {\n      // throw new Error(`ROM32K Failed to load file ${path}`, { cause });\n      throw new Error(`Memory Failed to load file ${path}`);\n    }\n  }\n\n  range(start = 0, end = this.size): number[] {\n    return [...this.#memory.slice(start, end)];\n  }\n\n  *map<T>(\n    fn: (index: number, value: number) => T,\n    start = 0,\n    end = this.size\n  ): Iterable<T> {\n    assert(start < end);\n    for (let i = start; i < end; i++) {\n      yield fn(i, this.get(i));\n    }\n  }\n}\n","import { Bus, ClockedChip, Pin } from \"../../chip.js\";\nimport { assert } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { Memory, Memory as MemoryChip } from \"../../../cpu/memory.js\";\n\nexport class RAM extends ClockedChip {\n  protected _memory: MemoryChip;\n  private _nextData = 0;\n  private _address = 0;\n\n  get memory() {\n    return this._memory;\n  }\n  get address() {\n    return this._address;\n  }\n\n  constructor(readonly width: number, name?: string) {\n    super([\"in[16]\", \"load\", `address[${width}]`], [`out[16]`], name);\n    this._memory = new MemoryChip(Math.pow(2, this.width));\n  }\n\n  override tick() {\n    const load = this.in(\"load\").voltage();\n    this._address = this.in(\"address\").busVoltage;\n    if (load) {\n      this._nextData = this.in().busVoltage;\n      this._memory.set(this._address, this._nextData);\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this._memory?.get(this._address) ?? 0;\n  }\n\n  override eval() {\n    const address = this.in(\"address\").busVoltage;\n    this.out().busVoltage = this._memory?.get(address) ?? 0;\n  }\n\n  at(idx: number): Pin {\n    assert(\n      idx < this._memory.size,\n      () => `Request out of bounds (${idx} >= ${this._memory.size})`\n    );\n    return new RamBus(`${this.name}[${idx}]`, idx, this._memory);\n  }\n}\n\nexport class RamBus extends Bus {\n  constructor(\n    name: string,\n    private readonly index: number,\n    private ram: Memory\n  ) {\n    super(name);\n  }\n\n  override get busVoltage(): number {\n    return this.ram.get(this.index);\n  }\n\n  override set busVoltage(num: number) {\n    this.ram.set(this.index, num);\n  }\n}\n\nexport class RAM8 extends RAM {\n  constructor(name?: string) {\n    super(3, name);\n  }\n}\n\nexport class RAM64 extends RAM {\n  constructor(name?: string) {\n    super(6, name);\n  }\n}\n\nexport class RAM512 extends RAM {\n  constructor(name?: string) {\n    super(9, name);\n  }\n}\n\nexport class RAM4K extends RAM {\n  constructor(name?: string) {\n    super(12, name);\n  }\n}\n\nexport class RAM16K extends RAM {\n  constructor(name?: string) {\n    super(14, name);\n  }\n}\n","import { alu, COMMANDS_OP, Flags } from \"./alu.js\";\nimport { Memory } from \"./memory.js\";\n\nexport interface CPUInput {\n  inM: number;\n  instruction: number;\n  reset: boolean;\n}\n\nexport interface CPUOutput {\n  outM: number;\n  writeM: boolean;\n  addressM: number;\n}\n\nexport interface CPUState {\n  A: number;\n  D: number;\n  PC: number;\n  ALU: number;\n  flag: number;\n}\n\nexport function emptyState(): CPUState {\n  return { A: 0, D: 0, PC: 0, ALU: 0, flag: Flags.Zero };\n}\n\nconst BITS = {\n  c: 0b1000_0000_0000_0000,\n  x1: 0b1001_0000_0000_0000,\n  x2: 0b1001_0000_0000_0000,\n  am: 0b1001_0000_0000_0000,\n  op: 0b0000_1111_1100_0000,\n  d1: 0b1000_0000_0010_0000,\n  d2: 0b1000_0000_0001_0000,\n  d3: 0b1000_0000_0000_1000,\n  j1: 0b1000_0000_0000_0001,\n  j2: 0b1000_0000_0000_0010,\n  j3: 0b1000_0000_0000_0100,\n};\n\nexport function decode(instruction: number) {\n  function bit(bit: number): boolean {\n    return (instruction & bit) === bit;\n  }\n  const bits = {\n    c: bit(BITS.c),\n    x1: bit(BITS.x1),\n    x2: bit(BITS.x2),\n    am: bit(BITS.am),\n    op: ((instruction & BITS.op) >> 6) as COMMANDS_OP,\n    d1: bit(BITS.d1),\n    d2: bit(BITS.d2),\n    d3: bit(BITS.d3),\n    j1: bit(BITS.j1),\n    j2: bit(BITS.j2),\n    j3: bit(BITS.j3),\n  };\n\n  return bits;\n}\n\nexport function cpuTick(\n  { inM, instruction }: CPUInput,\n  { A, D, PC }: CPUState\n): [CPUState, boolean] {\n  const bits = decode(instruction);\n  const a = bits.am ? inM : A;\n  const [ALU, flag] = alu(bits.op, D, a);\n\n  return [{ A, D, PC: PC + 1, ALU, flag }, bits.d3];\n}\n\nexport function cpuTock(\n  { inM, instruction, reset }: CPUInput,\n  { A, D, PC, ALU, flag }: CPUState\n): [CPUOutput, CPUState] {\n  const bits = decode(instruction);\n\n  const j1 = bits.j1 && flag === Flags.Positive;\n  const j2 = bits.j2 && flag === Flags.Zero;\n  const j3 = bits.j3 && flag === Flags.Negative;\n  const jmp = j1 || j2 || j3;\n\n  PC = reset ? 0 : jmp ? A : PC;\n\n  if (bits.d2) {\n    D = ALU;\n  }\n\n  if (!bits.c) {\n    A = instruction & 0x7fff;\n  } else if (bits.d1) {\n    A = ALU;\n  }\n\n  const a = bits.am ? inM : A;\n  const alu2 = alu(bits.op, D, a);\n\n  ALU = alu2[0];\n  flag = alu2[1];\n\n  const output: CPUOutput = {\n    addressM: A,\n    outM: ALU,\n    writeM: bits.d3,\n  };\n\n  const state: CPUState = {\n    A,\n    D,\n    ALU,\n    flag,\n    PC,\n  };\n\n  return [output, state];\n}\n\nexport function cpu(input: CPUInput, state: CPUState): [CPUOutput, CPUState] {\n  const [tickState, _writeM] = cpuTick(input, state);\n  return cpuTock(input, tickState);\n}\n\nexport class CPU {\n  RAM: Memory;\n  ROM: Memory;\n\n  #pc = 0;\n  #a = 0;\n  #d = 0;\n\n  #tickState: CPUState = {\n    A: 0,\n    D: 0,\n    PC: 0,\n    ALU: 0,\n    flag: Flags.Zero,\n  };\n\n  get state(): CPUState {\n    return this.#tickState;\n  }\n\n  get PC() {\n    return this.#pc;\n  }\n\n  get A() {\n    return this.#a;\n  }\n\n  get D() {\n    return this.#d;\n  }\n\n  constructor({\n    RAM = new Memory(0x7fff),\n    ROM,\n  }: {\n    RAM?: Memory;\n    ROM: Memory;\n  }) {\n    this.RAM = RAM;\n    this.ROM = ROM;\n  }\n\n  reset() {\n    this.#pc = 0;\n    this.#a = 0;\n    this.#d = 0;\n  }\n\n  tick() {\n    const [{ addressM, outM, writeM }, { A, D, PC }] = cpu(\n      {\n        inM: this.RAM.get(this.#a),\n        instruction: this.ROM.get(this.#pc),\n        reset: false,\n      },\n      {\n        A: this.#a,\n        D: this.#d,\n        PC: this.#pc,\n        ALU: this.#d,\n        flag: Flags.Zero,\n      }\n    );\n\n    this.#a = A;\n    this.#d = D;\n    this.#pc = PC;\n\n    if (writeM) {\n      this.RAM.set(addressM, outM);\n    }\n  }\n}\n","import { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs.js\";\n// import { Screen as ScreenComponent } from \"../../../../app/components/chips/screen.js\";\n// import { Keyboard as KeyboardComponent } from \"../../../../app/components/chips/keyboard.js\";\n// import { RegisterComponent } from \"../../../../app/components/chips/register.js\";\n// import { ALUComponent } from \"../../../../app/components/chips/alu.js\";\n// import { Flags } from \"../../../cpu/alu.js\";\nimport { Chip, ClockedChip, ConstantBus, HIGH, LOW, Pin } from \"../../chip.js\";\nimport { RAM, RAM16K } from \"../sequential/ram.js\";\nimport {\n  CPUInput,\n  CPUState,\n  cpuTick,\n  cpuTock,\n  emptyState,\n} from \"../../../cpu/cpu.js\";\nimport { int10 } from \"../../../util/twos.js\";\nimport { load } from \"../../../fs.js\";\nimport { KEYBOARD, SCREEN } from \"../../../cpu/memory.js\";\n\nexport class ROM32K extends RAM {\n  constructor() {\n    super(16, \"ROM\");\n  }\n\n  override async load(fs: FileSystem, path: string) {\n    try {\n      (await load(fs, path)).map((v, i) => (this.at(i).busVoltage = v));\n    } catch (cause) {\n      // throw new Error(`ROM32K Failed to load file ${path}`, { cause });\n      throw new Error(`ROM32K Failed to load file ${path}`);\n    }\n  }\n}\n\nexport class Screen extends RAM {\n  static readonly OFFSET = SCREEN;\n\n  constructor() {\n    super(13, \"Screen\");\n  }\n}\n\nexport class Keyboard extends Chip {\n  static readonly OFFSET = KEYBOARD;\n\n  constructor() {\n    super([], [\"out[16]\"], \"Keyboard\");\n  }\n\n  setKey(key: number) {\n    this.out().busVoltage = key & 0xffff;\n  }\n\n  clearKey() {\n    this.out().busVoltage = 0;\n  }\n}\n\nexport class Memory extends ClockedChip {\n  private ram = new RAM16K();\n  private screen = new Screen();\n  private keyboard = new Keyboard();\n  private address = 0;\n\n  constructor() {\n    super([\"in[16]\", \"load\", \"address[15])\"], [\"out[16]\"], \"Memory\");\n    this.parts.add(this.keyboard);\n    this.parts.add(this.screen);\n    this.parts.add(this.ram);\n  }\n\n  override tick() {\n    const load = this.in(\"load\").voltage();\n    this.address = this.in(\"address\").busVoltage;\n    if (load) {\n      const inn = this.in().busVoltage;\n      if (this.address >= Keyboard.OFFSET) {\n        // Keyboard, do nothing\n      } else if (this.address >= Screen.OFFSET) {\n        this.screen.at(this.address - Screen.OFFSET).busVoltage = inn;\n      } else {\n        this.ram.at(this.address).busVoltage = inn;\n      }\n    }\n  }\n\n  override tock() {\n    this.eval();\n  }\n\n  override eval() {\n    if (!this.ram) return;\n    this.address = this.in(\"address\").busVoltage;\n    let out = 0;\n    if (this.address >= Keyboard.OFFSET) {\n      // Keyboard, do nothing\n      out = this.keyboard?.out().busVoltage ?? 0;\n    } else if (this.address >= Screen.OFFSET) {\n      out = this.screen?.at(this.address - Screen.OFFSET).busVoltage ?? 0;\n    } else {\n      out = this.ram?.at(this.address).busVoltage ?? 0;\n    }\n    this.out().busVoltage = out;\n  }\n\n  override in(pin?: string): Pin {\n    if (pin?.startsWith(\"RAM16K\")) {\n      const idx = int10(pin.match(/\\[(?<idx>\\d+)]/)?.groups?.idx ?? \"0\");\n      return this.ram.at(idx);\n    }\n    if (pin?.startsWith(\"Screen\")) {\n      const idx = int10(pin.match(/\\[(?<idx>\\d+)]/)?.groups?.idx ?? \"0\");\n      return this.screen.at(idx);\n    }\n    return super.in(pin);\n  }\n\n  override get(name: string, offset = 0): Pin | undefined {\n    if (name.startsWith(\"RAM16K\")) {\n      return this.at(offset & 0x3fff);\n    }\n    if (name.startsWith(\"Screen\")) {\n      return this.at(offset & (0x1fff + Screen.OFFSET));\n    }\n    if (name.startsWith(\"Keyboard\")) {\n      return this.at(Keyboard.OFFSET);\n    }\n    if (name.startsWith(\"Memory\")) {\n      return this.at(offset);\n    }\n    return super.get(name, offset);\n  }\n\n  at(offset: number): Pin {\n    if (offset >= Keyboard.OFFSET) {\n      return this.keyboard.out();\n    }\n    if (offset >= Screen.OFFSET) {\n      return this.screen.at(offset - Screen.OFFSET);\n    } else {\n      return this.ram.at(offset);\n    }\n  }\n}\n\nexport class CPU extends ClockedChip {\n  private _state: CPUState = emptyState();\n\n  get state(): CPUState {\n    return this._state;\n  }\n\n  constructor() {\n    super(\n      [\"inM[16]\", \"instruction[16]\", \"reset\"],\n      [\"outM[16]\", \"writeM\", \"addressM[15]\", \"pc[15]\"]\n    );\n  }\n\n  override tick(): void {\n    const [state, writeM] = cpuTick(this.cpuInput(), this._state);\n    this._state = state;\n    this.out(\"writeM\").pull(writeM ? HIGH : LOW);\n    this.out(\"outM\").busVoltage = this._state.ALU ?? 0;\n  }\n\n  override tock(): void {\n    if (!this._state) return; // Skip initial tock\n    const [output, state] = cpuTock(this.cpuInput(), this._state);\n    this._state = state;\n\n    this.out(\"addressM\").busVoltage = output.addressM ?? 0;\n    this.out(\"outM\").busVoltage = output.outM ?? 0;\n    this.out(\"writeM\").pull(output.writeM ? HIGH : LOW);\n    this.out(\"pc\").busVoltage = this._state?.PC ?? 0;\n  }\n\n  private cpuInput(): CPUInput {\n    const inM = this.in(\"inM\").busVoltage;\n    const instruction = this.in(\"instruction\").busVoltage;\n    const reset = this.in(\"reset\").busVoltage === 1;\n    return { inM, instruction, reset };\n  }\n\n  override get(pin: string, offset?: number): Pin | undefined {\n    if (pin?.startsWith(\"ARegister\")) {\n      return new ConstantBus(\"ARegister\", this._state.A);\n    }\n    if (pin?.startsWith(\"DRegister\")) {\n      return new ConstantBus(\"DRegister\", this._state.D);\n    }\n    if (pin?.startsWith(\"PC\")) {\n      return new ConstantBus(\"PC\", this._state.PC);\n    }\n    return super.get(pin, offset);\n  }\n\n  override reset() {\n    this._state = emptyState();\n    super.reset();\n  }\n}\n\nexport class Computer extends Chip {\n  #ram = new Memory();\n  #rom = new ROM32K();\n  #cpu = new CPU();\n\n  constructor() {\n    super([\"reset\"], []);\n\n    this.wire(this.#cpu, [\n      { from: { name: \"reset\", start: 0 }, to: { name: \"reset\", start: 0 } },\n      {\n        from: { name: \"instruction\", start: 0 },\n        to: { name: \"instruction\", start: 0 },\n      },\n      { from: { name: \"outM\", start: 0 }, to: { name: \"inM\", start: 0 } },\n      { from: { name: \"writeM\", start: 0 }, to: { name: \"writeM\", start: 0 } },\n      {\n        from: { name: \"addressM\", start: 0 },\n        to: { name: \"addressM\", start: 0 },\n      },\n    ]);\n\n    this.wire(this.#rom, [\n      { from: { name: \"pc\", start: 0 }, to: { name: \"address\", start: 0 } },\n      {\n        from: { name: \"instruction\", start: 0 },\n        to: { name: \"out\", start: 0 },\n      },\n    ]);\n\n    this.wire(this.#ram, [\n      { from: { name: \"inM\", start: 0 }, to: { name: \"in\", start: 0 } },\n      { from: { name: \"writeM\", start: 0 }, to: { name: \"load\", start: 0 } },\n      {\n        from: { name: \"addressM\", start: 0 },\n        to: { name: \"address\", start: 0 },\n      },\n      { from: { name: \"outM\", start: 0 }, to: { name: \"out\", start: 0 } },\n    ]);\n  }\n\n  override eval() {\n    super.eval();\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    if (\n      name.startsWith(\"PC\") ||\n      name.startsWith(\"ARegister\") ||\n      name.startsWith(\"DRegister\")\n    ) {\n      return this.#cpu.get(name);\n    }\n    if (name.startsWith(\"RAM16K\")) {\n      return this.#ram.get(name, offset);\n    }\n    return super.get(name, offset);\n  }\n\n  override load(fs: FileSystem, path: string): Promise<void> {\n    return this.#rom.load(fs, path);\n  }\n}\n","import { ClockedChip, HIGH, LOW, Pin, Voltage } from \"../../chip.js\";\n\nexport class Bit extends ClockedChip {\n  bit: Voltage = LOW;\n\n  constructor(name?: string) {\n    super([\"in\", \"load\"], [\"out\"], name);\n  }\n\n  override tick() {\n    if (this.in(\"load\").voltage() === HIGH) {\n      this.bit = this.in().voltage();\n    }\n  }\n\n  override tock() {\n    this.out().pull(this.bit ?? 0);\n  }\n\n  override reset() {\n    this.bit = LOW;\n  }\n}\n\nexport class Register extends ClockedChip {\n  bits = 0x00;\n\n  constructor(name?: string) {\n    super([\"in[16]\", \"load\"], [\"out[16]\"], name);\n  }\n\n  override tick() {\n    if (this.in(\"load\").voltage() === HIGH) {\n      this.bits = this.in().busVoltage & 0xffff;\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.bits & 0xffff;\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    return name === this.name ? this.out() : super.get(name, offset);\n  }\n\n  override reset() {\n    this.bits = 0x00;\n  }\n}\n\nexport class VRegister extends Register {}\n\nexport class PC extends ClockedChip {\n  bits = 0x00;\n\n  constructor(name?: string) {\n    super([\"in[16]\", \"load\", \"inc\", \"reset\"], [\"out[16]\"], name);\n  }\n\n  override tick() {\n    if (this.in(\"reset\").voltage() === HIGH) {\n      this.bits = 0;\n    } else if (this.in(\"load\").voltage() === HIGH) {\n      this.bits = this.in().busVoltage & 0xffff;\n    } else if (this.in(\"inc\").voltage() === HIGH) {\n      this.bits += 1;\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.bits & 0xffff;\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    return name === this.name ? this.out() : super.get(name, offset);\n  }\n\n  override reset() {\n    this.bits = 0x00;\n  }\n}\n","import { Err, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result.js\";\nimport { Chip } from \"../chip.js\";\n\nimport { And, And16 } from \"./logic/and.js\";\nimport { DMux, DMux4Way, DMux8Way } from \"./logic/dmux.js\";\nimport { Mux, Mux16, Mux4Way16, Mux8Way16 } from \"./logic/mux.js\";\nimport { Nand, Nand16 } from \"./logic/nand.js\";\nimport { Not, Not16 } from \"./logic/not.js\";\nimport { Or, Or16, Or8way } from \"./logic/or.js\";\nimport { Xor, Xor16 } from \"./logic/xor.js\";\n\nimport { Add16 } from \"./arithmetic/add_16.js\";\nimport { ALU, ALUNoStat } from \"./arithmetic/alu.js\";\nimport { FullAdder } from \"./arithmetic/full_adder.js\";\nimport { HalfAdder } from \"./arithmetic/half_adder.js\";\nimport { Inc16 } from \"./arithmetic/inc16.js\";\n\nimport {\n  Computer,\n  CPU,\n  Keyboard,\n  Memory,\n  ROM32K,\n  Screen,\n} from \"./computer/computer.js\";\nimport { Bit, PC, Register, VRegister } from \"./sequential/bit.js\";\nimport { DFF } from \"./sequential/dff.js\";\nimport { RAM16K, RAM4K, RAM512, RAM64, RAM8 } from \"./sequential/ram.js\";\n\nexport {\n  And,\n  And16,\n  DMux,\n  Mux,\n  Mux16,\n  Mux4Way16,\n  Mux8Way16,\n  Nand,\n  Nand16,\n  Not,\n  Not16,\n  Or,\n  Or16,\n  Or8way,\n  Xor,\n  Xor16,\n  HalfAdder,\n  FullAdder,\n  Add16,\n  Inc16,\n  ALU,\n  Bit,\n  Register,\n  VRegister as ARegister,\n  VRegister as DRegister,\n  DFF,\n  RAM8,\n  RAM64,\n  RAM512,\n  RAM4K,\n  RAM16K,\n};\n\nexport const REGISTRY = new Map<string, () => Chip>(\n  (\n    [\n      [\"Nand\", Nand],\n      [\"Nand16\", Nand16],\n      [\"Not\", Not],\n      [\"Not16\", Not16],\n      [\"And\", And],\n      [\"And16\", And16],\n      [\"Or\", Or],\n      [\"Or16\", Or16],\n      [\"Or8Way\", Or8way],\n      [\"XOr\", Xor],\n      [\"XOr16\", Xor16],\n      [\"Xor\", Xor],\n      [\"Xor16\", Xor16],\n      [\"Mux\", Mux],\n      [\"Mux16\", Mux16],\n      [\"Mux4Way16\", Mux4Way16],\n      [\"Mux8Way16\", Mux8Way16],\n      [\"DMux\", DMux],\n      [\"DMux4Way\", DMux4Way],\n      [\"DMux8Way\", DMux8Way],\n      [\"HalfAdder\", HalfAdder],\n      [\"FullAdder\", FullAdder],\n      [\"Add16\", Add16],\n      [\"Inc16\", Inc16],\n      [\"ALU\", ALU],\n      [\"ALUNoStat\", ALUNoStat],\n      [\"DFF\", DFF],\n      [\"Bit\", Bit],\n      [\"Register\", Register],\n      [\"ARegister\", Register],\n      [\"DRegister\", Register],\n      [\"PC\", PC],\n      [\"RAM8\", RAM8],\n      [\"RAM64\", RAM64],\n      [\"RAM512\", RAM512],\n      [\"RAM4K\", RAM4K],\n      [\"RAM16K\", RAM16K],\n      [\"ROM32K\", ROM32K],\n      [\"Screen\", Screen],\n      [\"Keyboard\", Keyboard],\n      [\"CPU\", CPU],\n      [\"Computer\", Computer],\n      [\"Memory\", Memory],\n      [\"ARegister\", VRegister],\n      [\"DRegister\", VRegister],\n    ] as [string, { new (): Chip }][]\n  ).map(([name, ChipCtor]) => [\n    name,\n    () => {\n      const chip = new ChipCtor();\n      chip.name = name;\n      return chip;\n    },\n  ])\n);\n\nexport function getBuiltinChip(name: string): Result<Chip> {\n  const chip = REGISTRY.get(name);\n  return chip\n    ? Ok(chip())\n    : Err(new Error(`Chip ${name} not in builtin registry`));\n}\n","import { ClockedChip } from \"../../chip.js\";\n\nexport class DFF extends ClockedChip {\n  constructor(name?: string) {\n    super([\"in\"], [\"out\"], name, [\"t\"]);\n  }\n\n  override tick() {\n    // Read in into t\n    const t = this.in().voltage();\n    this.pin(\"t\").pull(t);\n  }\n\n  override tock() {\n    // write t into out\n    const t = this.pin(\"t\").voltage();\n    this.out().pull(t);\n  }\n}\n","import {\n  Err,\n  isErr,\n  Ok,\n  Result,\n} from \"@davidsouther/jiffies/lib/esm/result.js\";\nimport { HDL, HdlParse } from \"../languages/hdl.js\";\nimport { getBuiltinChip } from \"./builtins/index.js\";\nimport { Chip, Connection } from \"./chip.js\";\n\nfunction pinWidth(start: number, end: number | undefined): number | undefined {\n  if (end === undefined) {\n    return undefined;\n  }\n  if (end >= start) {\n    return end - start + 1;\n  }\n  if (start > 0 && end === 0) {\n    return 1;\n  }\n  throw new Error(`Bus specification has start > end (${start} > ${end})`);\n}\n\nexport function parse(\n  code: string\n): Result<Chip, Error | { message: string; shortMessage: string }> {\n  const parsed = HDL.parse(code.toString());\n  if (isErr(parsed)) return parsed;\n  return build(Ok(parsed));\n}\n\nexport function build(parts: HdlParse): Result<Chip, Error> {\n  if (parts.parts === \"BUILTIN\") {\n    return getBuiltinChip(parts.name.toString());\n  }\n\n  const buildChip = new Chip(\n    parts.ins.map(({ pin, width }) => ({ pin: pin.toString(), width })),\n    parts.outs.map(({ pin, width }) => ({ pin: pin.toString(), width })),\n    parts.name.toString(),\n    [],\n    parts.clocked\n  );\n\n  for (const part of parts.parts) {\n    const builtin = getBuiltinChip(part.name.toString());\n    if (isErr(builtin)) return builtin;\n    const partChip = Ok(builtin);\n\n    const wires = part.wires.map<Connection>(({ lhs, rhs }) => ({\n      to: {\n        name: lhs.pin.toString(),\n        start: lhs.start ?? 0,\n        width: pinWidth(lhs.start ?? 0, lhs.end),\n      },\n      from: {\n        name: rhs.pin.toString(),\n        start: rhs.start ?? 0,\n        width: pinWidth(rhs.start ?? 0, rhs.end),\n      },\n    }));\n\n    try {\n      buildChip.wire(partChip, wires);\n    } catch (e) {\n      return Err(e as Error);\n    }\n  }\n\n  return Ok(buildChip);\n}\n","import { assert } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { bin, dec, hex } from \"./util/twos.js\";\nimport { Test } from \"./tst.js\";\n\nexport class Output {\n  private readonly fmt: \"B\" | \"X\" | \"D\" | \"S\";\n  private readonly lPad: number;\n  private readonly rPad: number;\n  private readonly len: number;\n  private readonly index: number;\n  private readonly builtin: boolean;\n\n  // new Output(inst.id, inst.style, inst.width, inst.lpad, inst.rpad)\n  constructor(\n    private variable: string,\n    format = \"%B1.1.1\",\n    len?: number,\n    lPad?: number,\n    rPad?: number,\n    builtin?: boolean,\n    index?: number\n  ) {\n    if (\n      format.startsWith(\"%\") &&\n      len === undefined &&\n      lPad === undefined &&\n      rPad === undefined\n    ) {\n      const { fmt, lPad, rPad, len } = format.match(\n        /^%(?<fmt>[BDXS])(?<lPad>\\d+)\\.(?<len>\\d+)\\.(?<rPad>\\d+)$/\n      )?.groups as {\n        fmt: \"B\" | \"X\" | \"D\" | \"S\";\n        lPad: string;\n        rPad: string;\n        len: string;\n      };\n      this.fmt = fmt;\n      this.lPad = parseInt(lPad);\n      this.rPad = parseInt(rPad);\n      this.len = parseInt(len);\n      this.builtin = false;\n      this.index = -1;\n    } else {\n      assert([\"B\", \"X\", \"D\", \"S\"].includes(format[0]));\n      this.fmt = format[0] as \"B\" | \"X\" | \"D\" | \"S\";\n      this.len = len ?? 3;\n      this.lPad = lPad ?? 1;\n      this.rPad = rPad ?? 1;\n      this.builtin = builtin ?? false;\n      this.index = index ?? -1;\n    }\n  }\n\n  header(test: Test) {\n    let variable = `${this.variable}`;\n    if (this.builtin) {\n      const index = this.index >= 0 ? this.index : \"\";\n      variable = `${variable}[${index}]`;\n    }\n    if (variable.length > this.len + this.lPad + this.rPad) {\n      return variable.substring(0, this.len + this.lPad + this.rPad);\n    }\n    return this.padCenter(variable);\n  }\n\n  print(test: Test) {\n    const val = test.getVar(this.variable, this.index);\n    if (this.fmt === \"S\") {\n      return this.padLeft(val as string);\n    }\n\n    const fmt = { B: bin, D: dec, X: hex }[this.fmt];\n    const value = fmt(val as number);\n    if (this.fmt === \"D\") {\n      return this.padRight(value);\n    } else {\n      return this.padCenter(value.slice(value.length - this.len));\n    }\n  }\n\n  private padCenter(value: string) {\n    const space = this.lPad + this.len + this.rPad;\n    const leftSpace = Math.floor((space - value.length) / 2);\n    const rightSpace = space - leftSpace - value.length;\n    const padLeft = leftSpace + value.length;\n    const padRight = padLeft + rightSpace;\n    value = value.padStart(padLeft);\n    value = value.padEnd(padRight);\n    return value;\n  }\n\n  private padLeft(value: string) {\n    value = value.substring(0, this.len);\n    const padRight = this.rPad + this.len;\n    const padLeft = this.lPad + padRight;\n    value = value.padEnd(padRight);\n    value = value.padStart(padLeft);\n    return value;\n  }\n\n  private padRight(value: string) {\n    value = value.substring(0, this.len);\n    const padLeft = this.lPad + this.len;\n    const padRight = this.rPad + padLeft;\n    value = value.padStart(padLeft);\n    value = value.padEnd(padRight);\n    return value;\n  }\n}\n","import { checkExhaustive } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs.js\";\nimport { Span } from \"./languages/base.js\";\nimport {\n  Tst,\n  TstLineStatement,\n  TstOperation,\n  TstOutputSpec,\n  TstStatement,\n  TstWhileStatement,\n} from \"./languages/tst.js\";\nimport { Bus, Chip, HIGH, Low, LOW } from \"./chip/chip.js\";\nimport { Clock } from \"./chip/clock.js\";\nimport { Output } from \"./output.js\";\n\nexport abstract class Test<IS extends TestInstruction = TestInstruction> {\n  protected readonly instructions: (IS | TestInstruction)[] = [];\n  protected _outputList: Output[] = [];\n  protected _log = \"\";\n  fs: FileSystem = new FileSystem();\n\n  setFileSystem(fs: FileSystem) {\n    this.fs = fs;\n  }\n\n  echo(_content: string) {\n    return undefined;\n  }\n  clearEcho() {\n    return undefined;\n  }\n\n  async load(_filename: string): Promise<void> {\n    return undefined;\n  }\n  async compareTo(_filename: string): Promise<void> {\n    return undefined;\n  }\n  outputFile(_filename: string): void {\n    return undefined;\n  }\n  outputList(outputs: Output[]): void {\n    this._outputList = outputs;\n  }\n\n  addInstruction(instruction: IS | TestInstruction): void {\n    this.instructions.push(instruction);\n  }\n\n  reset(): void {\n    // No generator arrow functions\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const test = this;\n    this._steps = (function* () {\n      for (const instruction of test.instructions) {\n        yield* instruction.steps(test);\n      }\n    })();\n    this._log = \"\";\n  }\n\n  _steps: IterableIterator<IS | TestInstruction> | undefined;\n  _step: IteratorResult<IS | TestInstruction, IS | TestInstruction> | undefined;\n\n  get steps(): Iterator<IS | TestInstruction> {\n    if (this._steps === undefined) {\n      this.reset();\n    }\n    if (this._steps === undefined) {\n      throw new Error(\"Reset did not initialize steps\");\n    }\n    return this._steps;\n  }\n\n  get currentStep(): IS | TestInstruction | undefined {\n    return this._step?.value;\n  }\n\n  async step() {\n    this._step = this.steps.next();\n    if (!this._step.done) {\n      await this._step.value.do(this);\n      return false;\n    }\n    return true;\n  }\n\n  async run() {\n    while (!(await this.step()));\n  }\n\n  protected readonly breakpoints: Map<string, number> = new Map();\n  addBreakpoint(variable: string, value: number) {\n    this.breakpoints.set(variable, value);\n  }\n  clearBreakpoints() {\n    this.breakpoints.clear();\n  }\n\n  output() {\n    const values = this._outputList.map((output) => output.print(this));\n    this._log += `|${values.join(\"|\")}|\\n`;\n  }\n\n  header() {\n    const values = this._outputList.map((output) => output.header(this));\n    this._log += `|${values.join(\"|\")}|\\n`;\n  }\n\n  log() {\n    return this._log;\n  }\n\n  abstract hasVar(variable: string | number): boolean;\n  abstract getVar(variable: string | number, offset?: number): number | string;\n  abstract setVar(variable: string, value: number, offset?: number): void;\n}\n\nfunction isTstLineStatment(line: TstStatement): line is TstLineStatement {\n  return (line as TstLineStatement).ops !== undefined;\n}\n\nfunction isTstWhileStatement(line: TstStatement): line is TstWhileStatement {\n  return (line as TstWhileStatement).condition !== undefined;\n}\n\nexport class ChipTest extends Test<ChipTestInstruction> {\n  private chip: Chip = new Low();\n  private clock = Clock.get();\n\n  static from(tst: Tst): ChipTest {\n    const test = new ChipTest();\n\n    for (const line of tst.lines) {\n      if (isTstLineStatment(line)) {\n        test.addInstruction(ChipTest.makeLineStatement(line));\n      } else {\n        const repeat = isTstWhileStatement(line)\n          ? new TestWhileInstruction(\n              new Condition(\n                line.condition.left,\n                line.condition.right,\n                line.condition.op\n              )\n            )\n          : new TestRepeatInstruction(line.count);\n        repeat.span = line.span;\n        test.addInstruction(repeat);\n        for (const statement of line.statements) {\n          repeat.addInstruction(ChipTest.makeLineStatement(statement));\n        }\n      }\n    }\n\n    return test;\n  }\n\n  private static makeLineStatement(line: TstLineStatement) {\n    const statement = new TestCompoundInstruction();\n    statement.span = line.span;\n    for (const op of line.ops) {\n      statement.addInstruction(ChipTest.makeInstruction(op));\n    }\n    return statement;\n  }\n\n  private static makeInstruction(inst: TstOperation) {\n    const { op } = inst;\n    switch (op) {\n      case \"tick\":\n        return new TestTickInstruction();\n      case \"tock\":\n        return new TestTockInstruction();\n      case \"eval\":\n        return new TestEvalInstruction();\n      case \"output\":\n        return new TestOutputInstruction();\n      case \"set\":\n        return new TestSetInstruction(inst.id, inst.value, inst.index);\n      case \"output-list\":\n        return new TestOutputListInstruction(inst.spec);\n      case \"echo\":\n        return new TestEchoInstruction(inst.message);\n      case \"clear-echo\":\n        return new TestClearEchoInstruction();\n      case \"load\":\n        return new TestLoadROMInstruction(inst.file);\n      default:\n        checkExhaustive(op, `Unknown tst operation ${op}`);\n    }\n  }\n\n  with(chip: Chip): this {\n    this.chip = chip;\n    return this;\n  }\n\n  hasVar(variable: string | number): boolean {\n    if (variable === \"time\") {\n      return true;\n    }\n    variable = `${variable}`;\n    // Look up built-in chip state variables\n    return this.chip.hasIn(variable) || this.chip.hasOut(variable);\n  }\n\n  getVar(variable: string | number, offset?: number): number | string {\n    variable = `${variable}`;\n    if (variable === \"time\") {\n      return this.clock.toString();\n    }\n    const pin = this.chip.get(variable, offset);\n    if (!pin) return 0;\n    return pin instanceof Bus ? pin.busVoltage : pin.voltage();\n  }\n\n  setVar(variable: string, value: number, offset?: number): void {\n    // Look up built-in chip state variables\n    const pinOrBus = this.chip.get(variable, offset);\n    if (pinOrBus instanceof Bus) {\n      pinOrBus.busVoltage = value;\n    } else {\n      pinOrBus?.pull(value === 0 ? LOW : HIGH);\n    }\n  }\n\n  eval(): void {\n    this.chip.eval();\n  }\n\n  tick(): void {\n    this.chip.eval();\n    this.clock.tick();\n  }\n\n  tock(): void {\n    this.chip.eval();\n    this.clock.tock();\n  }\n\n  override async load(filename: string) {\n    await this.chip.load(this.fs, filename);\n  }\n\n  override async run() {\n    this.clock.reset();\n    await super.run();\n  }\n}\n\nexport class CPUTest extends Test<CPUTestInstruction> {\n  hasVar(_variable: string | number): boolean {\n    return false;\n  }\n  getVar(_variable: string | number): number {\n    return 0;\n  }\n  setVar(_variable: string, _value: number): void {\n    return undefined;\n  }\n  ticktock(): void {\n    return undefined;\n  }\n}\n\nexport class VMTest extends Test<VMTestInstruction> {\n  hasVar(_variable: string | number): boolean {\n    return false;\n  }\n  getVar(_variable: string | number): number {\n    return 0;\n  }\n  setVar(_variable: string, _value: number): void {\n    return undefined;\n  }\n  vmstep(): void {\n    return undefined;\n  }\n}\n\nexport interface TestInstruction {\n  span?: Span;\n  do(test: Test): void;\n  steps(test: Test): IterableIterator<TestInstruction>;\n}\n\nexport class TestSetInstruction implements TestInstruction {\n  constructor(\n    private variable: string,\n    private value: number,\n    private index?: number | undefined\n  ) {}\n\n  do(test: Test) {\n    test.setVar(this.variable, this.value, this.index);\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestOutputInstruction implements TestInstruction {\n  do(test: Test) {\n    test.output();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestOutputListInstruction implements TestInstruction {\n  private outputs: Output[] = [];\n\n  constructor(specs: TstOutputSpec[] = []) {\n    for (const spec of specs) {\n      this.addOutput(spec);\n    }\n  }\n\n  addOutput(inst: TstOutputSpec) {\n    this.outputs.push(\n      new Output(\n        inst.id,\n        inst.style,\n        inst.width,\n        inst.lpad,\n        inst.rpad,\n        inst.builtin,\n        inst.address\n      )\n    );\n  }\n\n  do(test: Test) {\n    test.outputList(this.outputs);\n    test.header();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestCompoundInstruction implements TestInstruction {\n  protected readonly instructions: TestInstruction[] = [];\n  span?: Span;\n\n  addInstruction(instruction: TestInstruction) {\n    this.instructions.push(instruction);\n  }\n\n  do(test: Test<TestInstruction>): void {\n    for (const instruction of this.instructions) {\n      instruction.do(test);\n    }\n  }\n\n  *steps(_test: Test): Generator<TestInstruction> {\n    yield this;\n  }\n}\n\nexport class TestRepeatInstruction extends TestCompoundInstruction {\n  constructor(public readonly repeat: number) {\n    super();\n  }\n\n  override do() {\n    return undefined;\n  }\n\n  private *innerSteps(test: Test) {\n    for (const instruction of this.instructions) {\n      yield* instruction.steps(test);\n    }\n  }\n\n  override *steps(test: Test) {\n    if (this.repeat === -1) {\n      yield this;\n      while (true) {\n        yield* this.innerSteps(test);\n      }\n    } else {\n      for (let i = 0; i < this.repeat; i++) {\n        yield this;\n        yield* this.innerSteps(test);\n      }\n    }\n  }\n}\n\nexport class Condition {\n  constructor(\n    public readonly x: string | number,\n    public readonly y: string | number,\n    public readonly op: \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"<>\"\n  ) {}\n\n  check(test: Test): boolean {\n    const x = test.hasVar(this.x) ? test.getVar(this.x) : this.x;\n    const y = test.hasVar(this.y) ? test.getVar(this.y) : this.y;\n\n    if (typeof x === \"string\" || typeof y === \"string\") {\n      switch (this.op) {\n        case \"=\":\n          return `${x}` === `${y}`;\n        case \"<>\":\n          return `${x}` !== `${y}`;\n      }\n    } else {\n      switch (this.op) {\n        case \"<\":\n          return x < y;\n        case \"<=\":\n          return x <= y;\n        case \">\":\n          return x > y;\n        case \">=\":\n          return x >= y;\n        case \"=\":\n          return x === y;\n        case \"<>\":\n          return x !== y;\n      }\n    }\n    return false;\n  }\n}\n\nexport class TestWhileInstruction extends TestCompoundInstruction {\n  constructor(public readonly condition: Condition) {\n    super();\n  }\n\n  override *steps(test: Test) {\n    while (this.condition.check(test)) {\n      yield this;\n      for (const instruction of this.instructions) {\n        yield* instruction.steps(test);\n      }\n    }\n  }\n}\n\nexport class TestEchoInstruction implements TestInstruction {\n  constructor(public readonly content: string) {}\n  do(test: Test) {\n    test.echo(this.content);\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestClearEchoInstruction implements TestInstruction {\n  do(test: Test) {\n    test.clearEcho();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestLoadROMInstruction implements TestInstruction {\n  constructor(readonly file: string) {}\n  async do(test: Test) {\n    test.fs.pushd(\"/samples\");\n    await test.load(this.file);\n    test.fs.popd();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestBreakpointInstruction implements TestInstruction {\n  constructor(readonly variable: string, readonly value: number) {}\n\n  do(test: Test) {\n    test.addBreakpoint(this.variable, this.value);\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestClearBreakpointsInstruction implements TestInstruction {\n  do(test: Test) {\n    test.clearBreakpoints();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport interface ChipTestInstruction extends TestInstruction {\n  _chipTestInstruction_: true;\n  do(test: ChipTest): void | Promise<void>;\n}\n\nexport class TestEvalInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.eval();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestTickInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.tick();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestTockInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.tock();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport interface CPUTestInstruction extends TestInstruction {\n  _cpuTestInstruction_: true;\n  do(test: CPUTest): void | Promise<void>;\n}\n\nexport class TestTickTockInstruction implements CPUTestInstruction {\n  readonly _cpuTestInstruction_ = true;\n  do(test: CPUTest) {\n    test.ticktock();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport interface VMTestInstruction extends TestInstruction {\n  _vmTestInstruction_: true;\n  do(test: VMTest): void | Promise<void>;\n}\n\nexport class TestVMStepInstruction implements VMTestInstruction {\n  readonly _vmTestInstruction_ = true;\n  do(test: VMTest) {\n    test.vmstep();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n","import {\n  FileSystem,\n  LocalStorageFileSystemAdapter,\n} from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { createContext } from \"react\";\n\nexport const StorageContext = createContext(\n  new FileSystem(new LocalStorageFileSystemAdapter())\n);\n","import produce from \"immer\";\nimport { Dispatch, useEffect, useReducer, useState } from \"react\";\n\nexport function useImmerReducer<\n  T,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Reducers extends Record<string, (state: T, action?: any) => T | void>\n>(reducers: Reducers, initialState: T) {\n  return useReducer(\n    (\n      state: T,\n      command: {\n        action: keyof Reducers;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        payload?: any;\n      }\n    ): T =>\n      produce(state, (draft: T) => {\n        reducers[command.action](draft, command.payload);\n      }),\n    initialState\n  );\n}\n\nexport function useStateInitializer<T>(init: T): [T, Dispatch<T>] {\n  const [state, setState] = useState<T>(init);\n  useEffect(() => {\n    setState(init);\n  }, [init]);\n  return [state, setState];\n}\n","import { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { display } from \"@davidsouther/jiffies/lib/esm/display\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { t } from \"@lingui/macro\";\nimport { Dispatch, MutableRefObject, useContext, useMemo, useRef } from \"react\";\n\nimport { HDL } from \"@computron5k/simulator/languages/hdl.js\";\nimport { TST } from \"@computron5k/simulator/languages/tst.js\";\nimport { build as buildChip } from \"@computron5k/simulator/chip/builder.js\";\nimport { getBuiltinChip } from \"@computron5k/simulator/chip/builtins/index.js\";\nimport {\n  Low,\n  Pin,\n  Chip as SimChip,\n  Chip,\n} from \"@computron5k/simulator/chip/chip.js\";\nimport { Clock } from \"@computron5k/simulator/chip/clock.js\";\nimport { ChipTest } from \"@computron5k/simulator/tst.js\";\nimport { StorageContext } from \"../util/storage\";\nimport { AppContext } from \"../App.context\";\nimport { ImmPin, reducePins } from \"../components/pinout\";\nimport { REGISTRY } from \"@computron5k/simulator/chip/builtins/index.js\";\nimport { Span } from \"@computron5k/simulator/languages/base.js\";\nimport {\n  ChipProjects,\n  CHIP_PROJECTS,\n} from \"@computron5k/simulator/projects/index.js\";\nimport { useImmerReducer } from \"../util/react\";\n\nexport const PROJECT_NAMES = [\n  [\"01\", t`Project 1`],\n  [\"02\", t`Project 2`],\n  [\"03\", t`Project 3`],\n  [\"05\", t`Project 5`],\n];\n\nfunction findDropdowns(storage: Record<string, string>) {\n  const project =\n    (storage[\"/chip/project\"] as keyof typeof CHIP_PROJECTS) ?? \"01\";\n  const chips = CHIP_PROJECTS[project];\n  const chipName = storage[\"/chip/chip\"] ?? chips[0];\n  return { project, chips, chipName };\n}\n\nfunction makeHdl(name: string) {\n  return `CHIP ${name} {\n  IN in;\n  OUT out;\n  PARTS:\n}`;\n}\n\nfunction makeTst() {\n  return `repeat 10 {\n  tick,\n  tock;\n}`;\n}\n\nfunction makeCmp() {\n  return `| in|out|`;\n}\n\nexport interface ChipPageState {\n  files: Files;\n  sim: ChipSim;\n  controls: ControlsState;\n}\n\nexport interface ChipSim {\n  clocked: boolean;\n  inPins: ImmPin[];\n  outPins: ImmPin[];\n  internalPins: ImmPin[];\n  parts: Set<Chip>;\n  pending: boolean;\n  invalid: boolean;\n}\n\nexport interface Files {\n  hdl: string;\n  cmp: string;\n  tst: string;\n  out: string;\n}\n\nexport interface ControlsState {\n  project: keyof typeof CHIP_PROJECTS;\n  chips: string[];\n  chipName: string;\n  hasBuiltin: boolean;\n  runningTest: boolean;\n  span?: Span;\n}\n\nfunction reduceChip(chip: SimChip, pending = false, invalid = false): ChipSim {\n  return {\n    clocked: chip.clocked,\n    inPins: reducePins(chip.ins),\n    outPins: reducePins(chip.outs),\n    internalPins: reducePins(chip.pins),\n    parts: new Set(chip.parts),\n    pending,\n    invalid,\n  };\n}\n\nconst clock = Clock.get();\n\nexport type ChipStoreDispatch = Dispatch<{\n  action: keyof ReturnType<typeof makeChipStore>[\"reducers\"];\n  payload?: unknown;\n}>;\n\nexport function makeChipStore(\n  fs: FileSystem,\n  setStatus: (status: string) => void,\n  storage: Record<string, string>,\n  dispatch: MutableRefObject<ChipStoreDispatch>\n) {\n  const dropdowns = findDropdowns(storage);\n  let { project, chipName } = dropdowns;\n  const { chips } = dropdowns;\n  let chip = new Low();\n  let test = new ChipTest();\n\n  const initialState: ChipPageState = (() => {\n    const controls: ControlsState = {\n      project,\n      chips,\n      chipName,\n      hasBuiltin: REGISTRY.has(chipName),\n      runningTest: false,\n    };\n\n    const maybeChip = getBuiltinChip(controls.chipName);\n    if (isErr(maybeChip)) {\n      setStatus(display(Err(maybeChip)));\n    } else {\n      chip = Ok(maybeChip);\n    }\n\n    const sim = reduceChip(chip);\n\n    setTimeout(() => {\n      actions.reloadChip();\n    });\n\n    return {\n      controls,\n      files: {\n        hdl: \"\",\n        cmp: \"\",\n        tst: \"\",\n        out: \"\",\n      },\n      sim,\n    };\n  })();\n\n  const reducers = {\n    setFiles(\n      state: ChipPageState,\n      {\n        hdl = state.files.hdl,\n        tst = state.files.tst,\n        cmp = state.files.cmp,\n        out = \"\",\n      }: {\n        hdl?: string;\n        tst?: string;\n        cmp?: string;\n        out?: string;\n      }\n    ) {\n      state.files.hdl = hdl;\n      state.files.tst = tst;\n      state.files.cmp = cmp;\n      state.files.out = out;\n    },\n\n    updateChip(\n      state: ChipPageState,\n      payload?: { pending?: boolean; invalid?: boolean }\n    ) {\n      state.sim = reduceChip(chip, payload?.pending, payload?.invalid);\n      state.controls.chips = CHIP_PROJECTS[state.controls.project];\n      state.controls.chipName = chip.name ?? chipName;\n      if (!state.controls.chips.includes(state.controls.chipName)) {\n        state.controls.chips = [\n          ...state.controls.chips,\n          state.controls.chipName,\n        ];\n      }\n    },\n\n    setProject(state: ChipPageState, project: keyof typeof CHIP_PROJECTS) {\n      const chips = CHIP_PROJECTS[project];\n      const chipName =\n        state.controls.chipName && chips.includes(state.controls.chipName)\n          ? state.controls.chipName\n          : chips[0];\n      state.controls.project = project;\n      state.controls.chips = chips;\n      this.setChip(state, chipName);\n    },\n\n    setChip(state: ChipPageState, chipName: string) {\n      state.controls.chipName = chipName;\n      state.controls.hasBuiltin = REGISTRY.has(chipName);\n    },\n\n    testRunning(state: ChipPageState) {\n      state.controls.runningTest = true;\n    },\n    testFinished(state: ChipPageState) {\n      state.controls.runningTest = false;\n    },\n    updateTestStep(state: ChipPageState) {\n      state.files.out = test?.log() ?? \"\";\n      state.controls.span = test?.currentStep?.span;\n      this.updateChip(state, {\n        pending: state.sim.pending,\n        invalid: state.sim.invalid,\n      });\n    },\n  };\n\n  const actions = {\n    setProject(p: keyof typeof CHIP_PROJECTS) {\n      project = storage[\"/chip/project\"] = p;\n      dispatch.current({ action: \"setProject\", payload: project });\n      this.setChip(CHIP_PROJECTS[project][0]);\n    },\n\n    setChip(\n      chip: string,\n      project = storage[\"/chip/project\"] ?? ChipProjects[\"01\"]\n    ) {\n      chipName = storage[\"/chip/chip\"] = chip;\n      dispatch.current({ action: \"setChip\", payload: chipName });\n      this.loadChip(project, chipName);\n    },\n\n    reset() {\n      Clock.get().reset();\n      chip.reset();\n      test.reset();\n      dispatch.current({ action: \"setFiles\", payload: {} });\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    updateFiles({ hdl, tst, cmp }: { hdl: string; tst: string; cmp: string }) {\n      dispatch.current({ action: \"setFiles\", payload: { hdl, tst, cmp } });\n      try {\n        this.compileChip(hdl);\n        this.compileTest(tst);\n      } catch (e) {\n        setStatus(display(e));\n      }\n    },\n\n    compileChip(hdl: string) {\n      chip.remove();\n      const maybeParsed = HDL.parse(hdl);\n      if (isErr(maybeParsed)) {\n        setStatus(\"Failed to parse chip\");\n        dispatch.current({ action: \"updateChip\", payload: { invalid: true } });\n        return;\n      }\n      const maybeChip = buildChip(Ok(maybeParsed));\n      if (isErr(maybeChip)) {\n        setStatus(display(Err(maybeChip)));\n        dispatch.current({ action: \"updateChip\", payload: { invalid: true } });\n        return;\n      }\n      setStatus(t`Compiled ${chip.name}`);\n      this.replaceChip(Ok(maybeChip));\n    },\n\n    replaceChip(nextChip: SimChip) {\n      // Store current inPins\n      const inPins = chip.ins;\n      for (const [pin, { busVoltage }] of inPins) {\n        const nextPin = nextChip.ins.get(pin);\n        if (nextPin) {\n          nextPin.busVoltage = busVoltage;\n        }\n      }\n      clock.reset();\n      nextChip.eval();\n      chip = nextChip;\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    async loadChip(project: string, name: string) {\n      storage[\"/chip/chip\"] = name;\n      const fsName = (ext: string) =>\n        `/projects/${project}/${name}/${name}.${ext}`;\n\n      const [hdl, tst, cmp] = await Promise.all([\n        fs.readFile(fsName(\"hdl\")).catch(() => makeHdl(name)),\n        fs.readFile(fsName(\"tst\")).catch((e) => {\n          console.log(e);\n          return makeTst();\n        }),\n        fs.readFile(fsName(\"cmp\")).catch(() => makeCmp()),\n      ]);\n\n      dispatch.current({ action: \"setFiles\", payload: { hdl, tst, cmp } });\n      this.compileChip(hdl);\n      this.compileTest(tst);\n    },\n\n    async saveChip(hdl: string, prj = project, name = chipName) {\n      dispatch.current({ action: \"setFiles\", payload: { hdl } });\n      const path = `/projects/${prj}/${name}/${name}.hdl`;\n      await fs.writeFile(path, hdl);\n      setStatus(`Saved ${path}`);\n    },\n\n    toggle(pin: Pin, i: number | undefined) {\n      if (i !== undefined) {\n        pin.busVoltage = pin.busVoltage ^ (1 << i);\n      } else {\n        if (pin.width === 1) {\n          pin.toggle();\n        } else {\n          pin.busVoltage += 1;\n        }\n      }\n      dispatch.current({ action: \"updateChip\", payload: { pending: true } });\n    },\n\n    eval() {\n      chip.eval();\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    clock() {\n      clock.toggle();\n      if (clock.isLow) {\n        clock.frame();\n      }\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    useBuiltin() {\n      const nextChip = getBuiltinChip(chipName);\n      if (isErr(nextChip)) {\n        setStatus(\n          `Failed to load builtin ${chipName}: ${display(Err(nextChip))}`\n        );\n        return;\n      }\n      this.replaceChip(Ok(nextChip));\n    },\n\n    reloadChip() {\n      this.loadChip(project, chipName);\n    },\n\n    compileTest(file: string) {\n      dispatch.current({ action: \"setFiles\", payload: { tst: file } });\n      const tst = TST.parse(file);\n\n      if (isErr(tst)) {\n        setStatus(t`Failed to parse test`);\n        return false;\n      }\n      setStatus(t`Parsed tst`);\n\n      test = ChipTest.from(Ok(tst)).with(chip);\n      test.setFileSystem(fs);\n      dispatch.current({ action: \"updateTestStep\" });\n      return true;\n    },\n\n    async runTest(file: string) {\n      if (!this.compileTest(file)) {\n        return;\n      }\n      dispatch.current({ action: \"testRunning\" });\n\n      fs.pushd(\"/samples\");\n      await test.run();\n      fs.popd();\n\n      dispatch.current({ action: \"updateTestStep\" });\n    },\n\n    async tick() {\n      const done = await test.step();\n      dispatch.current({ action: \"updateTestStep\" });\n      return done;\n    },\n  };\n\n  return { initialState, reducers, actions };\n}\n\nexport function useChipPageStore() {\n  const fs = useContext(StorageContext);\n  const { setStatus } = useContext(AppContext);\n  const storage: Record<string, string> = useMemo(() => localStorage, []);\n\n  const dispatch = useRef<ChipStoreDispatch>(() => undefined);\n\n  const { initialState, reducers, actions } = useMemo(\n    () => makeChipStore(fs, setStatus, storage, dispatch),\n    [fs, setStatus, storage, dispatch]\n  );\n\n  const [state, dispatcher] = useImmerReducer(\n    reducers as unknown as Record<\n      string,\n      (state: ChipPageState, action?: unknown) => ChipPageState\n    >,\n    initialState\n  );\n  dispatch.current = dispatcher;\n\n  return { state, dispatch, actions };\n}\n","const cmp = `\nCmp <: Base {\n  Root := line*\n  line = bar cell+ newline?\n  cell = cellvalue bar\n  cellvalue = (~(bar|newline) any)*\n}`;\nexport default cmp;\n","import ohm from \"ohm-js\";\nimport { grammars, makeParser, baseSemantics } from \"./base.js\";\n\nexport type Cell = string;\nexport type Line = Cell[];\nexport type Cmp = Line[];\n\nimport cmpGrammar from \"./grammars/cmp.ohm.js\";\nexport const grammar = ohm.grammar(cmpGrammar, grammars);\nexport const cmpSemantics = grammar.extendSemantics(baseSemantics);\n\ncmpSemantics.addAttribute<Cell>(\"cell\", {\n  cell(value, _) {\n    return value.sourceString;\n  },\n});\n\ncmpSemantics.addAttribute<Line>(\"line\", {\n  line(_a, cells, _b) {\n    return cells.children.map((c) => c.cell);\n  },\n});\n\ncmpSemantics.addAttribute<Cmp>(\"root\", {\n  Root(lines) {\n    return lines.children.map((c) => c.line);\n  },\n});\n\nexport const CMP = {\n  grammar: cmpGrammar,\n  semantics: cmpSemantics,\n  parser: grammar,\n  parse: makeParser<Cmp>(grammar, cmpSemantics),\n};\n","import { Plural, Trans } from \"@lingui/macro\";\nimport { CMP } from \"@computron5k/simulator/languages/cmp.js\";\nimport { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { display } from \"@davidsouther/jiffies/lib/esm/display\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range\";\n\nexport const DiffTable = ({\n  className = \"\",\n  out,\n  cmp,\n}: {\n  out: string;\n  cmp: string;\n  className?: string;\n}) => {\n  const output = CMP.parse(out);\n  const compare = CMP.parse(cmp);\n\n  if (isErr(output)) {\n    return (\n      <details>\n        <summary>\n          <Trans>Failed to parse output</Trans>\n        </summary>\n        <pre>{display(Err(output))}</pre>\n        <code>\n          <pre>{out}</pre>\n        </code>\n      </details>\n    );\n  }\n\n  if (isErr(compare)) {\n    return (\n      <details>\n        <summary>\n          <Trans>Failed to parse compare</Trans>\n        </summary>\n        <code>\n          <pre>{display(Err(compare))}</pre>\n          <pre>{cmp}</pre>\n        </code>\n      </details>\n    );\n  }\n\n  const cmpData = Ok(compare);\n  const outData = Ok(output);\n  let failures = 0;\n  const table = range(0, Math.max(cmpData.length, outData.length)).map((i) => {\n    const cmpI = cmpData[i] ?? [];\n    const outI = outData[i] ?? [];\n    return range(0, Math.max(cmpI.length, outI.length))\n      .map((_, j) => [cmpI[j] ?? \"\", outI[j] ?? \"\"])\n      .map(([cmp, out]) => {\n        const cell = {\n          cmp: cmp ?? '\"',\n          out: out ?? '\"',\n          pass:\n            cmp?.trim().match(/^\\*+$/) !== null || out?.trim() === cmp?.trim(),\n        };\n        if (!cell.pass) {\n          failures += 1;\n        }\n        return cell;\n      });\n  });\n\n  return (\n    <div className={\"scroll-x \" + className}>\n      <p>\n        <Plural\n          value={failures}\n          one={`${failures} failure`}\n          other={`${failures} failures`}\n        />\n      </p>\n      <table\n        style={{\n          fontFamily: \"var(--font-family-monospace)\",\n          marginBottom: \"none\",\n        }}\n      >\n        <tbody>\n          {table.map((row, i) => (\n            <tr key={i}>\n              {row.map(({ cmp, out, pass }, i) => (\n                <DiffCell cmp={cmp} out={out} pass={pass} key={i} />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst DiffCell = ({\n  cmp,\n  out,\n  pass,\n}: {\n  cmp: string;\n  out: string;\n  pass: boolean;\n}) => {\n  return pass ? (\n    <>\n      <td>{cmp}</td>\n      <td></td>\n    </>\n  ) : (\n    <>\n      <td>\n        <ins>{cmp}</ins>\n      </td>\n      <td>\n        <del>{out}</del>\n      </td>\n    </>\n  );\n};\n","import { debounce } from \"@davidsouther/jiffies/lib/esm/debounce\";\nimport { Trans } from \"@lingui/macro\";\nimport MonacoEditor, { useMonaco } from \"@monaco-editor/react\";\nimport type * as monacoT from \"monaco-editor/esm/vs/editor/editor.api\";\nimport { OnMount } from \"@monaco-editor/react\";\nimport ohm from \"ohm-js\";\nimport {\n  CSSProperties,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { AppContext } from \"../App.context\";\n\nimport {\n  Span,\n  UNKNOWN_PARSE_ERROR,\n} from \"@computron5k/simulator/languages/base.js\";\n\nimport \"./editor.scss\";\n\nexport const ErrorPanel = ({ error }: { error?: ohm.MatchResult }) => {\n  return error?.failed() ? (\n    <details className=\"ErrorPanel\" open>\n      <summary role=\"button\" className=\"secondary\">\n        <Trans>Parse Error</Trans>\n      </summary>\n      <pre>\n        <code>\n          {error?.message ?? error?.shortMessage ?? UNKNOWN_PARSE_ERROR}\n        </code>\n      </pre>\n    </details>\n  ) : (\n    <></>\n  );\n};\n\nconst Textarea = ({\n  value,\n  onChange,\n  language,\n  disabled = false,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n  language: string;\n  disabled?: boolean;\n}) => {\n  const [text, setText] = useState(value);\n  return (\n    <textarea\n      data-testid={`editor-${language}`}\n      disabled={disabled}\n      value={text}\n      onChange={(e) => {\n        const value = e.target?.value;\n        setText(value);\n        onChange(value);\n      }}\n    />\n  );\n};\n\nconst MONACO_LIGHT_THEME = \"vs\";\nconst MONACO_DARK_THEME = \"vs-dark\";\n\nconst Monaco = ({\n  value,\n  onChange,\n  language,\n  error,\n  disabled = false,\n  highlight,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n  language: string;\n  error?: ohm.MatchResult | undefined;\n  disabled?: boolean;\n  highlight?: Span;\n}) => {\n  const { theme } = useContext(AppContext);\n  const monaco = useMonaco();\n\n  const editor = useRef<monacoT.editor.IStandaloneCodeEditor>();\n  const decorations = useRef<string[]>([]);\n\n  const codeTheme = useCallback(() => {\n    const isDark =\n      theme === \"system\"\n        ? window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n        : theme === \"dark\";\n    return isDark ? MONACO_DARK_THEME : MONACO_LIGHT_THEME;\n  }, [theme]);\n\n  // Set options when mounting\n  const onMount: OnMount = useCallback(\n    (ed) => {\n      editor.current = ed;\n      editor.current?.updateOptions({\n        fontFamily: `\"JetBrains Mono\", source-code-pro, Menlo, Monaco,\n      Consolas, \"Roboto Mono\", \"Ubuntu Monospace\", \"Noto Mono\", \"Oxygen Mono\",\n      \"Liberation Mono\", monospace, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\", \"Noto Color Emoji\"`,\n        fontSize: 16,\n        minimap: {\n          enabled: false,\n        },\n        theme: codeTheme(),\n        scrollBeyondLastLine: false,\n      });\n    },\n    [codeTheme]\n  );\n\n  // Mark and center highlighted spans\n  useEffect(() => {\n    if (!editor.current) return;\n    const model = editor.current.getModel();\n    const nextDecoration: monacoT.editor.IModelDeltaDecoration[] = [];\n    if (model && highlight) {\n      const start = model.getPositionAt(highlight.start);\n      const end = model.getPositionAt(highlight.end);\n      const range = monaco?.Range.fromPositions(start, end);\n      if (range) {\n        nextDecoration.push({\n          range,\n          options: { inlineClassName: \"highlight\" },\n        });\n        editor.current.revealRangeInCenter(range);\n      }\n    }\n    decorations.current = editor.current.deltaDecorations(\n      decorations.current,\n      nextDecoration\n    );\n  }, [editor, highlight, monaco]);\n\n  // Set themes\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    editor.current.updateOptions({ theme: codeTheme() });\n  }, [editor, codeTheme]);\n\n  // Prevent editing disabled editors\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    editor.current.updateOptions({ readOnly: disabled });\n  }, [editor, disabled]);\n\n  // Add error markers on parse failure\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    if (monaco === null) return;\n    const model = editor.current.getModel();\n    if (model === null) return;\n    if (error === undefined || error.succeeded()) {\n      monaco.editor.setModelMarkers(model, language, []);\n      return;\n    }\n    // Line 7, col 5:\n    const { line, column, message } =\n      /Line (?<line>\\d+), col (?<column>\\d+): (?<message>.*)/.exec(\n        error.shortMessage ?? \"\"\n      )?.groups ?? { line: 1, column: 1, message: \"could not parse error\" };\n    const startLineNumber = Number(line);\n    const endLineNumber = startLineNumber;\n    const startColumn = Number(column);\n    const restOfLine = model\n      .getLineContent(startLineNumber)\n      .substring(startColumn - 1);\n    let endColumn =\n      startColumn + (restOfLine.match(/([^\\s]+)/)?.[0].length ?? 1);\n    if (endColumn <= startColumn) {\n      endColumn = startColumn + 1;\n    }\n\n    monaco.editor.setModelMarkers(model, language, [\n      {\n        message,\n        startColumn,\n        startLineNumber,\n        endColumn,\n        endLineNumber,\n        severity: 8, // monacoT.MarkerSeverity.Error,\n      },\n    ]);\n  }, [error, editor, monaco, language]);\n\n  return (\n    <>\n      <MonacoEditor\n        value={value}\n        onChange={(v = \"\") => onChange(v)}\n        language={language}\n        onMount={onMount}\n      />\n      {disabled && <div className=\"overlay\" />}\n    </>\n  );\n};\n\nexport const Editor = ({\n  className = \"\",\n  style = {},\n  disabled = false,\n  value,\n  onChange,\n  grammar,\n  language,\n  highlight,\n}: {\n  className?: string;\n  style?: CSSProperties;\n  disabled?: boolean;\n  value: string;\n  onChange: (source: string) => void;\n  grammar: ohm.Grammar;\n  language: string;\n  highlight?: Span;\n}) => {\n  const [error, setError] = useState<ohm.MatchResult>();\n  const { monaco } = useContext(AppContext);\n\n  const parse = useCallback(\n    (text = \"\") => {\n      const parsed = grammar.match(text);\n      setError(parsed.failed() ? parsed : undefined);\n    },\n    [setError, grammar]\n  );\n\n  useEffect(() => parse(value), [parse, value]);\n  const doParse = useMemo(() => debounce(parse, 500), [parse]);\n\n  const onChangeCB = useCallback(\n    (text = \"\") => {\n      onChange(text);\n      doParse(text);\n    },\n    [doParse, onChange]\n  );\n\n  return (\n    <div className={`Editor ${className}`} style={style}>\n      {monaco.canUse && monaco.wants ? (\n        <Monaco\n          value={value}\n          onChange={onChangeCB}\n          language={language}\n          error={error}\n          disabled={disabled}\n          highlight={highlight}\n        />\n      ) : (\n        <>\n          <Textarea\n            value={value}\n            onChange={onChangeCB}\n            language={language}\n            disabled={disabled}\n          />\n          <ErrorPanel error={error} />\n        </>\n      )}\n    </div>\n  );\n};\n","import { CSSProperties, ReactNode } from \"react\";\n\nexport const Panel = (props: {\n  children: ReactNode;\n  header?: ReactNode;\n  footer?: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n}) => {\n  return (\n    <article className={[\"panel\", props.className ?? \"\"].join(\" \")}>\n      {props.header && <header>{props.header}</header>}\n      <main>{props.children}</main>\n      {props.footer && <footer>{props.footer}</footer>}\n    </article>\n  );\n};\n\nexport const Accordian = (props: {\n  children: ReactNode;\n  summary: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  open?: boolean;\n}) => {\n  return (\n    <details\n      className={props.className ?? \"\"}\n      open={props.open}\n      style={props.style}\n    >\n      <summary>\n        <div className=\"flex row align-baseline\">{props.summary}</div>\n      </summary>\n      {props.children}\n    </details>\n  );\n};\n","import { ReactNode } from \"react\";\nimport { t } from \"@lingui/macro\";\nimport { Timer } from \"@computron5k/simulator/timer.js\";\nimport { useTimer } from \"./timer\";\nimport { Icon } from \"./pico/icon\";\n\nimport \"./pico/tooltip.scss\";\n\nexport const Runbar = (props: { runner: Timer; children?: ReactNode }) => {\n  const runner = useTimer(props.runner);\n  return (\n    <fieldset role=\"group\">\n      <button\n        className=\"flex-0\"\n        onClick={() => runner.actions.frame()}\n        data-tooltip={t`Step`}\n        data-placement=\"bottom\"\n      >\n        <Icon name=\"play_arrow\"></Icon>\n      </button>\n      <button\n        className=\"flex-0\"\n        onClick={() =>\n          runner.state.running ? runner.actions.stop() : runner.actions.start()\n        }\n        data-tooltip={runner.state.running ? t`Pause` : t`Play`}\n        data-placement=\"bottom\"\n      >\n        <Icon name={runner.state.running ? \"pause\" : \"fast_forward\"}></Icon>\n      </button>\n      <button\n        className=\"flex-0\"\n        onClick={() => runner.actions.reset()}\n        data-tooltip={t`Reset`}\n        data-placement=\"bottom\"\n      >\n        <Icon name=\"fast_rewind\"></Icon>\n      </button>\n      <select\n        className=\"flex-1\"\n        name=\"speed\"\n        value={runner.state.speed}\n        onChange={(e) => {\n          runner.dispatch({\n            action: \"setSpeed\",\n            payload: Number(e.target?.value ?? runner.state.speed),\n          });\n        }}\n        disabled={runner.state.running}\n      >\n        {[\n          [16, t`60FPS`],\n          [500, t`Fast`],\n          [1000, t`Normal`],\n          [2000, t`Slow`],\n        ].map(([speed, label]) => (\n          <option key={speed} value={speed}>\n            {label}\n          </option>\n        ))}\n      </select>\n      <select\n        className=\"flex-1\"\n        name=\"steps\"\n        value={runner.state.steps}\n        onChange={(e) => {\n          runner.dispatch({\n            action: \"setSteps\",\n            payload: Number(e.target?.value ?? runner.state.steps),\n          });\n        }}\n        disabled={runner.state.running}\n      >\n        {[\n          [1, t`1 Step`],\n          [500, \"500\"],\n          [1000, \"1000\"],\n          [2000, \"2000\"],\n        ].map(([steps, label]) => (\n          <option key={steps} value={steps}>\n            {label}\n          </option>\n        ))}\n      </select>\n      {props.children}\n    </fieldset>\n  );\n};\n","import { Timer } from \"@computron5k/simulator/timer.js\";\nimport { useImmerReducer } from \"../util/react\";\n\nexport interface TimerStoreState {\n  steps: number;\n  speed: number;\n  running: boolean;\n}\n\nimport { Dispatch, MutableRefObject, useMemo, useRef } from \"react\";\nexport type TimerStoreDispatch = Dispatch<{\n  action: keyof ReturnType<typeof makeTimerStore>[\"reducers\"];\n  payload?: unknown;\n}>;\n\nconst makeTimerStore = (\n  timer: Timer,\n  dispatch: MutableRefObject<TimerStoreDispatch>\n) => {\n  const initialState: TimerStoreState = {\n    running: timer.running,\n    speed: timer.speed,\n    steps: timer.steps,\n  };\n\n  const finishFrame = timer.finishFrame.bind(timer);\n  timer.finishFrame = function () {\n    finishFrame();\n    dispatch.current({ action: \"update\" });\n  };\n\n  const reducers = {\n    update(state: TimerStoreState) {\n      state.running = timer.running;\n      state.speed = timer.speed;\n      state.steps = timer.steps;\n    },\n    setSteps(state: TimerStoreState, steps: number) {\n      state.steps = steps;\n      timer.steps = steps;\n    },\n    setSpeed(state: TimerStoreState, speed: number) {\n      state.speed = speed;\n      timer.speed = speed;\n    },\n  };\n\n  const actions = {\n    frame() {\n      timer.frame();\n    },\n    start() {\n      timer.start();\n      dispatch.current({ action: \"update\" });\n    },\n    stop() {\n      timer.stop();\n      dispatch.current({ action: \"update\" });\n    },\n    reset() {\n      timer.reset();\n      dispatch.current({ action: \"update\" });\n    },\n  };\n\n  return { initialState, reducers, actions };\n};\n\nexport function useTimer(timer: Timer) {\n  const dispatch = useRef<TimerStoreDispatch>(() => undefined);\n\n  const { initialState, reducers, actions } = useMemo(\n    () => makeTimerStore(timer, dispatch),\n    [timer, dispatch]\n  );\n\n  const [state, dispatcher] = useImmerReducer(reducers, initialState);\n\n  dispatch.current = dispatcher;\n\n  return { state, dispatch: dispatch.current, actions };\n}\n","import { Clock } from \"./chip/clock.js\";\n\nexport const MAX_STEPS = 1000;\n\nconst clock = Clock.get();\n\nexport abstract class Timer {\n  frame() {\n    this.tick();\n    this.finishFrame();\n  }\n\n  abstract tick(): Promise<boolean> | boolean;\n\n  finishFrame() {\n    clock.frame();\n  }\n\n  abstract reset(): void;\n\n  abstract toggle(): void;\n\n  steps = 1; // How many steps to take per update\n  speed = 1000; // how often to update, in ms\n  get running() {\n    return this.#running;\n  }\n\n  #running = false;\n  #sinceLastFrame = 0;\n  #lastUpdate = 0;\n  #run = async () => {\n    if (!this.#running) {\n      return;\n    }\n    const now = Date.now();\n    const delta = now - this.#lastUpdate;\n    this.#lastUpdate = now;\n    this.#sinceLastFrame += delta;\n    if (this.#sinceLastFrame > this.speed) {\n      let done = false;\n      for (let i = 0; i < Math.min(this.steps, MAX_STEPS) && !done; i++) {\n        done = await this.tick();\n      }\n      this.finishFrame();\n      if (done) {\n        this.stop();\n      }\n      this.#sinceLastFrame -= this.speed;\n    }\n    requestAnimationFrame(this.#run);\n  };\n\n  start() {\n    this.#running = true;\n    this.#lastUpdate = Date.now() - this.speed;\n    this.#run();\n    this.toggle();\n  }\n\n  stop() {\n    this.#running = false;\n    this.toggle();\n  }\n}\n","import { useEffect, useMemo, useState } from \"react\";\n\nimport { display } from \"@davidsouther/jiffies/lib/esm/display\";\nimport { Clock } from \"@computron5k/simulator/chip/clock.js\";\n\nexport function useClock(actions: {\n  tick?: () => void;\n  toggle?: () => void;\n  reset?: () => void;\n}) {\n  const clock = useMemo(() => Clock.get(), []);\n\n  useEffect(() => {\n    const subscription = clock.$.subscribe(() => {\n      actions.tick?.();\n    });\n    return () => subscription.unsubscribe();\n  }, [actions, clock.$]);\n\n  return {\n    toggle() {\n      clock.tick();\n      actions.toggle?.();\n    },\n\n    reset() {\n      clock.reset();\n      actions.reset?.();\n    },\n  };\n}\n\nexport function useClockFrame(frameFinished: () => void) {\n  useEffect(() => {\n    const subscription = Clock.get().frame$.subscribe(() => {\n      frameFinished();\n    });\n    return () => subscription.unsubscribe();\n  }, [frameFinished]);\n}\n\nexport function displayClock() {\n  return display(Clock.get());\n}\n\nexport function useClockface() {\n  const [clockface, setClockface] = useState(displayClock());\n\n  useEffect(() => {\n    const subscription = Clock.get().$.subscribe(() => {\n      setClockface(displayClock());\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n\n  return clockface;\n}\n\nexport const Clockface = () => {\n  const clockface = useClockface();\n  return <span style={{ whiteSpace: \"nowrap\" }}>{clockface}</span>;\n};\n","import {\n  COMMANDS,\n  COMMANDS_OP,\n  Flags,\n} from \"@computron5k/simulator/cpu/alu.js\";\nimport { bin } from \"@computron5k/simulator/util/twos.js\";\n\nexport const ALUComponent = ({\n  A,\n  op,\n  D,\n  out,\n  flag,\n}: {\n  A: number;\n  op: COMMANDS_OP;\n  D: number;\n  out: number;\n  flag: keyof typeof Flags;\n}) => (\n  <div>\n    <span>ALU</span>\n    <dl>\n      <dt>A</dt> <dd>{bin(A)}</dd>\n      <dt>op</dt> <dd>{COMMANDS.op[op] ?? \"(??)\"}</dd>\n      <dt>D</dt> <dd>{bin(D)}</dd>\n      <dt>=</dt> <dd>{bin(out)}</dd>\n      <dd>{Flags[flag as keyof typeof Flags]}</dd>\n    </dl>\n  </div>\n);\n","import { dec } from \"@computron5k/simulator/util/twos.js\";\n\nexport const RegisterComponent = ({\n  name,\n  bits,\n}: {\n  name: string;\n  bits: number;\n}) => (\n  <div>\n    {name}: {dec(bits)}\n  </div>\n);\n","import { KeyboardEvent, useCallback, useState } from \"react\";\nimport { Keyboard as KeyboardChip } from \"@computron5k/simulator/chip/builtins/computer/computer.js\";\nimport { Icon } from \"../pico/icon\";\nimport { RegisterComponent } from \"./register\";\n\nconst KeyMap: Record<string, number | undefined> = {\n  // Delete: 127,\n  Enter: 128,\n  Backspace: 129,\n  ArrowLeft: 130,\n  ArrowUp: 131,\n  ArrowRight: 132,\n  ArrowDown: 133,\n  Home: 134,\n  End: 135,\n  PageUp: 136,\n  PageDown: 137,\n  Insert: 138,\n  Delete: 139,\n  Escape: 140,\n  F1: 141,\n  F2: 142,\n  F3: 143,\n  F4: 144,\n  F5: 145,\n  F6: 146,\n  F7: 147,\n  F8: 148,\n  F9: 149,\n  F10: 150,\n  F11: 151,\n  F12: 152,\n};\n\nfunction keyPressToHackCharacter(keypress: KeyboardEvent): number {\n  const mapping = KeyMap[keypress.key];\n  if (mapping !== undefined) {\n    return mapping;\n  }\n  if (keypress.key.length === 1) {\n    const code = keypress.key.charCodeAt(0);\n    if (code >= 32 && code <= 126) {\n      return code;\n    }\n  }\n\n  return 0;\n}\n\nexport const Keyboard = ({ keyboard }: { keyboard: KeyboardChip }) => {\n  const [showPicker, setShowPicker] = useState(false);\n  const [bits, setBits] = useState(keyboard.out().busVoltage);\n\n  const setKey = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      const key = keyPressToHackCharacter(event);\n      if (key === 0) {\n        return;\n      }\n      event.preventDefault();\n      keyboard.setKey(key);\n      setBits(keyboard.out().busVoltage);\n      setShowPicker(false);\n    },\n    [keyboard, setShowPicker, setBits]\n  );\n\n  const changeKey = useCallback(() => {\n    setShowPicker(true);\n  }, []);\n\n  return (\n    <div className=\"flex row align-baseline\">\n      <div className=\"flex-1\">\n        <RegisterComponent name=\"Keyboard\" bits={bits} />\n      </div>\n      <div className=\"flex-1\">\n        {showPicker ? (\n          <input ref={(e) => e?.focus()} type=\"text\" onKeyDown={setKey} />\n        ) : (\n          <button onClick={changeKey}>\n            <Icon name=\"keyboard\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { width } from \"@davidsouther/jiffies/lib/esm/dom/css/sizing\";\nimport { useCallback, useState } from \"react\";\nimport { useStateInitializer } from \"../../util/react\";\n\nconst Mode = { VIEW: 0, EDIT: 1 };\n\nexport const InlineEdit = (props: {\n  mode?: keyof typeof Mode;\n  value: string;\n  onChange: (value: string) => void;\n}) => {\n  const [mode, setMode] = useState(props.mode ?? Mode.VIEW);\n  const [value, setValue] = useStateInitializer(props.value);\n\n  const render = () => {\n    switch (mode) {\n      case Mode.EDIT:\n        return edit();\n      case Mode.VIEW:\n        return view();\n      default:\n        return <span />;\n    }\n  };\n\n  const view = () => (\n    <span\n      style={{ cursor: \"text\", ...width(\"full\", \"inline\") }}\n      onClick={() => {\n        setMode(Mode.EDIT);\n      }}\n    >\n      {value}\n    </span>\n  );\n\n  const doSelect = useCallback(\n    (ref: HTMLInputElement | null) => ref?.select(),\n    []\n  );\n  const doChange = useCallback(\n    (target: HTMLInputElement) => {\n      setMode(Mode.VIEW);\n      setValue(target.value ?? \"\");\n      props.onChange(target.value ?? \"\");\n    },\n    [props, setMode, setValue]\n  );\n  const edit = () => {\n    const edit = (\n      <span style={{ display: \"block\", position: \"relative\" }}>\n        <input\n          ref={doSelect}\n          style={{\n            zIndex: \"10\",\n            position: \"absolute\",\n            left: \"0\",\n            marginTop: \"-0.375rem\",\n          }}\n          onBlur={({ target }) => doChange(target)}\n          onKeyPress={({ key, target }) => {\n            if (key === \"Enter\") {\n              doChange(target as HTMLInputElement);\n            }\n          }}\n          type=\"text\"\n          defaultValue={value}\n        />\n      </span>\n    );\n    return edit;\n  };\n\n  return render();\n};\n\nexport default InlineEdit;\n","/* eslint-disable @typescript-eslint/ban-types */\nimport {\n  Key,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n} from \"react\";\n\nexport interface VirtualScrollSettings {\n  /**Minimum offset into the adapter. Default is 0.  */\n  minIndex: number;\n  /** Maximum offset into the adapter. Default is Number.MAX_SAFE_INTEGER.  */\n  maxIndex: number;\n  /** Initial index to start rendering from. Default is minIndex.  */\n  startIndex: number;\n  /**\n   * Number of items to render in visible area. Default is entire range from\n   * minIndex to maxIndex.\n   */\n  count: number;\n  /**\n   * Maximum number of items to render on either side of the visible area.\n   * Default is `count`.\n   */\n  tolerance: number;\n  /** Height of each item, in pixels. Default is 20px. */\n  itemHeight: number;\n}\n\nexport interface VirtualScrollDataAdapter<T> {\n  (offset: number, limit: number): Iterable<T>;\n}\n\nexport function arrayAdapter<T>(data: T[]): VirtualScrollDataAdapter<T> {\n  return (offset, limit) => data.slice(offset, offset + limit);\n}\n\nexport interface VirtualScrollProps<T, U extends ReactNode> {\n  settings?: Partial<VirtualScrollSettings>;\n  get: VirtualScrollDataAdapter<T>;\n  row: (t: T) => U;\n  rowKey: (t: T) => Key;\n}\n\nexport function fillVirtualScrollSettings(\n  settings: Partial<VirtualScrollSettings>\n): VirtualScrollSettings {\n  const {\n    minIndex = 0,\n    maxIndex = Number.MAX_SAFE_INTEGER,\n    startIndex = 0,\n    itemHeight = 20,\n    count = maxIndex - minIndex + 1,\n    tolerance = count,\n  } = settings;\n\n  return { minIndex, maxIndex, startIndex, itemHeight, count, tolerance };\n}\n\nexport function initialState<T>(\n  settings: VirtualScrollSettings,\n  adapter: VirtualScrollDataAdapter<T>\n): VirtualScrollState<T> {\n  // From Denis Hilt, https://blog.logrocket.com/virtual-scrolling-core-principles-and-basic-implementation-in-react/\n  const { minIndex, maxIndex, startIndex, itemHeight, count, tolerance } =\n    settings;\n  const bufferedItems = count + 2 * tolerance;\n  const itemsAbove = Math.max(0, startIndex - tolerance - minIndex);\n\n  const viewportHeight = count * itemHeight;\n  const totalHeight = (maxIndex - minIndex + 1) * itemHeight;\n  const toleranceHeight = tolerance * itemHeight;\n  const bufferHeight = viewportHeight + 2 * toleranceHeight;\n  const topPaddingHeight = itemsAbove * itemHeight;\n  const bottomPaddingHeight = totalHeight - (topPaddingHeight + bufferHeight);\n\n  const state: VirtualScrollState<T> = {\n    scrollTop: 0,\n    settings,\n    viewportHeight,\n    totalHeight,\n    toleranceHeight,\n    bufferedItems,\n    topPaddingHeight,\n    bottomPaddingHeight,\n    data: [],\n  };\n\n  return {\n    ...state,\n    ...doScroll(topPaddingHeight + toleranceHeight, state, adapter),\n  };\n}\n\nexport function getData<T>(\n  minIndex: number,\n  maxIndex: number,\n  offset: number,\n  limit: number,\n  get: VirtualScrollDataAdapter<T>\n): T[] {\n  const start = Math.max(0, minIndex, offset);\n  const end = Math.min(maxIndex, offset + limit - 1);\n  const data = get(start, end - start);\n  return [...data];\n}\n\ninterface ScrollUpdate<T> {\n  scrollTop: number;\n  topPaddingHeight: number;\n  bottomPaddingHeight: number;\n  data: T[];\n}\n\nexport function doScroll<T>(\n  scrollTop: number,\n  state: VirtualScrollState<T>,\n  get: VirtualScrollDataAdapter<T>\n): ScrollUpdate<T> {\n  const {\n    totalHeight,\n    toleranceHeight,\n    bufferedItems,\n    settings: { itemHeight, minIndex, maxIndex },\n  } = state;\n  const index =\n    minIndex + Math.floor((scrollTop - toleranceHeight) / itemHeight);\n  const data = getData(minIndex, maxIndex, index, bufferedItems, get);\n  const topPaddingHeight = Math.max((index - minIndex) * itemHeight, 0);\n  const bottomPaddingHeight = Math.max(\n    totalHeight - (topPaddingHeight + data.length * itemHeight),\n    0\n  );\n\n  return { scrollTop, topPaddingHeight, bottomPaddingHeight, data };\n}\n\ninterface VirtualScrollState<T> {\n  settings: VirtualScrollSettings;\n  scrollTop: number; // px\n  bufferedItems: number; // count\n  totalHeight: number; // px\n  viewportHeight: number; // px\n  topPaddingHeight: number; // px\n  bottomPaddingHeight: number; // px\n  toleranceHeight: number; // px\n  data: T[];\n}\n\nconst scrollReducer =\n  <T extends {}>(get: VirtualScrollDataAdapter<T>) =>\n  (state: VirtualScrollState<T>, scrollTop: number) => ({\n    ...state,\n    ...doScroll(scrollTop, state, get),\n  });\n\nexport const VirtualScroll = <T extends {}, U extends ReactNode = ReactNode>(\n  props: VirtualScrollProps<T, U> & { className?: string }\n) => {\n  const viewportRef = useRef<HTMLDivElement | null>(null);\n\n  const { settings, startState, reducer } = useMemo(() => {\n    const settings = fillVirtualScrollSettings(props.settings ?? {});\n    const startState = initialState<T>(settings, props.get);\n    const reducer = scrollReducer(props.get);\n    return { settings, reducer, startState };\n  }, [props.settings, props.get]);\n\n  const [state, dispatchScroll] = useReducer(reducer, startState);\n\n  useEffect(() => {\n    if (viewportRef.current !== null) {\n      dispatchScroll(viewportRef.current.scrollTop);\n    }\n  }, [settings, props.row]);\n\n  const initialScroll = useCallback(\n    (div: HTMLDivElement | null) => {\n      if (div) {\n        div.scrollTop = viewportRef.current\n          ? viewportRef.current.scrollTop\n          : settings.startIndex * settings.itemHeight;\n      }\n      viewportRef.current = div;\n    },\n    [viewportRef, settings.startIndex, settings.itemHeight]\n  );\n\n  const rows = state.data.map((d) => (\n    <div key={props.rowKey(d)} style={{ height: `${settings.itemHeight}px` }}>\n      {props.row(d)}\n    </div>\n  ));\n\n  return (\n    <div\n      ref={initialScroll}\n      style={{\n        height: `${state.viewportHeight}px`,\n        overflowY: \"scroll\",\n        overflowAnchor: \"none\",\n      }}\n      className={props.className ?? \"\"}\n      onScroll={(e) => dispatchScroll((e.target as HTMLDivElement).scrollTop)}\n    >\n      <div style={{ height: `${state.topPaddingHeight}px` }} />\n      {rows}\n      <div style={{ height: `${state.bottomPaddingHeight}px` }} />\n    </div>\n  );\n};\n\nexport default VirtualScroll;\n","import { ReactNode, useCallback, useContext, useMemo, useState } from \"react\";\nimport { rounded } from \"@davidsouther/jiffies/lib/esm/dom/css/border\";\n\nimport {\n  Format,\n  FORMATS,\n  Memory as MemoryChip,\n} from \"@computron5k/simulator/cpu/memory.js\";\nimport { asm } from \"@computron5k/simulator/util/asm.js\";\nimport { bin, dec, hex } from \"@computron5k/simulator/util/twos.js\";\nimport InlineEdit from \"../pico/inline_edit\";\nimport VirtualScroll, { VirtualScrollSettings } from \"../pico/virtual_scroll\";\nimport { Icon } from \"../pico/icon\";\nimport { AppContext } from \"../../App.context\";\nimport { t } from \"@lingui/macro\";\n\nconst ITEM_HEIGHT = 34;\n\nexport const MemoryBlock = ({\n  memory,\n  jmp = { value: 0 },\n  highlight = -1,\n  editable = false,\n  format = dec,\n  onChange = () => undefined,\n}: {\n  jmp?: { value: number };\n  memory: MemoryChip;\n  highlight?: number;\n  editable?: boolean;\n  format?: (v: number) => string;\n  onChange?: (i: number, value: string, previous: number) => void;\n}) => {\n  const settings = useMemo<Partial<VirtualScrollSettings>>(\n    () => ({\n      count: 20,\n      maxIndex: memory.size,\n      itemHeight: ITEM_HEIGHT,\n      startIndex: jmp.value,\n    }),\n    [memory.size, jmp]\n  );\n  const get = useCallback(\n    (offset: number, count: number) =>\n      memory\n        .range(offset, offset + count)\n        .map((v, i) => [i + offset, v] as [number, number]),\n    [memory]\n  );\n  const row = useCallback(\n    ([i, v]: [number, number]) => (\n      <MemoryCell\n        index={i}\n        value={format(v)}\n        editable={editable}\n        highlight={i === highlight}\n        onChange={onChange}\n      />\n    ),\n    [format, editable, highlight, onChange]\n  );\n\n  return (\n    <VirtualScroll<[number, number], ReactNode>\n      settings={settings}\n      get={get}\n      row={row}\n      rowKey={([i]) => i}\n    />\n  );\n};\n\nexport const MemoryCell = ({\n  index,\n  value,\n  highlight = false,\n  editable = false,\n  onChange = () => undefined,\n}: {\n  index: number;\n  value: string;\n  highlight?: boolean;\n  editable?: boolean;\n  onChange?: (i: number, value: string, previous: number) => void;\n}) => (\n  <div style={{ display: \"flex\", height: \"100%\" }}>\n    <code\n      style={{\n        ...rounded(\"none\"),\n        ...(highlight\n          ? { background: \"var(--code-kbd-background-color)\" }\n          : {}),\n      }}\n    >\n      {hex(index)}\n    </code>\n    <code\n      style={{\n        flex: \"1\",\n        textAlign: \"right\",\n        ...rounded(\"none\"),\n        ...(highlight\n          ? { background: \"var(--code-kbd-background-color)\" }\n          : {}),\n      }}\n    >\n      {editable ? (\n        <InlineEdit\n          value={value}\n          onChange={(newValue: string) =>\n            onChange(index, newValue, Number(value))\n          }\n        />\n      ) : (\n        <span>{value}</span>\n      )}\n    </code>\n  </div>\n);\n\nexport const Memory = ({\n  name = \"Memory\",\n  highlight = -1,\n  editable = true,\n  memory,\n  format = \"dec\",\n}: {\n  name?: string;\n  editable?: boolean;\n  highlight?: number;\n  memory: MemoryChip;\n  format: Format;\n}) => {\n  const [fmt, setFormat] = useState(format);\n  const [jmp, setJmp] = useState(\"0\");\n  const [goto, setGoto] = useState({ value: 0 });\n\n  const jumpTo = () => {\n    setGoto({ value: Number(jmp) });\n  };\n\n  const { filePicker, fs, setStatus } = useContext(AppContext);\n  const doLoad = useCallback(async () => {\n    try {\n      const file = await filePicker.select();\n      await memory.load(fs, file);\n    } catch (e) {\n      console.error(e);\n      setStatus(`Failed to load into memory`);\n    }\n  }, [fs, filePicker, memory, setStatus]);\n\n  const doUpdate = useCallback(\n    (i: number, v: string) => {\n      memory.update(i, v, fmt ?? \"dec\");\n    },\n    [memory, fmt]\n  );\n\n  return (\n    <article className=\"panel\">\n      <header>\n        <div>{name}</div>\n        <fieldset role=\"group\">\n          <button onClick={doLoad} className=\"flex-0\">\n            <Icon name=\"upload_file\" />\n          </button>\n          <input\n            style={{ width: \"4em\", height: \"100%\" }}\n            placeholder={t`Goto`}\n            onKeyDown={({ key }) => key === \"Enter\" && jumpTo()}\n            onChange={({ target: { value } }) => setJmp(value ?? \"0\")}\n          />\n          <button onClick={jumpTo} className=\"flex-0\">\n            <Icon name=\"move_down\" />\n          </button>\n          {FORMATS.map((option) => (\n            <label\n              className=\"flex-0\"\n              key={option}\n              role=\"button\"\n              aria-current={option === fmt}\n            >\n              <input\n                type=\"radio\"\n                name={name}\n                value={option}\n                checked={option === fmt}\n                onChange={() => setFormat(option)}\n              />\n              {option}\n            </label>\n          ))}\n        </fieldset>\n      </header>\n      <MemoryBlock\n        jmp={goto}\n        memory={memory}\n        highlight={highlight}\n        editable={editable}\n        format={(v: number) => doFormat(fmt, v)}\n        onChange={doUpdate}\n      />\n    </article>\n  );\n};\n\nexport default Memory;\n\nfunction doFormat(format: Format, v: number): string {\n  switch (format) {\n    case \"bin\":\n      return bin(v);\n    case \"hex\":\n      return hex(v);\n    case \"asm\":\n      return asm(v);\n    case \"dec\":\n    default:\n      return dec(v);\n  }\n}\n","import { assertExists } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { Trans } from \"@lingui/macro\";\nimport { useCallback, useRef } from \"react\";\nimport { useClockFrame } from \"../clockface\";\nimport { Memory } from \"@computron5k/simulator/cpu/memory.js\";\nimport { Panel } from \"../shell/panel\";\n\nconst WHITE = \"white\";\nconst BLACK = \"black\";\ntype COLOR = typeof WHITE | typeof BLACK;\n\nexport interface ScreenMemory {\n  get(idx: number): number;\n}\n\nexport function reduceScreen(memory: Memory, offset = 0): ScreenMemory {\n  return {\n    get(idx: number): number {\n      return memory.get(offset + idx);\n    },\n  };\n}\n\nfunction get(mem: ScreenMemory, x: number, y: number): COLOR {\n  const byte = mem.get(32 * y + ((x / 16) | 0));\n  const bit = byte & (1 << x % 16);\n  return bit === 0 ? WHITE : BLACK;\n}\n\nfunction set(data: Uint8ClampedArray, x: number, y: number, value: COLOR) {\n  const pixel = (y * 512 + x) * 4;\n  const color = value === WHITE ? 255 : 0;\n  data[pixel] = color;\n  data[pixel + 1] = color;\n  data[pixel + 2] = color;\n  data[pixel + 3] = 255;\n}\n\nfunction drawImage(ctx: CanvasRenderingContext2D, memory: ScreenMemory) {\n  const image = assertExists(\n    ctx.getImageData(0, 0, 512, 256),\n    \"Failed to create Context2d\"\n  );\n  for (let col = 0; col < 512; col++) {\n    for (let row = 0; row < 256; row++) {\n      const color = get(memory, col, row);\n      set(image.data, col, row, color);\n    }\n  }\n  ctx.putImageData(image, 0, 0);\n}\n\nexport const Screen = ({ memory }: { memory: ScreenMemory }) => {\n  const canvas = useRef<HTMLCanvasElement>();\n  useClockFrame(\n    useCallback(() => {\n      const ctx = canvas.current?.getContext(\"2d\") ?? undefined;\n\n      if (ctx) {\n        drawImage(ctx, memory);\n      }\n    }, [memory])\n  );\n\n  return (\n    <Panel header={<Trans>Screen</Trans>}>\n      <figure\n        style={{\n          width: \"100%\",\n          maxWidth: \"512px\",\n          boxSizing: \"content-box\",\n          marginInline: \"auto\",\n          margin: \"0\",\n          borderTop: \"2px solid gray\",\n          borderLeft: \"2px solid gray\",\n          borderBottom: \"2px solid lightgray\",\n          borderRight: \"2px solid lightgray\",\n        }}\n      >\n        <canvas\n          ref={(ref) => (canvas.current = ref ?? undefined)}\n          width={512}\n          height={256}\n        ></canvas>\n      </figure>\n    </Panel>\n  );\n};\n","import {\n  Keyboard,\n  Screen,\n} from \"@computron5k/simulator/chip/builtins/computer/computer.js\";\nimport { ALU } from \"@computron5k/simulator/chip/builtins/index.js\";\nimport {\n  PC,\n  VRegister,\n} from \"@computron5k/simulator/chip/builtins/sequential/bit.js\";\nimport {\n  RAM,\n  RAM8,\n} from \"@computron5k/simulator/chip/builtins/sequential/ram.js\";\nimport { Chip, HIGH } from \"@computron5k/simulator/chip/chip.js\";\nimport { Flags } from \"@computron5k/simulator/cpu/alu.js\";\nimport { CPU, decode } from \"@computron5k/simulator/cpu/cpu.js\";\nimport { ReactElement } from \"react\";\nimport { ALUComponent } from \"./alu\";\nimport { Keyboard as KeyboardComponent } from \"./keyboard\";\nimport { RegisterComponent } from \"./register\";\nimport { Memory as MemoryComponent } from \"./memory\";\nimport { Screen as ScreenComponent } from \"./screen\";\n\nexport function makeVisualizations(chip: Chip): ReactElement {\n  if (chip instanceof ALU) {\n    return (\n      <ALUComponent\n        A={chip.in(\"x\").busVoltage}\n        op={chip.op()}\n        D={chip.in(\"y\").busVoltage}\n        out={chip.out().busVoltage}\n        flag={\n          (chip.out(\"zr\").voltage() === HIGH\n            ? Flags.Zero\n            : chip.out(\"ng\").voltage() === HIGH\n            ? Flags.Negative\n            : Flags.Positive) as keyof typeof Flags\n        }\n      />\n    );\n  }\n  if (chip instanceof VRegister) {\n    return (\n      <RegisterComponent\n        name={chip.name ?? `Chip ${chip.id}`}\n        bits={chip.bits}\n      />\n    );\n  }\n  if (chip instanceof PC) {\n    return <RegisterComponent name=\"PC\" bits={chip.bits} />;\n  }\n  if (chip instanceof RAM) {\n    return (\n      <MemoryComponent\n        name={chip.name}\n        memory={chip.memory}\n        format=\"dec\"\n        highlight={chip.address}\n      />\n    );\n  }\n  if (chip instanceof RAM8) {\n    return <span>RAM {chip.width}</span>;\n  }\n  if (chip instanceof Keyboard) {\n    return <KeyboardComponent keyboard={chip} />;\n  }\n  if (chip instanceof Screen) {\n    return <ScreenComponent memory={chip.memory} />;\n  }\n  if (chip instanceof CPU) {\n    const bits = decode(chip.in(\"instruction\").busVoltage);\n    return (\n      <>\n        <RegisterComponent name={\"A\"} bits={chip.state.A} />\n        <RegisterComponent name={\"D\"} bits={chip.state.D} />\n        <RegisterComponent name={\"PC\"} bits={chip.state.PC} />\n        <ALUComponent\n          A={bits.am ? chip.in(\"inM\").busVoltage : chip.state.A}\n          D={chip.state.D}\n          out={chip.state.ALU}\n          op={bits.op}\n          flag={chip.state.flag as keyof typeof Flags}\n        />\n      </>\n    );\n  }\n\n  return <>{[...chip.parts].map(makeVisualizations)}</>;\n}\n\nexport function makeVisualizationsWithId(chip: {\n  parts: Chip[];\n}): [string, ReactElement][] {\n  return [...chip.parts].map((part, i): [string, ReactElement] => [\n    `${part.id}_${i}`,\n    makeVisualizations(part),\n  ]);\n}\n","import {\n  CSSProperties,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Trans } from \"@lingui/macro\";\n\nimport \"./chip.scss\";\n\nimport { FullPinout } from \"../components/pinout\";\nimport { Files, PROJECT_NAMES, useChipPageStore } from \"./chip.store\";\nimport { DiffTable } from \"../components/difftable\";\nimport { Editor } from \"../components/editor\";\nimport { HDL } from \"@computron5k/simulator/languages/hdl.js\";\nimport { TST } from \"@computron5k/simulator/languages/tst.js\";\nimport { CMP } from \"@computron5k/simulator/languages/cmp.js\";\nimport { Accordian, Panel } from \"../components/shell/panel\";\nimport { Runbar } from \"../components/runbar\";\nimport { Timer } from \"@computron5k/simulator/timer.js\";\nimport { useStateInitializer } from \"../util/react\";\nimport { Clockface } from \"../components/clockface\";\nimport { CHIP_PROJECTS } from \"@computron5k/simulator/projects/index.js\";\nimport { Icon } from \"../components/pico/icon\";\nimport { AppContext } from \"../App.context\";\nimport { makeVisualizationsWithId } from \"../components/chips/visualizations\";\n\nexport const Chip = () => {\n  const { filePicker, fs, setStatus } = useContext(AppContext);\n  const { state, actions, dispatch } = useChipPageStore();\n\n  const [hdl, setHdl] = useStateInitializer(state.files.hdl);\n  const [tst, setTst] = useStateInitializer(state.files.tst);\n  const [cmp, setCmp] = useStateInitializer(state.files.cmp);\n  const [out] = useStateInitializer(state.files.out);\n\n  const saveChip = () => {\n    actions.saveChip(hdl);\n  };\n\n  const compile = useRef<(files?: Partial<Files>) => void>(() => undefined);\n  compile.current = async (files: Partial<Files> = {}) => {\n    await actions.updateFiles({\n      hdl: files.hdl ?? hdl,\n      tst: files.tst ?? tst,\n      cmp: files.cmp ?? cmp,\n    });\n  };\n\n  const loadTest = useCallback(async () => {\n    try {\n      const path = await filePicker.select();\n      const tst = await fs.readFile(path);\n      await compile.current({ tst });\n    } catch (e) {\n      console.error(e);\n      setStatus(`Failed to load into memory`);\n    }\n  }, [filePicker, setStatus, fs, compile]);\n\n  const runner = useRef<Timer>();\n  useEffect(() => {\n    runner.current = new (class ChipTimer extends Timer {\n      async reset(): Promise<void> {\n        await compile.current();\n        await actions.reset();\n      }\n\n      override finishFrame(): void {\n        super.finishFrame();\n        dispatch.current({ action: \"updateTestStep\" });\n      }\n\n      async tick(): Promise<boolean> {\n        return actions.tick();\n      }\n\n      toggle(): void {\n        dispatch.current({ action: \"updateTestStep\" });\n      }\n    })();\n\n    return () => {\n      runner.current?.stop();\n    };\n  }, [compile, actions, dispatch]);\n\n  const clockActions = useMemo(\n    () => ({\n      toggle() {\n        actions.clock();\n      },\n      reset() {\n        actions.reset();\n      },\n    }),\n    [actions]\n  );\n\n  const [useBuiltin, setUseBuiltin] = useState(false);\n  const toggleUseBuiltin = async () => {\n    if (useBuiltin) {\n      compile.current();\n      setUseBuiltin(false);\n    } else {\n      actions.useBuiltin();\n      setUseBuiltin(true);\n    }\n  };\n\n  const selectors = (\n    <>\n      <fieldset role=\"group\">\n        <select\n          value={state.controls.project}\n          onChange={({ target: { value } }) => {\n            actions.setProject(value as keyof typeof CHIP_PROJECTS);\n          }}\n          data-testid=\"project-picker\"\n        >\n          {PROJECT_NAMES.map(([number, label]) => (\n            <option key={number} value={number}>\n              {label}\n            </option>\n          ))}\n        </select>\n        <select\n          value={state.controls.chipName}\n          onChange={({ target: { value } }) => {\n            actions.setChip(value);\n          }}\n          data-testid=\"chip-picker\"\n        >\n          {state.controls.chips.map((chip) => (\n            <option key={chip} value={chip}>\n              {chip}\n            </option>\n          ))}\n        </select>\n        <button className=\"flex-0\" onClick={saveChip} disabled={useBuiltin}>\n          <Trans>Save</Trans>\n        </button>\n      </fieldset>\n    </>\n  );\n  const hdlPanel = (\n    <Panel\n      className=\"_hdl_panel\"\n      header={\n        <>\n          <div tabIndex={0}>HDL</div>\n          <fieldset>\n            {state.controls.hasBuiltin && (\n              <label>\n                <input\n                  type=\"checkbox\"\n                  role=\"switch\"\n                  checked={useBuiltin}\n                  onChange={toggleUseBuiltin}\n                />\n                <Trans>Builtin</Trans>\n              </label>\n            )}\n          </fieldset>\n          {selectors}\n        </>\n      }\n    >\n      <Editor\n        className=\"flex-1\"\n        value={hdl}\n        onChange={(source) => {\n          setHdl(source);\n          compile.current({ hdl: source });\n        }}\n        grammar={HDL.parser}\n        language={\"hdl\"}\n        disabled={useBuiltin}\n      />\n    </Panel>\n  );\n\n  const chipButtons = (\n    <fieldset role=\"group\">\n      <button\n        onClick={actions.eval}\n        onKeyDown={actions.eval}\n        disabled={!state.sim.pending}\n      >\n        <Trans>Eval</Trans>\n      </button>\n      <button\n        onClick={clockActions.toggle}\n        style={{ maxWidth: \"initial\" }}\n        disabled={!state.sim.clocked}\n      >\n        <Trans>Clock</Trans>:{\"\\u00a0\"}\n        <Clockface />\n      </button>\n      <button\n        onClick={clockActions.reset}\n        style={{ maxWidth: \"initial\" }}\n        disabled={!state.sim.clocked}\n      >\n        <Trans>Reset</Trans>\n      </button>\n    </fieldset>\n  );\n\n  const visualizations: [string, ReactNode][] = makeVisualizationsWithId({\n    parts: [...state.sim.parts],\n  });\n\n  const pinsPanel = (\n    <Panel\n      className=\"_parts_panel\"\n      header={\n        <>\n          <div>\n            <Trans>Chip</Trans>\n          </div>\n          {chipButtons}\n        </>\n      }\n    >\n      {state.sim.invalid ? (\n        <Trans>Invalid Chip</Trans>\n      ) : (\n        <>\n          <FullPinout sim={state.sim} toggle={actions.toggle} />\n          {visualizations.length > 0 && (\n            <Accordian summary={<Trans>Visualizations</Trans>} open={true}>\n              <main>\n                {visualizations.map(([p, v]) => (\n                  <div key={p}>{v}</div>\n                ))}\n              </main>\n            </Accordian>\n          )}\n        </>\n      )}\n    </Panel>\n  );\n\n  const [selectedTestTab, setSelectedTestTab] = useState<\"tst\" | \"cmp\" | \"out\">(\n    \"tst\"\n  );\n\n  const testPanel = (\n    <Panel\n      className=\"_test_panel\"\n      header={\n        <>\n          <div className=\"flex-1\">\n            <Trans>Test</Trans>\n          </div>\n          <div className=\"flex-2\">\n            {runner.current && <Runbar runner={runner.current} />}\n          </div>\n          <div>\n            <button onClick={loadTest}>\n              <Icon name=\"upload_file\" />{\" \"}\n            </button>\n          </div>\n        </>\n      }\n    >\n      <div role=\"tablist\" style={{ \"--tab-count\": \"3\" } as CSSProperties}>\n        <div\n          role=\"tab\"\n          id=\"test-tab-tst\"\n          aria-controls=\"test-tabpanel-tst\"\n          aria-selected={selectedTestTab === \"tst\"}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              name=\"test-tabs\"\n              aria-controls=\"test-tabpanel-tst\"\n              value=\"tst\"\n              checked={selectedTestTab === \"tst\"}\n              onChange={() => setSelectedTestTab(\"tst\")}\n            />\n            Test Script\n          </label>\n        </div>\n        <div\n          role=\"tabpanel\"\n          aria-labelledby=\"test-tab-tst\"\n          id=\"test-tabpanel-tst\"\n        >\n          <Editor\n            value={tst}\n            onChange={setTst}\n            grammar={TST.parser}\n            language={\"tst\"}\n            highlight={state.controls.span}\n          />\n        </div>\n        <div\n          role=\"tab\"\n          id=\"test-tab-cmp\"\n          aria-controls=\"test-tablpanel-cmp\"\n          aria-selected={selectedTestTab === \"cmp\"}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              name=\"test-tabs\"\n              aria-controls=\"test-tabpanel-cmp\"\n              value=\"cmp\"\n              checked={selectedTestTab === \"cmp\"}\n              onChange={() => setSelectedTestTab(\"cmp\")}\n            />\n            Compare File\n          </label>\n        </div>\n        <div\n          role=\"tabpanel\"\n          aria-labelledby=\"test-tab-cmp\"\n          id=\"test-tabpanel-cmp\"\n          style={{ position: \"relative\" }}\n        >\n          <Editor\n            value={cmp}\n            onChange={setCmp}\n            grammar={CMP.parser}\n            language={\"cmp\"}\n          />\n        </div>\n        <div\n          role=\"tab\"\n          id=\"test-tab-out\"\n          aria-controls=\"test-tabpanel-out\"\n          aria-selected={selectedTestTab === \"out\"}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              name=\"test-tabs\"\n              aria-controls=\"test-tabpanel-out\"\n              value=\"out\"\n              checked={selectedTestTab === \"out\"}\n              onChange={() => setSelectedTestTab(\"out\")}\n            />\n            Output File\n          </label>\n        </div>\n        <div\n          role=\"tabpanel\"\n          id=\"test-tabpanel-out\"\n          aria-labelledby=\"test-tab-out\"\n        >\n          <DiffTable cmp={cmp} out={out} />\n        </div>\n      </div>\n    </Panel>\n  );\n\n  return (\n    <div className=\"ChipPage grid\">\n      {hdlPanel}\n      {pinsPanel}\n      {testPanel}\n    </div>\n  );\n};\n\nexport default Chip;\n","export type COMMANDS_ASM =\n  | \"0\"\n  | \"1\"\n  | \"-1\"\n  | \"D\"\n  | \"A\"\n  | \"M\"\n  | \"!D\"\n  | \"!A\"\n  | \"-D\"\n  | \"-A\"\n  | \"D+1\"\n  | \"A+1\"\n  | \"D-1\"\n  | \"A-1\"\n  | \"D+A\"\n  | \"D-A\"\n  | \"D-M\"\n  | \"A-D\"\n  | \"D&A\"\n  | \"D&M\"\n  | \"D|A\"\n  | \"D|M\";\n\nexport type COMMANDS_OP =\n  | 0b101010\n  | 0b111111\n  | 0b111010\n  | 0b001100\n  | 0b110000\n  | 0b110000\n  | 0b001101\n  | 0b110001\n  | 0b001111\n  | 0b110011\n  | 0b011111\n  | 0b110111\n  | 0b001110\n  | 0b110010\n  | 0b000010\n  | 0b010011\n  | 0b010011\n  | 0b000111\n  | 0b000000\n  | 0b000000\n  | 0b010101\n  | 0b010101;\n\nexport const COMMANDS: {\n  asm: Record<COMMANDS_ASM, COMMANDS_OP>;\n  op: Record<COMMANDS_OP, COMMANDS_ASM>;\n} = {\n  asm: {\n    \"0\": 0b101010, // 42 0x2A\n    \"1\": 0b111111, // 63 0x3F\n    \"-1\": 0b111010, // 58 0x3A\n    D: 0b001100, // 12 0x0C\n    A: 0b110000, // 48 0x30\n    M: 0b110000, // 48 0x30\n    \"!D\": 0b001101, // 13 0x0D\n    \"!A\": 0b110001, // 49 0x31\n    \"-D\": 0b001111, // 15 0x0F\n    \"-A\": 0b110011, // 51 0x33\n    \"D+1\": 0b011111, // 31 0x1F\n    \"A+1\": 0b110111, // 55 0x37\n    \"D-1\": 0b001110, // 14 0x0E\n    \"A-1\": 0b110010, // 50 0x32\n    \"D+A\": 0b000010, //  2 0x02\n    \"D-A\": 0b010011, // 19 0x13\n    \"D-M\": 0b010011, // 19 0x13\n    \"A-D\": 0b000111, //  7 0x07\n    \"D&A\": 0b000000, //  0 0x00\n    \"D&M\": 0b000000, //  0 0x00\n    \"D|A\": 0b010101, // 21 0x15\n    \"D|M\": 0b010101, // 21 0x15\n  },\n  op: {\n    0x2a: \"0\",\n    0x3f: \"1\",\n    0x3a: \"-1\",\n    0x0c: \"D\",\n    0x30: \"A\",\n    0x0d: \"!D\",\n    0x31: \"!A\",\n    0x0f: \"-D\",\n    0x33: \"-A\",\n    0x1f: \"D+1\",\n    0x37: \"A+1\",\n    0x0e: \"D-1\",\n    0x32: \"A-1\",\n    0x02: \"D+A\",\n    0x13: \"D-A\",\n    0x07: \"A-D\",\n    0x00: \"D&A\",\n    0x15: \"D|A\",\n  },\n};\n\nexport type ASSIGN_ASM = \"\" | \"M\" | \"D\" | \"MD\" | \"A\" | \"AM\" | \"AD\" | \"AMD\";\nexport type ASSIGN_OP = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\nexport const ASSIGN: {\n  asm: Record<ASSIGN_ASM, ASSIGN_OP>;\n  op: Record<ASSIGN_OP, ASSIGN_ASM>;\n} = {\n  asm: {\n    \"\": 0x0,\n    M: 0b001,\n    D: 0b010,\n    MD: 0b011,\n    A: 0b100,\n    AM: 0b101,\n    AD: 0b110,\n    AMD: 0b111,\n  },\n  op: {\n    0x0: \"\",\n    0x1: \"M\",\n    0x2: \"D\",\n    0x3: \"MD\",\n    0x4: \"A\",\n    0x5: \"AM\",\n    0x6: \"AD\",\n    0x7: \"AMD\",\n  },\n};\n\nexport type JUMP_ASM =\n  | \"\"\n  | \"JGT\"\n  | \"JEQ\"\n  | \"JGE\"\n  | \"JLT\"\n  | \"JNE\"\n  | \"JLE\"\n  | \"JMP\";\nexport type JUMP_OP = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\nexport const JUMP: {\n  asm: Record<JUMP_ASM, JUMP_OP>;\n  op: Record<JUMP_OP, JUMP_ASM>;\n} = {\n  asm: {\n    \"\": 0b0,\n    JGT: 0b001,\n    JEQ: 0b010,\n    JGE: 0b011,\n    JLT: 0b100,\n    JNE: 0b101,\n    JLE: 0b110,\n    JMP: 0b111,\n  },\n  op: {\n    0x0: \"\",\n    0x1: \"JGT\",\n    0x2: \"JEQ\",\n    0x3: \"JGE\",\n    0x4: \"JLT\",\n    0x5: \"JNE\",\n    0x6: \"JLE\",\n    0x7: \"JMP\",\n  },\n};\n\nexport const Flags = {\n  0x01: \"Positive\",\n  0x00: \"Zero\",\n  0x0f: \"Negative\",\n  Positive: 0x01,\n  Zero: 0x00,\n  Negative: 0x0f,\n};\n\nexport function alu(op: number, d: number, a: number): [number, number] {\n  let o = 0;\n  switch (op) {\n    case 0x2a:\n      o = 0;\n      break;\n    case 0x3f:\n      o = 1;\n      break;\n    case 0x3a:\n      o = -1;\n      break;\n    case 0x0c:\n      o = d;\n      break;\n    case 0x30:\n      o = a;\n      break;\n    case 0x0d:\n      o = ~d;\n      break;\n    case 0x31:\n      o = ~a;\n      break;\n    case 0x0f:\n      o = -d;\n      break;\n    case 0x33:\n      o = -a;\n      break;\n    case 0x1f:\n      o = d + 1;\n      break;\n    case 0x37:\n      o = a + 1;\n      break;\n    case 0x0e:\n      o = d - 1;\n      break;\n    case 0x32:\n      o = a - 1;\n      break;\n    case 0x02:\n      o = d + a;\n      break;\n    case 0x13:\n      o = d - a;\n      break;\n    case 0x07:\n      o = a - d;\n      break;\n    case 0x00:\n      o = d & a;\n      break;\n    case 0x15:\n      o = d | a;\n      break;\n  }\n\n  o = o & 0xffff;\n  const flags =\n    o === 0 ? Flags.Zero : o & 0x8000 ? Flags.Negative : Flags.Positive;\n  return [o, flags];\n}\n","import {\n  ASSIGN,\n  ASSIGN_ASM,\n  ASSIGN_OP,\n  COMMANDS,\n  COMMANDS_ASM,\n  COMMANDS_OP,\n  JUMP,\n  JUMP_ASM,\n  JUMP_OP,\n} from \"../cpu/alu.js\";\n\nexport type CommandOps = keyof typeof COMMANDS.op;\nexport type JumpOps = keyof typeof JUMP.op;\nexport type StoreOps = keyof typeof ASSIGN.op;\n\nexport function asm(op: number): string {\n  if (op & 0x8000) {\n    return cInstruction(op);\n  }\n  return aInstruction(op);\n}\n\nfunction cInstruction(op: number): string {\n  op = op & 0xffff; // Clear high order bits\n  const mop = (op & 0x1000) >> 12;\n  const cop: CommandOps = ((op & 0b0000111111000000) >> 6) as CommandOps;\n  const sop: StoreOps = ((op & 0b0000000000111000) >> 3) as StoreOps;\n  const jop: JumpOps = (op & 0b0000000000000111) as JumpOps;\n\n  if (COMMANDS.op[cop] === undefined) {\n    // Invalid commend\n    return \"#ERR\";\n  }\n\n  let command = COMMANDS.op[cop];\n  if (mop) {\n    command = command.replace(/A/g, \"M\") as COMMANDS_ASM;\n  }\n\n  const store = ASSIGN.op[sop];\n  const jump = JUMP.op[jop];\n\n  let instruction: string = command;\n  if (store) {\n    instruction = `${store}=${instruction}`;\n  }\n  if (jump) {\n    instruction = `${instruction};${jump}`;\n  }\n\n  return instruction;\n}\n\nfunction aInstruction(op: number): string {\n  return \"@\" + (op & 0x7fff).toString(10);\n}\n\nexport function op(asm: string): number {\n  if (asm[0] === \"@\") {\n    return aop(asm);\n  } else {\n    return cop(asm);\n  }\n}\n\nfunction aop(asm: string): number {\n  return parseInt(asm.substring(1), 10);\n}\n\nfunction cop(asm: string): number {\n  const parts = asm.match(\n    /(?:(?<assign>[AMD]{1,3})=)?(?<operation>[-!01ADM&|]{1,3})(?:;(?<jump>JGT|JLT|JGE|JLE|JEQ|JMP))?/\n  );\n  const { assign, operation, jump } = parts?.groups ?? {};\n  const mode = operation.includes(\"M\") || assign.includes(\"M\");\n  const aop = ASSIGN.asm[(assign as ASSIGN_ASM) ?? \"\"];\n  const jop = JUMP.asm[(jump as JUMP_ASM) ?? \"\"];\n  const cop = COMMANDS.asm[(operation as COMMANDS_ASM) ?? \"\"];\n\n  return makeC(mode, cop, aop, jop);\n}\n\nexport function makeC(\n  isM: boolean,\n  op: COMMANDS_OP,\n  assign: ASSIGN_OP = 0,\n  jmp: JUMP_OP = 0\n): number {\n  const C = 0xe000;\n  const A = isM ? 0x1000 : 0;\n  const O = op << 6;\n  const D = (assign ?? 0) << 3;\n  const J = jmp ?? 0;\n  return C + A + O + D + J;\n}\n","const Hex = [\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n];\n\nexport function chars(i: number): string {\n  return Hex[i] ?? \"X\";\n}\n\nexport function bits(i: number): string {\n  switch (i) {\n    case 0x0:\n      return \"0000\";\n    case 0x1:\n      return \"0001\";\n    case 0x2:\n      return \"0010\";\n    case 0x3:\n      return \"0011\";\n    case 0x4:\n      return \"0100\";\n    case 0x5:\n      return \"0101\";\n    case 0x6:\n      return \"0110\";\n    case 0x7:\n      return \"0111\";\n    case 0x8:\n      return \"1000\";\n    case 0x9:\n      return \"1001\";\n    case 0xa:\n      return \"1010\";\n    case 0xb:\n      return \"1011\";\n    case 0xc:\n      return \"1100\";\n    case 0xd:\n      return \"1101\";\n    case 0xe:\n      return \"1110\";\n    case 0xf:\n      return \"1111\";\n    default:\n      return \"erro\";\n  }\n}\n\nexport function int(n: string, radix: number): number {\n  const i = parseInt(n.replace(/[^\\d+-.xa-fA-F]/g, \"\"), radix);\n  return i & 0xffff;\n}\n\nexport function int16(i: string): number {\n  return int(i, 16);\n}\n\nexport function int10(i: string): number {\n  return int(i, 10);\n}\n\nexport function int2(i: string): number {\n  return int(i, 2);\n}\n\nexport function hex(i: number): string {\n  const hu = chars((i & 0xf000) >> 12);\n  const hl = chars((i & 0x0f00) >> 8);\n  const lu = chars((i & 0x00f0) >> 4);\n  const ll = chars(i & 0x000f);\n\n  return `0x${hu}${hl}${lu}${ll}`;\n}\n\nexport function bin(i: number, precision = 16): string {\n  const hu = bits((i & 0xf000) >> 12);\n  const hl = bits((i & 0x0f00) >> 8);\n  const lu = bits((i & 0x00f0) >> 4);\n  const ll = bits(i & 0x000f);\n\n  // return `${hu} ${hl} ${lu} ${ll}`;\n  return `${hu}${hl}${lu}${ll}`.substring(16 - precision); // Match the book's formatting\n}\n\nexport function dec(i: number): string {\n  i = i & 0xffff;\n  if (i === 0x8000) {\n    return \"-32768\";\n  }\n  if (i & 0x8000) {\n    i = (~i + 1) & 0x7fff;\n    return `-${i}`;\n  }\n  return `${i}`;\n}\n\nexport function uns(i: number): string {\n  i = i & 0xffff;\n  return `${i}`;\n}\n\nexport function nand16(a: number, b: number): number {\n  a = a & 0xffff;\n  b = b & 0xffff;\n  let c = ~(a & b);\n  c = c & 0xffff;\n  return c;\n}\n"],"names":["reducePin","pin","bits","range","width","map","i","voltage","reverse","reducePins","pins","entries","FullPinout","props","sim","inPins","outPins","internalPins","className","PinoutBlock","header","length","toggle","disabled","pending","colSpan","immPin","name","Pin","role","style","v","onClick","UNKNOWN_PARSE_ERROR","grammars","Base","ohm","baseSemantics","createSemantics","makeParser","grammar","semantics","property","root","source","match","succeeded","parsed","parse","Ok","Err","message","shortMessage","e","extendOperation","List","list","_","asIteration","addAttribute","decNumber","digits","int10","sourceString","wholeDec","binNumber","int2","hexNumber","int16","Number","num","value","Name","ident","identifier","__","this","child","String","_a","str","_b","hdlGrammar","hdlSemantics","extendSemantics","SubBus","startNode","endNode","start","end","WireSide","index","undefined","Wire","left","right","rhs","isTerminal","lhs","Wires","children","Part","_c","wires","Parts","parts","c","BuiltinPart","PartList","ClockedList","clocked","PinDecl","PinList","Chip","body","ins","outs","Clocked","Root","HDL","parser","n","tstGrammar","tstSemantics","extendAttribute","Index","idx","FileName","_open","dec","_close","OutputFormat","id","lpad","rpad","builtin","address","TstEvalOperation","op","TstOutputOperation","TstOutputListOperation","formats","spec","format","TstSetOperation","setOp","TstEchoOperation","TstClearEchoOperation","TstLoadROMOperation","_r","_l","file","Condition","TstWhile","cond","_o","statements","statement","condition","span","startIdx","endIdx","TstRepeat","count","TstStatement","stmt","ops","operation","break","Tst","lines","tst","clock","TST","Clock","LOW","BehaviorSubject","level","ticks","Subject","subject","frameSubject","HIGH","next","assert","tock","tick","Bus","state","newWidth","push","busVoltage","bit","forEach","pull","reduce","b","nextVoltage","InSubBus","bus","connect","mask","high","low","mid","OutSubBus","ConstantBus","TRUE_BUS","FALSE_BUS","parsePinDecl","toPin","groups","w","Symbol","iterator","Pins","Map","has","set","minWidth","get","insert","values","internals","Set","inn","out","internal","clockedPins","$","subscribe","eval","size","reset","hasIn","hasOut","offset","getBuiltin","BUILTIN_NAMES","includes","part","connections","add","to","from","isOutPin","wireOutPin","wireInPin","toLowerCase","emplace","partPin","assertExists","chipPin","findPin","isInternal","Error","ensureWidth","remove","fs","path","load","Low","ClockedChip","unsubscribe","Math","pow","And","a","and","in","And16","and16","DMux","sel","dmux","DMux4Way","dmux4way","d","DMux8Way","dmux8way","f","g","h","mux16","mux16_4","s2","Mux","mux","Mux16","Mux4Way16","Mux8Way16","mux16_8","Nand","nand","Nand16","nand16","Not","Not16","or","Or","Or16","or16","Or8way","Xor","xor","Xor16","xor16","add16","Add16","ALUNoStat","x","y","alu","ALU","flags","ng","Flags","zr","halfAdder","HalfAdder","sum","carry","FullAdder","s","ca","fullAdder","Inc16","asmGrammar","asmSemantics","isALabelInstruction","inst","label","asm","instructions","instruction","AInstruction","_at","val","type","CInstruction","assignN","opN","jmpN","assign","replace","jmp","isM","COMMANDS","jump","JUMP","store","ASSIGN","Label","ASM","passes","fillLabel","nextLabel","symbols","SCREEN","KEYBOARD","unfilled","line","emit","makeC","filter","endsWith","loadHack","loadAsm","readFile","isErr","split","trim","FORMATS","Memory","memory","Int16Array","cell","current","isFinite","updates","slice","fn","RAM","_memory","MemoryChip","_address","_nextData","RamBus","ram","RAM8","RAM64","RAM512","RAM4K","RAM16K","emptyState","A","D","PC","flag","BITS","decode","x1","x2","am","d1","d2","d3","j1","j2","j3","cpuTick","inM","cpuTock","alu2","addressM","outM","writeM","CPU","ROM","input","tickState","cpu","ROM32K","at","Screen","Keyboard","key","keyboard","screen","OFFSET","startsWith","_state","cpuInput","output","Computer","wire","Bit","Register","VRegister","REGISTRY","t","ChipCtor","chip","getBuiltinChip","pinWidth","build","toString","buildChip","partChip","Output","variable","len","lPad","rPad","fmt","parseInt","test","substring","padCenter","getVar","padLeft","B","bin","X","hex","padRight","space","leftSpace","floor","rightSpace","padStart","padEnd","Test","FileSystem","_content","_filename","outputs","_outputList","_steps","steps","_log","_step","done","do","step","breakpoints","clear","print","join","isTstLineStatment","isTstWhileStatement","ChipTest","pinOrBus","filename","addInstruction","makeLineStatement","repeat","TestWhileInstruction","TestRepeatInstruction","TestCompoundInstruction","makeInstruction","TestTickInstruction","TestTockInstruction","TestEvalInstruction","TestOutputInstruction","TestSetInstruction","TestOutputListInstruction","TestEchoInstruction","TestClearEchoInstruction","TestLoadROMInstruction","checkExhaustive","setVar","specs","addOutput","outputList","_test","innerSteps","hasVar","check","content","echo","clearEcho","pushd","popd","StorageContext","createContext","LocalStorageFileSystemAdapter","useImmerReducer","reducers","initialState","useReducer","command","produce","draft","action","payload","useStateInitializer","init","useState","setState","useEffect","PROJECT_NAMES","makeHdl","reduceChip","invalid","makeChipStore","setStatus","storage","dispatch","dropdowns","project","chips","CHIP_PROJECTS","chipName","findDropdowns","controls","hasBuiltin","runningTest","maybeChip","display","setTimeout","actions","reloadChip","files","hdl","cmp","setFiles","updateChip","setProject","setChip","testRunning","testFinished","updateTestStep","log","currentStep","p","ChipProjects","loadChip","updateFiles","compileChip","compileTest","maybeParsed","replaceChip","nextChip","nextPin","fsName","ext","Promise","all","catch","console","saveChip","prj","writeFile","isLow","frame","useBuiltin","with","setFileSystem","runTest","run","cmpGrammar","cmpSemantics","cells","CMP","DiffTable","compare","cmpData","outData","failures","table","max","cmpI","outI","j","pass","fontFamily","marginBottom","row","DiffCell","ErrorPanel","error","failed","open","Textarea","onChange","language","text","setText","target","Monaco","highlight","theme","useContext","AppContext","monaco","useMonaco","editor","useRef","decorations","codeTheme","useCallback","window","matchMedia","matches","onMount","ed","updateOptions","fontSize","minimap","enabled","scrollBeyondLastLine","model","getModel","nextDecoration","getPositionAt","Range","fromPositions","options","inlineClassName","revealRangeInCenter","deltaDecorations","readOnly","setModelMarkers","exec","column","startLineNumber","endLineNumber","startColumn","endColumn","getLineContent","severity","Editor","setError","doParse","useMemo","debounce","onChangeCB","canUse","wants","Panel","footer","Accordian","summary","Runbar","runner","timer","running","speed","finishFrame","bind","update","setSteps","setSpeed","stop","makeTimerStore","dispatcher","useTimer","Timer","now","Date","delta","min","requestAnimationFrame","displayClock","Clockface","clockface","setClockface","subscription","useClockface","whiteSpace","ALUComponent","RegisterComponent","KeyMap","Enter","Backspace","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Home","End","PageUp","PageDown","Insert","Delete","Escape","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","showPicker","setShowPicker","setBits","setKey","event","keypress","mapping","code","charCodeAt","keyPressToHackCharacter","preventDefault","changeKey","ref","focus","onKeyDown","Mode","mode","setMode","setValue","view","cursor","doSelect","select","doChange","edit","position","zIndex","marginTop","onBlur","onKeyPress","defaultValue","render","doScroll","scrollTop","totalHeight","toleranceHeight","bufferedItems","settings","itemHeight","minIndex","maxIndex","data","limit","getData","topPaddingHeight","bottomPaddingHeight","viewportRef","MAX_SAFE_INTEGER","startIndex","tolerance","fillVirtualScrollSettings","startState","adapter","viewportHeight","reducer","scrollReducer","dispatchScroll","initialScroll","div","rows","height","rowKey","overflowY","overflowAnchor","onScroll","MemoryBlock","editable","MemoryCell","rounded","background","flex","textAlign","newValue","setFormat","setJmp","goto","setGoto","jumpTo","filePicker","doLoad","doUpdate","placeholder","option","checked","doFormat","WHITE","pixel","color","frameFinished","canvas","ctx","getContext","image","getImageData","col","putImageData","drawImage","frame$","maxWidth","boxSizing","marginInline","margin","borderTop","borderLeft","borderBottom","borderRight","makeVisualizations","localStorage","useChipPageStore","setHdl","setTst","setCmp","compile","loadTest","clockActions","setUseBuiltin","toggleUseBuiltin","selectors","number","hdlPanel","tabIndex","chipButtons","visualizations","makeVisualizationsWithId","pinsPanel","selectedTestTab","setSelectedTestTab","testPanel","M","MD","AM","AD","AMD","JGT","JEQ","JGE","JLT","JNE","JLE","JMP","Positive","Zero","Negative","o","mop","cop","sop","jop","cInstruction","aInstruction","aop","C","O","J","Hex","chars","int","radix","hu","hl","lu","ll","precision","uns"],"sourceRoot":""}