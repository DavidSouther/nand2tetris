{"version":3,"file":"static/js/881.ec0e899b.chunk.js","mappings":"qUAWO,SAASA,EAAUC,GACxB,MAAO,CACLA,IAAAA,EACAC,MAAMC,EAAAA,EAAAA,GAAM,EAAGF,EAAIG,OAChBC,KAAI,SAACC,GAAD,MAAO,CAACA,EAAGL,EAAIM,QAAQD,GAAvB,IACJE,UAEN,CAEM,SAASC,EAAWC,GACzB,OAAO,OAAIA,EAAKC,WAAWN,IAAIL,EAChC,CAOM,IAAMY,EAAa,SAACC,GAKzB,IAAMC,GACJ,SAACC,GAAD,QACEC,OAAQ,4DAAOH,EAAMI,IAAIP,KAAKQ,UAI1BL,EAAMI,MAGRE,GACJ,SAACJ,GAAD,QACEC,OAAQ,8DAAOH,EAAMO,KAAKV,KAAKQ,UAI3BL,EAAMO,OAGRC,GACJ,SAACN,GAAD,QACEC,OAAQ,kEAAOH,EAAMS,SAASZ,KAAKQ,UAI/BL,EAAMS,WAGd,OACE,kBAAOC,UAAU,SAAjB,UACE,6BACGT,EACAK,EACAE,MAIR,EAEYN,EAAc,SAACF,GAC1B,OACE,gCACGA,EAAMH,KAAKQ,OAAS,IACnB,yBACE,eAAIM,QAAS,EAAb,SAAiBX,EAAMG,YAG1B,OAAIH,EAAMH,MAAML,KAAI,SAACoB,GAAD,OACnB,2BACE,wBAAKA,EAAOxB,IAAIyB,QAChB,yBACE,SAACC,EAAD,CAAK1B,IAAKwB,EAAQG,OAAQf,EAAMe,aAH3BH,EAAOxB,IAAIyB,KADD,MAU1B,EAsCKC,EAAM,SAAC,GAMN,IALL1B,EAKI,EALJA,IACA2B,EAII,EAJJA,OAKA,OACE,qBAAUC,KAAK,QAAQC,MAAO,CAAE1B,MAAM,GAAD,OAAKH,EAAIC,KAAKgB,OAAd,QAArC,SACGjB,EAAIC,KAAKG,KAAI,+BAAEC,EAAF,KAAKyB,EAAL,YACZ,mBAEEC,QAAS,yBAAMJ,QAAN,IAAMA,OAAN,EAAMA,EAAS3B,EAAIA,IAAKK,EAAxB,EACT2B,cAAqBC,IAAXN,EACV,4BAAoBtB,GAJtB,SAMGyB,GALIzB,EAFK,KAYnB,E,kDC/IY6B,EAAsB,8BAKtBC,EAAW,CACtBC,KAAMC,EAAAA,EAAAA,QAFS,qhDAKJC,EAAgBH,EAASC,KAAKG,kBA2CpC,SAASC,EACdC,EACAC,GAEqD,IADrDC,EACoD,uDADV,qBAAGC,IAAH,EAE1C,OAAO,SAAeC,GACpB,IACE,IAKO,IALDC,EAAQL,EAAQK,MAAMD,GAC5B,GAAIC,EAAMC,YAAa,CACrB,IAAMC,EAASN,EAAUI,GACnBG,EAAQN,EAASK,GACvB,OAAOE,EAAAA,EAAAA,IAAGD,EACX,CACC,OAAOE,EAAAA,EAAAA,IAAI,CACTC,QAAO,UAAEN,EAAMM,eAAR,QAAmBlB,EAC1BmB,aAAY,UAAEP,EAAMO,oBAAR,QAAwBnB,GAKzC,CAFC,MAAOoB,GACP,OAAOH,EAAAA,EAAAA,IAAIG,EACZ,CACF,CACF,CA/DDhB,EAAciB,gBAAgB,cAAe,CAC3CC,KAD2C,SACtCC,EAAMC,GACT,OAAOD,EAAKE,aACb,IAGHrB,EAAcsB,aAAa,QAAS,CAClCC,UADkC,SACxBH,EAAGI,GACX,OAAOC,EAAAA,EAAAA,IAAMD,EAAOE,aACrB,EACDC,SAJkC,SAIzBP,EAAGI,GACV,OAAOC,EAAAA,EAAAA,IAAMD,EAAOE,aACrB,EACDE,UAPkC,SAOxBR,EAAGI,GACX,OAAOK,EAAAA,EAAAA,IAAKL,EAAOE,aACpB,EACDI,UAVkC,SAUxBV,EAAGI,GACX,OAAOO,EAAAA,EAAAA,IAAMP,EAAOE,aACrB,EACDM,OAAQ,SAACC,GACP,OAAOA,EAAIC,KACZ,IAGHlC,EAAcsB,aAAa,OAAQ,CACjCa,WADiC,SACtBf,EAAGgB,GACZ,OAAOC,KAAKX,YACb,EACDY,KAJiC,SAI5BlB,GAAY,IAAD,EACd,iBAAOiB,KAAKE,MAAM,UAAlB,aAAO,EAAepD,IACvB,IAGHa,EAAcsB,aAAa,SAAU,CACnCkB,OADmC,SAC5BC,EAAIC,EAAKC,GACd,OAAOD,EAAIhB,YACZ,ICfH,IAAMkB,EAAU,4sBACHzC,EAAUJ,EAAAA,EAAAA,QAAY6C,EAAY/C,GAElCgD,EAAe1C,EAAQ2C,gBAAgB9C,GAEpD6C,EAAavB,aAAuB,SAAU,CAC5CyB,OAD4C,SACrCN,EAAIO,EAAWC,EAASN,GAAK,IAAD,MAC3BO,EAAQF,EAAUd,MAExB,MAAO,CAAEgB,MAAAA,EAAOC,IADP,oBAAGF,EAAQV,MAAM,UAAjB,iBAAG,EAAkBA,MAAM,UAA3B,aAAG,EAA4BL,aAA/B,QAAwCgB,EAElD,IAGHL,EAAavB,aAAuB,WAAY,CAC9C8B,SAD8C,WAC3BC,GAAQ,IAAD,IAAflE,EAAe,EAAfA,KACT,sBAAwBkE,EAAMd,MAAM,UAApC,aAAwB,EAAgBQ,cAAxC,QAA+D,CAC7DG,WAAOvD,EACPwD,SAAKxD,GAEP,MAAO,CAAEjC,IAAKyB,EAAM+D,MAJpB,EAAQA,MAImBC,IAJ3B,EAAeA,IAKhB,IAGHN,EAAavB,aAAmB,OAAQ,CACtCgC,KADsC,SACjCC,EAAMnC,EAAGoC,GACZ,IAAIC,EAAgBD,EAAME,aACtB,CAAEhG,IAAK8F,EAAM9B,cACb8B,EAAMJ,SACV,MAAO,CAAEO,IAAKJ,EAAKH,SAAsBK,IAAAA,EAC1C,IAGHZ,EAAavB,aAAqB,QAAS,CACzCsC,MADyC,SACnCzC,GACJ,OAAOA,EAAKE,cAAcwC,SAAS/F,KAAI,qBAAGwF,IAAH,GACxC,IAGHT,EAAavB,aAAmB,OAAQ,CACtCwC,KADsC,WACvBrB,EADuB,EACRE,EAAIoB,GAChC,MAAO,CAAE5E,KAD2B,EAA/BA,KAC0B6E,MADK,EAAjBJ,MAEpB,IAGHf,EAAavB,aAAiC,QAAS,CACrD2C,MADqD,SAC/C7C,EAAG8C,GACP,OAAOA,EAAML,SAAS/F,KAAI,SAACqG,GAAD,OAAOA,EAAEL,IAAT,GAC3B,EACDM,YAJqD,SAIzC3B,EAAIE,GACd,MAAO,SACR,IAGHE,EAAavB,aAAiC,WAAY,CACxD+C,SADwD,SAC/ClD,GACP,OAAOA,EAAK8C,KACb,IAGHpB,EAAavB,aAAuB,UAAW,CAC7CgD,YAD6C,SACjC7B,EAAI8B,EAAS5B,GAAK,IAAD,EAC3B,iBACE4B,EACGlD,cACAwC,SAAS/F,KACR,qBAAG4D,YAAH,WAJN,QAKS,EAEV,IAGHmB,EAAavB,aAA6B,UAAW,CACnDkD,QADmD,WACjC3G,GAAQ,IAAD,MACvB,MAAO,CACLH,IAFqB,EAAfyB,KAGNtB,MAAK,oBAAEA,EAAM0E,MAAM,UAAd,iBAAE,EAAgBA,MAAM,UAAxB,aAAE,EAA0BL,aAA5B,QAAqC,EAE7C,IAGHW,EAAavB,aAA+B,UAAW,CACrDmD,QADqD,SAC7CtD,GACN,OAAOA,EACJE,cACAwC,SAAS/F,KAAI,qBAAG0G,OAAH,GACjB,IAGH3B,EAAavB,aAAuB,OAAQ,CAC1CoD,KAD0C,SACrCjC,EADqC,EACvBE,EAAIgC,EAAMZ,GAAK,IAAD,gBAC/B,MAAO,CACL5E,KAF6B,EAAtBA,KAGPT,IAAG,oBAAEiG,EAAKpC,MAAM,GAAGA,MAAM,UAAtB,iBAAE,EAAwBA,MAAM,UAAhC,aAAE,EAAkCkC,eAApC,QAA+C,GAClD5F,KAAI,oBAAE8F,EAAKpC,MAAM,GAAGA,MAAM,UAAtB,iBAAE,EAAwBA,MAAM,UAAhC,aAAE,EAAkCkC,eAApC,QAA+C,GACnDP,MAAK,UAAES,EAAKpC,MAAM,GAAG8B,gBAAhB,QAA4B,GACjCE,QAAO,UAAEI,EAAKpC,MAAM,GAAGA,MAAM,UAAtB,aAAE,EAAwBqC,QAEpC,IAGH/B,EAAavB,aAAuB,OAAQ,CAC1CuD,KAD0C,SACrCvE,GAAO,IAAD,EACT,iBAAOA,EAAKiC,MAAM,UAAlB,aAAO,EAAemC,IACvB,IAGI,IAAMI,EAAM,CACjBC,OAAQ5E,EACRA,QAASyC,EACTxC,UAAWyC,EACXlC,MAAOT,EAAqBC,EAAS0C,GAAc,SAACmC,GAAD,OAAOA,EAAEN,IAAT,KCxExCO,EAAU,qlCACV9E,EAAUJ,EAAAA,EAAAA,QAAYkF,EAAYpF,GAClCqF,EAAe/E,EAAQ2C,gBAAgB9C,GAEpDkF,EAAaC,gBAAwB,QAAS,CAC5CC,MAD4C,SACtC3C,EAAI4C,EAAK1C,GAAK,IAAD,IACjB,wBAAO0C,QAAP,IAAOA,GAAP,UAAOA,EAAK9C,MAAM,UAAlB,aAAO,EAAeL,aAAtB,SAAgC,CACjC,IAGHgD,EAAaC,gBAAwB,OAAQ,CAC3CG,SAD2C,SAClCnG,EAAMoG,EAAMC,GACnB,MAAM,GAAN,OAAUrG,EAAKA,KAAf,YAAuBqG,EAAIrG,KAC5B,IAGH+F,EAAa5D,aAAqB,QAAS,CACzC8D,MADyC,SACnCK,EAAOC,EAAKC,GAAS,IAAD,IACxB,2BAAOD,EAAInD,MAAM,UAAjB,aAAO,EAAcL,aAArB,QAA8B,CAC/B,IAGHgD,EAAa5D,aAA4B,SAAU,CACjDsE,aADiD,WAG/CvC,EACAZ,EAJ+C,IAO/CE,EAP+C,EAS/CoB,EAT+C,GAW9C,IAAD,IATQ8B,EASR,EATE1G,KAGcI,EAMhB,EANEmC,aACOoE,EAKT,EALE5D,MAEOrE,EAGT,EAHEqE,MAEO6D,EACT,EADE7D,MAEF,MAAO,CACL2D,GAAAA,EACAG,aAA6BrG,KAAf,OAAL0D,QAAK,IAALA,OAAA,EAAAA,EAAOd,MAAM,IACtB0D,QAAO,iBAAE5C,QAAF,IAAEA,GAAF,UAAEA,EAAOd,MAAM,UAAf,aAAE,EAAiBL,aAAnB,SAA6B,EACpC3C,MAAOA,EACP1B,MAAAA,EACAiI,KAAAA,EACAC,KAAAA,EAEH,IAGHb,EAAa5D,aAA2B,YAAa,CACnD4E,iBADmD,wHAClCC,GACf,MAAO,CAAEA,GAAIA,EAAGzE,aACjB,IACD0E,mBAJmD,SAIhChF,GACjB,MAAO,CAAE+E,GAAI,SACd,EACDE,uBAPmD,SAO5BjF,EAAGkF,GACxB,MAAO,CACLH,GAAI,cACJI,KAAMD,EAAQzC,SAAS/F,KAAI,SAACkH,GAAD,OAAOA,EAAEwB,MAAT,IAE9B,EACDC,gBAbmD,8HAanCN,EAbmC,EAarB9C,EAbqB,GAaF,IAAD,IACxCqD,EAAyB,CAC7BP,GAAI,MACJN,GAH4C,EAA1B1G,KAIlB+C,MAJ4C,EAATA,OAM/BK,EAAK,UAAGc,EAAMd,MAAM,UAAf,iBAAG,EAAgBA,MAAM,UAAzB,aAAG,EAA0BA,MAAM,GAI9C,OAHIA,IACFmE,EAAMrD,MAAQd,EAAML,OAEfwE,CACR,IACDC,iBAzBmD,SAyBlCR,EAAIzD,GACnB,MAAO,CACLyD,GAAI,OACJrF,QAAS4B,EAAIF,OAEhB,EACDoE,sBA/BmD,SA+B7BT,GACpB,MAAO,CACLA,GAAI,aAEP,EACDU,oBApCmD,SAoC/BC,EAAIC,EApC2B,GAqCjD,MAAO,CACLZ,GAAI,OACJa,KAHkC,EAAR7H,KAK7B,IAGH+F,EAAa5D,aAA2B,YAAa,CACnD2F,UADmD,SACzCd,EADyC,EACnBe,EAAIC,EAAYpD,GAAK,IAA9BqD,EAA6B,EAApClF,MACd,MAAO,CACLiF,WAAYA,EAAWtD,SAAS/F,KAAI,qBAAGuJ,SAAH,IACpCD,MAAAA,EAEH,EACDE,aAPmD,0HAOtCnG,EAAMgC,GACjB,IAAMoE,EAAqB,CACzBC,IAAKrG,EACFE,cACAwC,SAAS/F,KACR,qBAAG2J,SAAH,IAEJC,KAAM,CACJxE,MAAOb,KAAK9B,OAAOoH,SACnBxE,IAAKd,KAAK9B,OAAOqH,SAMrB,MAHyB,MAArBzE,EAAIzB,eACN6F,EAAKM,OAAQ,GAERN,CACR,MAGHrC,EAAa5D,aAAkB,MAAO,CACpCwG,IADoC,SAChCC,GACF,MAAO,CACLA,MAAOA,EAAMlE,SAAS/F,KAAI,SAACkH,GAAD,OAAOA,EAAEqC,SAAT,IAE7B,IAGHnC,EAAa5D,aAAkB,OAAQ,CACrCuD,KADqC,YAEnC,OADY,EAAPmD,GAEN,IAGI,ICrMHC,E,EDqMSC,EAAM,CACjB/H,QAAS8E,EACT7E,UAAW8E,EACXH,OAAQ5E,EACRQ,MAAOT,EAAgBC,EAAS+E,I,yFCxMrBiD,EAAb,WA2BE,cAAuB,oBA1BfC,MAAiBC,EA0BH,KAzBdC,MAAQ,EAyBM,KAhBdC,QAAU,IAAIC,EAAAA,EAAsB,CAC1CJ,MAAO/F,KAAK+F,MACZE,MAAOjG,KAAKiG,QAcQ,KAZbG,EAAsBpG,KAAKkG,QAYd,KAVbG,OAAS,IAAIC,EAAAA,CAUE,CA3B1B,mCAmBE,WACEtG,KAAKkG,QAAQK,KAAK,CAChBR,MAAO/F,KAAK+F,MACZE,MAAOjG,KAAKiG,QAEdjG,KAAKqG,OAAOE,MACb,GAzBH,mBA6BE,WACEvG,KAAK+F,MAAQC,EACbhG,KAAKiG,MAAQ,EACbjG,KAAKuG,MACN,GAjCH,kBAmCE,YACEC,EAAAA,EAAAA,IAAOxG,KAAK+F,QAAUC,EAAK,6BAC3BhG,KAAK+F,MAAQU,EACbzG,KAAKuG,MACN,GAvCH,kBAyCE,YACEC,EAAAA,EAAAA,IAAOxG,KAAK+F,QAAUU,EAAM,gCAC5BzG,KAAK+F,MAAQC,EACbhG,KAAKiG,OAAS,EACdjG,KAAKuG,MACN,GA9CH,oBAgDE,WACEvG,KAAK+F,QAAUU,EAAOzG,KAAK0G,OAAS1G,KAAK2G,MAC1C,GAlDH,kBAoDE,WACE3G,KAAK2G,OACL3G,KAAK0G,MACN,GAvDH,sBAyDE,WACE,MAAM,GAAN,OAAU1G,KAAKiG,OAAf,OAAuBjG,KAAK+F,QAAUU,EAAO,IAAM,GACpD,IA3DH,kBAIE,WAIE,YAHcnJ,IAAVsI,IACFA,EAAQ,IAAIE,GAEPF,CACR,KATH,KCHaa,EAAO,EACPT,EAAM,EAaNY,EAAb,WAIE,WAAqB9J,GAAmC,IAAZtB,EAAW,uDAAH,GAAG,oBAAlCsB,KAAAA,EAAkC,KAAXtB,MAAAA,EAAW,KAHvDqL,WAGuD,OAFvDN,KAAc,GAGZvG,KAAK6G,OAAQtL,EAAAA,EAAAA,GAAM,EAAGyE,KAAKxE,OAAOC,KAAI,kBAAMuK,CAAN,GACvC,CANH,0CAQE,SAAYc,IACVN,EAAAA,EAAAA,IAAOM,GAAY,GAAb,kCAA4CA,EAA5C,UACF9G,KAAKxE,MAAQsL,IACd9G,KAA2BxE,MAAQsL,EACpC9G,KAAK6G,MAAL,kBACK7G,KAAK6G,QADV,QAEKtL,EAAAA,EAAAA,GAAMyE,KAAKxE,MAAOsL,GAAUrL,KAAI,kBAAMuK,CAAN,MAGxC,GAjBH,qBAmBE,SAAQO,GACNvG,KAAKuG,KAAKQ,KAAKR,GACfA,EAAKS,WAAahH,KAAKgH,UACxB,GAtBH,kBAwBE,SAAKrL,GAA4B,IAAVsL,EAAS,uDAAH,GAC3BT,EAAAA,EAAAA,IACES,GAAO,GAAKA,EAAMjH,KAAKxE,MADnB,6BAEkBwE,KAAKlD,KAFvB,YAE+BmK,IAErCjH,KAAK6G,MAAMI,GAAOtL,EAClBqE,KAAKuG,KAAKW,SAAQ,SAACvE,GAAD,OAAOA,EAAEwE,KAAKxL,EAASsL,EAAvB,GACnB,GA/BH,qBAiCE,WAA2B,IAAnBA,EAAkB,uDAAZ,EAEZ,OADAT,EAAAA,EAAAA,IAAOS,GAAO,GAAKA,EAAMjH,KAAKxE,OACvBwE,KAAK6G,MAAMI,EACnB,GApCH,sBA6CE,WAA0B,IAAD,OACvB,OAAO1L,EAAAA,EAAAA,GAAM,EAAGyE,KAAKxE,OAAO4L,QAAO,SAACC,EAAG3L,GAAJ,OAAU2L,EAAK,EAAKR,MAAMnL,IAAMA,CAAhC,GAAoC,EACxE,EA/CH,IAsCE,SAAeC,GAAkB,IAAD,oBACdJ,EAAAA,EAAAA,GAAM,EAAGyE,KAAKxE,QADA,IAC9B,2BAAsC,CAAC,IAA5BE,EAA2B,QACpCsE,KAAK6G,MAAMnL,IAAOC,EAAW,GAAKD,IAAOA,CAC1C,CAH6B,+BAI9BsE,KAAKuG,KAAKW,SAAQ,SAACvE,GAAD,OAAQA,EAAEqE,WAAa,EAAKA,UAA5B,GACnB,GA3CH,oBAiDE,WAAiB,IAAVC,EAAS,uDAAH,EACLK,EAActH,KAAKrE,QAAQsL,KAASjB,EAAMS,EAAOT,EACvDhG,KAAKmH,KAAKG,EAAaL,EACxB,KApDH,KAuDaM,GAAb,0CACE,WACUC,EACA3G,GAEP,IAAD,EADkBrF,EAClB,uDAD0B,EAC1B,uBACA,cAAMgM,EAAI1K,OAJF0K,IAAAA,EAGR,EAFQ3G,MAAAA,EAER,EADkBrF,MAAAA,GAGlBgL,EAAAA,EAAAA,IACE3F,GAAS,GAAKA,EAAQrF,GAASgM,EAAIhM,MAD/B,4CAEiCgM,EAAI1K,KAFrC,aAE8CtB,EAF9C,cAEyDqF,EAFzD,cAEoE2G,EAAIhM,MAFxE,MAIN,EAAKiM,QAAQD,GANb,CAOD,CAZH,mCAcE,SAAc7L,GAA4B,IAAVsL,EAAS,uDAAH,GACpCT,EAAAA,EAAAA,IAAOS,GAAO,GAAKA,EAAMjH,KAAKxE,OAC9BwE,KAAKwH,IAAIL,KAAKxL,EAASqE,KAAKa,MAAQoG,EACrC,GAjBH,qBAmBE,WAAoC,IAAnBA,EAAkB,uDAAZ,EAErB,OADAT,EAAAA,EAAAA,IAAOS,GAAO,GAAKA,EAAMjH,KAAKxE,OACvBwE,KAAKwH,IAAI7L,QAAQqE,KAAKa,MAAQoG,EACtC,GAtBH,sBA+BE,WACE,OAAQjH,KAAKwH,IAAIR,YAAchH,KAAKa,MAAS6G,GAAK1H,KAAKxE,MACxD,EAjCH,IAwBE,SAAwBG,GACtB,IAAMgM,EAAO3H,KAAKwH,IAAIR,YAAcU,GAAK1H,KAAKxE,MAAQwE,KAAKa,OACrD+G,EAAM5H,KAAKwH,IAAIR,WAAaU,GAAK1H,KAAKa,OACtCgH,GAAOlM,EAAU+L,GAAK1H,KAAKxE,SAAWwE,KAAKa,MACjDb,KAAKwH,IAAIR,WAAaW,EAAOE,EAAMD,CACpC,GA7BH,qBAmCE,SAAiBJ,IACfhB,EAAAA,EAAAA,IACExG,KAAKa,MAAQb,KAAKxE,OAASgM,EAAIhM,MAD3B,0DAE+CgM,EAAI1K,KAFnD,eAE8DkD,KAAKlD,KAFnE,MAINkD,KAAKwH,IAAMA,CACZ,KAzCH,GAA8BZ,GA4CjBkB,GAAb,0CACE,WACUN,EACA3G,GAEP,IAAD,EADkBrF,EAClB,uDAD0B,EAC1B,uBACA,cAAMgM,EAAI1K,OAJF0K,IAAAA,EAGR,EAFQ3G,MAAAA,EAER,EADkBrF,MAAAA,GAGlBgL,EAAAA,EAAAA,IAAO3F,GAAS,GAAKrF,GAASgM,EAAIhM,MAA5B,mCACN,EAAKiM,QAAQD,GAHb,CAID,CATH,uCAgBE,WACE,OAAOxH,KAAKwH,IAAIR,WAAaU,GAAK1H,KAAKxE,MACxC,EAlBH,IAWE,SAAwBG,GACtBqE,KAAKwH,IAAIR,YACNrL,EAAU+L,GAAK1H,KAAKxE,MAAQwE,KAAKa,SAAWb,KAAKa,KACrD,GAdH,qBAoBE,SAAiB2G,IACfhB,EAAAA,EAAAA,IACExG,KAAKxE,OAASgM,EAAIhM,MADd,8CAINwE,KAAKwH,IAAMA,CACZ,KA1BH,GAA+BZ,GA6BlBmB,GAAb,0CACE,WAAYjL,EAA+B+C,GAAgB,IAAD,yBACxD,cAAM/C,EAAM,KAD6B+C,MAAAA,EAAe,CAEzD,CAHH,uCAKE,WAAkB,GALpB,qBAME,WAAiB,GANnB,qBAOE,WACE,OAA0B,EAAlBG,KAAKgH,UACd,GATH,sBAcE,WACE,OAAOhH,KAAKH,KACb,EAhBH,IAWE,SAAwBlE,GAEvB,KAbH,GAAiCiL,GAmBpBoB,GAAW,IAAID,GAAY,OAAQ,OACnCE,GAAY,IAAIF,GAAY,QAAS,GAE3C,SAASG,GAAaC,GAG1B,IAAD,EACA,YAAmBA,EAAMhK,OAAN,OAAY,0BAAZ,qBAAnB,aAAmB,EACfiK,OADI/M,EAAR,EAAQA,IAAKgN,EAAb,EAAaA,EAKb,MAAO,CACLhN,IAAAA,EACAG,MAAO6M,EAAI1I,OAAO0I,GAAK,EAE1B,CAeA,EAiCEC,OAAOC,SA/BH,IAAMC,GAAb,6CACmB/M,IAAM,IAAIgN,GAD7B,sCAGE,SAAOpN,GACL,IAAMyB,EAASzB,EAATyB,MACN0J,EAAAA,EAAAA,KAAQxG,KAAKvE,IAAIiN,IAAI5L,GAAf,2BAA0CA,EAA1C,MACNkD,KAAKvE,IAAIkN,IAAI7L,EAAMzB,EACpB,GAPH,qBASE,SAAQyB,EAAc8L,GACpB,GAAI5I,KAAK0I,IAAI5L,GACX,OAAOkD,KAAK6I,IAAI/L,GAEhB,IAAMzB,EAAM,IAAIuL,EAAI9J,EAAM8L,GAE1B,OADA5I,KAAK8I,OAAOzN,GACLA,CAEV,GAjBH,iBAmBE,SAAIA,GACF,OAAO2E,KAAKvE,IAAIiN,IAAIrN,EACrB,GArBH,iBAuBE,SAAIA,GACF,OAAO2E,KAAKvE,IAAIoN,IAAIxN,EACrB,GAzBH,qBA2BE,WACE,OAAO2E,KAAKvE,IAAIsN,QACjB,GA7BH,aA+BE,WACE,OAAO/I,KAAKvE,IAAI6M,OAAOC,WACxB,KAjCH,KAoCI/E,GAAK,EACInB,GAAb,WAkBE,WACEhG,EACAG,EACOM,GAGN,IAAD,OAFAkM,EAEA,uDAFyD,GACzD9G,EACA,uDADoB,IACpB,oBAHOpF,KAAAA,EAGP,KAvBO0G,GAAKA,KAuBZ,KAtBFnH,IAAM,IAAImM,GAsBR,KArBFhM,KAAO,IAAIgM,GAqBT,KApBF1M,KAAO,IAAI0M,GAoBT,KAnBF3G,MAAQ,IAAIoH,IAmBV,KAlBFC,iBAkBE,kBACkB7M,GADlB,IACA,2BAAuB,CAAC,IAAb8M,EAAY,QACrB,OACmC7L,IAAhC6L,EAAwB9N,IACpB8N,EACDjB,GAAaiB,GAHX9N,EAAR,EAAQA,IAAR,IAAaG,MAAAA,OAAb,MAAqB,EAArB,EAIAwE,KAAK3D,IAAIyM,OAAO,IAAIlC,EAAIvL,EAAKG,GAC9B,CAPD,+CASkBgB,GATlB,IASA,2BAAwB,CAAC,IAAd4M,EAAa,QACtB,OACmC9L,IAAhC8L,EAAwB/N,IACpB+N,EACDlB,GAAakB,GAHX/N,EAAR,EAAQA,IAAR,IAAaG,MAAAA,OAAb,MAAqB,EAArB,EAIAwE,KAAKxD,KAAKsM,OAAO,IAAIlC,EAAIvL,EAAKG,GAC/B,CAfD,+CAiBuBwN,GAjBvB,IAiBA,2BAAkC,CAAC,IAAxBtM,EAAuB,QAChC,OACwCY,IAArCZ,EAA6BrB,IACzBqB,EACDwL,GAAaxL,GAHXrB,EAAR,EAAQA,IAAR,IAAaG,MAAAA,OAAb,MAAqB,EAArB,EAIAwE,KAAKlE,KAAKgN,OAAO,IAAIlC,EAAIvL,EAAKG,GAC/B,CAvBD,+BAyBAwE,KAAKkJ,YAAc,IAAID,IAAI/G,GAE3B4D,EAAM+C,MAAMzC,EAAEiD,WAAU,kBAAM,EAAKC,MAAX,GACzB,CApDH,oCAQE,WACE,GAAItJ,KAAKkJ,YAAYK,KAAO,EAC1B,OAAO,EAFG,gBAIOvJ,KAAK6B,OAJZ,IAIZ,2BAA+B,CAC7B,GAD6B,QACpBK,QAAS,OAAO,CAC1B,CANW,+BAOZ,OAAO,CACR,GAhBH,mBAsDE,WAAS,IAAD,YACiBlC,KAAK3D,KADtB,IACN,2BAAiC,CAAC,IAAD,+BAC3B2K,WAAa,CAClB,CAHK,+BAINhH,KAAKsJ,MACN,GA3DH,gBA6DE,WAAqB,IAAlBjO,EAAiB,uDAAX,KAEP,OADAmL,EAAAA,EAAAA,IAAOxG,KAAK3D,IAAIqM,IAAIrN,GAAd,iBAA8BA,IAC7B2E,KAAK3D,IAAIwM,IAAIxN,EACrB,GAhEH,iBAkEE,WAAuB,IAAnBA,EAAkB,uDAAZ,MAER,OADAmL,EAAAA,EAAAA,IAAOxG,KAAKxD,KAAKkM,IAAIrN,IACd2E,KAAKxD,KAAKqM,IAAIxN,EACtB,GArEH,iBAuEE,SAAIyB,GAEF,OADA0J,EAAAA,EAAAA,IAAOxG,KAAKlE,KAAK4M,IAAI5L,IACdkD,KAAKlE,KAAK+M,IAAI/L,EACtB,GA1EH,iBA4EE,SAAIA,EAAc0M,GAChB,OAAIxJ,KAAK3D,IAAIqM,IAAI5L,GACRkD,KAAK3D,IAAIwM,IAAI/L,GAElBkD,KAAKxD,KAAKkM,IAAI5L,GACTkD,KAAKxD,KAAKqM,IAAI/L,GAEnBkD,KAAKlE,KAAK4M,IAAI5L,GACTkD,KAAKlE,KAAK+M,IAAI/L,GAEhBkD,KAAKyJ,WAAW3M,EAAM0M,EAC9B,GAvFH,wBAyFE,SAAmB1M,GAA4C,IAA9B0M,EAA6B,uDAApB,EACxC,GAAIE,GAAcC,SAAS7M,GAAO,CAAC,IAAD,YACbkD,KAAK6B,OADQ,IAChC,2BAA+B,CAAC,IAArB+H,EAAoB,QACvBvO,EAAMuO,EAAKf,IAAI/L,EAAM0M,GAC3B,GAAInO,EACF,OAAOA,CAEV,CAN+B,+BAOjC,CAEF,GAnGH,sBAqGE,SAASA,GACP,OAAO2E,KAAKxD,KAAKkM,IAAIrN,EACtB,GAvGH,kBAyGE,SAAKuO,EAAYC,GACf7J,KAAK6B,MAAMiI,IAAIF,GAD2B,gBAEfC,GAFe,IAE1C,2BAAwC,CAAC,IAAD,UAA3BE,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,KACXJ,EAAKK,SAASF,EAAGjN,MACnBkD,KAAKkK,WAAWN,EAAMG,EAAIC,GAE1BhK,KAAKmK,UAAUP,EAAMG,EAAIC,EAE5B,CARyC,+BAS3C,GAlHH,oBAoHE,WACE,OAAO,OAAIhK,KAAK6B,OACbpG,KAAI,SAACmO,GAAD,OAAUA,EAAKQ,QAAf,IACJC,QAAO,SAAClN,GAAD,YAAaG,IAANH,CAAP,GACX,GAxHH,qBA0HE,SAAgB6M,EAAcpB,GAC5B,MAA2B,SAAvBoB,EAAKM,eAAqC,MAATN,EAC5BhC,GAEkB,UAAvBgC,EAAKM,eAAsC,MAATN,EAC7B/B,GAELjI,KAAK3D,IAAIqM,IAAIsB,GACRhK,KAAK3D,IAAIwM,IAAImB,GAElBhK,KAAKxD,KAAKkM,IAAIsB,GACThK,KAAKxD,KAAKqM,IAAImB,GAEhBhK,KAAKlE,KAAKyO,QAAQP,EAAMpB,EAChC,GAxIH,wBA0IE,SAAmBgB,EAAYG,EAAaC,GAAgB,IAAD,MACrDQ,GAAUC,EAAAA,EAAAA,IACZb,EAAKpN,KAAKqM,IAAIkB,EAAGjN,OACjB,sDAAoCiN,EAAGjN,KAAvC,IAEF,UAAAiN,EAAGvO,aAAH,QAAAuO,EAAGvO,MAAUgP,EAAQhP,OAErB,IAAIkP,EAAU1K,KAAK2K,QAAQX,EAAKlN,KAAlB,UAAwBkN,EAAKxO,aAA7B,QAAsCuO,EAAGvO,OACjDoP,EAAa5K,KAAKlE,KAAK4M,IAAIgC,EAAQ5N,MAIzC,GAFA,UAAAkN,EAAKxO,aAAL,QAAAwO,EAAKxO,MAAUkP,EAAQlP,OAEnBkP,aAAmB3C,GACrB,MAAM,IAAI8C,MAAJ,+BAIJD,GAAcF,aAAmB9D,GACnC8D,EAAQI,YAAYd,EAAKnJ,MAAQmJ,EAAKxO,QAIpCwO,EAAKnJ,MAAQ,GAAKmJ,EAAKxO,QAAUkP,EAAQlP,SAC3CkP,EAAU,IAAInD,GAASmD,EAASV,EAAKnJ,MAAOmJ,EAAKxO,SAI/CuO,EAAGlJ,MAAQ,GAAKkJ,EAAGvO,QAAUkP,EAAQlP,SACvCkP,EAAU,IAAI5C,GAAU4C,EAASX,EAAGlJ,MAAOkJ,EAAGvO,QAGhDgP,EAAQ/C,QAAQiD,EACjB,GA1KH,uBA4KE,SAAkBd,EAAYG,EAAaC,GAAgB,IAAD,MACpDQ,GAAUC,EAAAA,EAAAA,IACZb,EAAKvN,IAAIwM,IAAIkB,EAAGjN,OAChB,sDAAoCiN,EAAGjN,KAAvC,IAEF,UAAAiN,EAAGvO,aAAH,QAAAuO,EAAGvO,MAAUgP,EAAQhP,OAErB,IAAMkP,EAAU1K,KAAK2K,QAAQX,EAAKlN,KAAlB,UAAwBkN,EAAKxO,aAA7B,QAAsCuO,EAAGvO,OAEzD,UAAAwO,EAAKxO,aAAL,QAAAwO,EAAKxO,MAAUkP,EAAQlP,QAGnBuO,EAAGlJ,MAAQ,GAAKkJ,EAAGvO,QAAUkP,EAAQlP,SACvCgP,EAAU,IAAIjD,GAASiD,EAAST,EAAGlJ,MAAOkJ,EAAGvO,QAI1C,CAAC,OAAQ,SAASmO,SAASe,EAAQ5N,QAClCkN,EAAKnJ,MAAQ,GAAKmJ,EAAKxO,QAAUkP,EAAQlP,SAC3CgP,EAAU,IAAI1C,GAAU0C,EAASR,EAAKnJ,MAAOmJ,EAAKxO,QAGtDkP,EAAQjD,QAAQ+C,EACjB,GAnMH,kBAqME,WAAQ,IAAD,YACcxK,KAAK6B,OADnB,IACL,2BAA+B,SAGxByH,MAEN,CANI,+BAON,GA5MH,kBA8ME,WACEtJ,KAAKsJ,MACN,GAhNH,kBAkNE,WACEtJ,KAAKsJ,MACN,GApNH,oBAsNE,WAAU,IAAD,YACYtJ,KAAK6B,OADjB,IACP,2BAA+B,SACxBkJ,QACN,CAHM,+BAIR,GA1NH,2DA6NE,WAAWC,EAAgBC,GAA3B,0FACqBjL,KAAK6B,OAD1B,4DAEsB,YADT+H,EADb,SAEa9M,KAFb,gCAGY8M,EAAKsB,KAAKF,EAAIC,GAH1B,sMA7NF,gEAsOaE,GAAb,0CACE,aAAe,IAAD,yBACZ,cAAM,GAAI,KACL3O,KAAKsM,OAAOb,IAFL,CAGb,CAJH,kBAAyB5F,IAOzB,2BAOa+I,GAAb,sPAKkBtF,EAAM+C,MAAMzC,EAAEiD,WAAU,YAAe,EAAZtD,QAC3BC,EACZ,EAAKU,OAEL,EAAKC,MAER,MAXH,sCACE,WACE,OAAO,CACR,GAHH,oBAaE,YACE,OAAA3G,KAAA,QAAmBqL,eACnB,qDACD,KAhBH,GAAiChJ,IA0CjC,SAASqF,GAAKlM,GACZ,OAAO8P,KAAKC,IAAI,EAAG/P,GAAS,CAC7B,CAqBM,IAAMkO,GAAgB,CAC3B,WACA,YACA,YACA,KACA,OACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,UCtiBK,IAAM8B,GAAb,0CACE,aAAe,kCACP,CAAC,IAAK,KAAM,CAAC,OACpB,CAHH,mCAKE,WACE,IAEA,EAhBG,SAAaC,EAAYpE,GAC9B,MAAO,CAAO,IAANoE,GAAiB,IAANpE,EAAUZ,EAAOT,EACrC,CAce0F,CAFF1L,KAAK2L,GAAG,KAAKhQ,UACbqE,KAAK2L,GAAG,KAAKhQ,WAChBgH,GAAP,eACA3C,KAAKoJ,MAAMjC,KAAKxE,EACjB,KAVH,GAAyBN,IAaZuJ,GAAb,0CACE,aAAe,kCACP,CAAC,QAAS,SAAU,CAAC,WAC5B,CAHH,mCAKE,WACE,IAEA,EAzBG,SAAeH,EAAWpE,GAC/B,MAAO,CAACoE,EAAIpE,EAAI,MACjB,CAuBewE,CAFF7L,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,YAChBrE,GAAP,eACA3C,KAAKoJ,MAAMpC,WAAarE,CACzB,KAVH,GAA2BN,ICWpB,IAAMyJ,GAAb,0CACE,aAAe,kCACP,CAAC,KAAM,OAAQ,CAAC,IAAK,KAC5B,CAHH,mCAKE,WACE,IAGA,EAzCG,SAAc3C,EAAc4C,GAGjC,MAAO,CAFGA,IAAQ/F,GAAOmD,IAAQ1C,EAAOA,EAAOT,EACrC+F,IAAQtF,GAAQ0C,IAAQ1C,EAAOA,EAAOT,EAEjD,CAqCkBgG,CAHHhM,KAAK2L,GAAG,MAAMhQ,UACdqE,KAAK2L,GAAG,OAAOhQ,WAE3B,eAAO8P,EAAP,KAAUpE,EAAV,KACArH,KAAKoJ,IAAI,KAAKjC,KAAKsE,GACnBzL,KAAKoJ,IAAI,KAAKjC,KAAKE,EACpB,KAZH,GAA0BhF,IAeb4J,GAAb,0CACE,aAAe,kCACP,CAAC,KAAM,UAAW,CAAC,IAAK,IAAK,IAAK,KACzC,CAHH,mCAKE,WACE,IAGA,EAlDG,SACL9C,EACA4C,GAMA,MAAO,CAJW,IAARA,GAAgB5C,IAAQ1C,EAAOA,EAAOT,EAC9B,IAAR+F,GAAgB5C,IAAQ1C,EAAOA,EAAOT,EAC9B,IAAR+F,GAAgB5C,IAAQ1C,EAAOA,EAAOT,EAC9B,IAAR+F,GAAgB5C,IAAQ1C,EAAOA,EAAOT,EAEjD,CAyCwBkG,CAHTlM,KAAK2L,GAAG,MAAMhQ,UACdqE,KAAK2L,GAAG,OAAO3E,YAE3B,eAAOyE,EAAP,KAAUpE,EAAV,KAAavF,EAAb,KAAgBqK,EAAhB,KACAnM,KAAKoJ,IAAI,KAAKjC,KAAKsE,GACnBzL,KAAKoJ,IAAI,KAAKjC,KAAKE,GACnBrH,KAAKoJ,IAAI,KAAKjC,KAAKrF,GACnB9B,KAAKoJ,IAAI,KAAKjC,KAAKgF,EACpB,KAdH,GAA8B9J,IAiBjB+J,GAAb,0CACE,aAAe,kCACP,CAAC,KAAM,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7D,CAHH,mCAKE,WACE,IAGA,EAxDG,SACLjD,EACA4C,GAUA,MAAO,CARW,IAARA,GAAiB5C,IAAQ1C,EAAOA,EAAOT,EAC/B,IAAR+F,GAAiB5C,IAAQ1C,EAAOA,EAAOT,EAC/B,IAAR+F,GAAiB5C,IAAQ1C,EAAOA,EAAOT,EAC/B,IAAR+F,GAAiB5C,IAAQ1C,EAAOA,EAAOT,EAC/B,IAAR+F,GAAiB5C,IAAQ1C,EAAOA,EAAOT,EAC/B,IAAR+F,GAAiB5C,IAAQ1C,EAAOA,EAAOT,EAC/B,IAAR+F,GAAiB5C,IAAQ1C,EAAOA,EAAOT,EAC/B,IAAR+F,GAAiB5C,IAAQ1C,EAAOA,EAAOT,EAElD,CA2CoCqG,CAHrBrM,KAAK2L,GAAG,MAAMhQ,UACdqE,KAAK2L,GAAG,OAAO3E,YAE3B,eAAOyE,EAAP,KAAUpE,EAAV,KAAavF,EAAb,KAAgBqK,EAAhB,KAAmBxN,EAAnB,KAAsB2N,EAAtB,KAAyBC,EAAzB,KAA4BC,EAA5B,KACAxM,KAAKoJ,IAAI,KAAKjC,KAAKsE,GACnBzL,KAAKoJ,IAAI,KAAKjC,KAAKE,GACnBrH,KAAKoJ,IAAI,KAAKjC,KAAKrF,GACnB9B,KAAKoJ,IAAI,KAAKjC,KAAKgF,GACnBnM,KAAKoJ,IAAI,KAAKjC,KAAKxI,GACnBqB,KAAKoJ,IAAI,KAAKjC,KAAKmF,GACnBtM,KAAKoJ,IAAI,KAAKjC,KAAKoF,GACnBvM,KAAKoJ,IAAI,KAAKjC,KAAKqF,EACpB,KAlBH,GAA8BnK,IC5DvB,SAASoK,GAAMhB,EAAWpE,EAAW0E,GAC1C,MAAO,CAACA,IAAQ/F,EAAMyF,EAAIpE,EAC3B,CAEM,SAASqF,GACdjB,EACApE,EACAvF,EACAqK,EACAJ,GAEA,IAAMY,EAAY,EAANZ,EACZ,OAAwB,KAAV,EAANA,GAAuBU,GAAMhB,EAAGpE,EAAGsF,GAAMF,GAAM3K,EAAGqK,EAAGQ,EAC9D,CAmBM,IAAMC,GAAb,0CACE,aAAe,kCACP,CAAC,IAAK,IAAK,OAAQ,CAAC,OAC3B,CAHH,mCAKE,WACE,IAIA,EA9CG,SAAanB,EAAYpE,EAAY0E,GAC1C,MAAO,CAACA,IAAQ/F,EAAMyF,EAAIpE,EAC3B,CA4CiBwF,CAJJ7M,KAAK2L,GAAG,KAAKhQ,UACbqE,KAAK2L,GAAG,KAAKhQ,UACXqE,KAAK2L,GAAG,OAAOhQ,WAEpBgN,GAAP,eACA3I,KAAKoJ,MAAMjC,KAAKwB,EACjB,KAZH,GAAyBtG,IAeZyK,GAAb,0CACE,aAAe,kCACP,CAAC,QAAS,QAAS,OAAQ,CAAC,WACnC,CAHH,mCAKE,WACE,IAGA,EAAcL,GAHJzM,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,WACXhH,KAAK2L,GAAG,OAAOhQ,WACpByN,GAAP,eACApJ,KAAKoJ,MAAMpC,WAAaoC,CACzB,KAXH,GAA2B/G,IAcd0K,GAAb,0CACE,aAAe,kCACP,CAAC,QAAS,QAAS,QAAS,QAAS,UAAW,CAAC,WACxD,CAHH,mCAKE,WACE,IAKA,EAAcL,GALJ1M,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,WACXhH,KAAK2L,GAAG,OAAO3E,YACpBoC,GAAP,eAEApJ,KAAKoJ,MAAMpC,WAAaoC,CACzB,KAdH,GAA+B/G,IAiBlB2K,GAAb,0CACE,aAAe,kCAEX,CACE,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UAEF,CAAC,WAEJ,CAhBH,mCAkBE,WACE,IASA,EA3FG,SACLvB,EACApE,EACAvF,EACAqK,EACAxN,EACA2N,EACAC,EACAC,EACAT,GAEA,IAAMY,EAAY,EAANZ,EACZ,OAAyB,KAAX,EAANA,GACJW,GAAQjB,EAAGpE,EAAGvF,EAAGqK,EAAGQ,GACpBD,GAAQ/N,EAAG2N,EAAGC,EAAGC,EAAGG,EACzB,CA4EiBM,CATJjN,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,WACXhH,KAAK2L,GAAG,OAAO3E,YACpBoC,GAAP,eAEApJ,KAAKoJ,MAAMpC,WAAaoC,CACzB,KA/BH,GAA+B/G,IC7ExB,IAAM6K,GAAb,0CACE,aAAe,kCACP,CAAC,IAAK,KAAM,CAAC,OACpB,CAHH,mCAKE,WACE,IAEA,EAZG,SAAczB,EAAYpE,GAC/B,MAAO,CAAO,IAANoE,GAAiB,IAANpE,EAAUrB,EAAMS,EACpC,CAUiB0G,CAFJnN,KAAK2L,GAAG,KAAKhQ,UACbqE,KAAK2L,GAAG,KAAKhQ,WAChByN,GAAP,eACApJ,KAAKoJ,MAAMjC,KAAKiC,EACjB,KAVH,GAA0B/G,IAab+K,GAAb,0CACE,aAAe,kCACP,CAAC,QAAS,SAAU,CAAC,WAC5B,CAHH,mCAKE,WACE,IAAM3B,EAAIzL,KAAK2L,GAAG,KAAK3E,WACjBK,EAAIrH,KAAK2L,GAAG,KAAK3E,WACvBhH,KAAKoJ,MAAMpC,YAAaqG,EAAAA,EAAAA,IAAO5B,EAAGpE,EACnC,KATH,GAA4BhF,ICVrB,IAAMiL,GAAb,0CACE,aAAe,kCACP,CAAC,MAAO,CAAC,OAChB,CAHH,mCAKE,WACE,IAAM7B,EAAIzL,KAAK2L,GAAG,MAAMhQ,UACxB,EAdK,CAca8P,IAdJzF,EAAMS,EAAOT,GAcpBoD,GAAP,eACApJ,KAAKoJ,MAAMjC,KAAKiC,EACjB,KATH,GAAyB/G,IAYZkL,GAAb,0CACE,aAAe,kCACP,CAAC,UAAW,CAAC,WACpB,CAHH,mCAKE,WACE,MArBK,CAAQ,OAqBKvN,KAAK2L,KAAK3E,YAArBrE,GAAP,eACA3C,KAAKoJ,MAAMpC,WAAarE,CACzB,KARH,GAA2BN,ICpBpB,SAASmL,GAAG/B,EAAYpE,GAC7B,MAAO,CAAO,IAANoE,GAAiB,IAANpE,EAAUZ,EAAOT,EACrC,CAUM,IAAMyH,GAAb,0CACE,aAAe,kCACP,CAAC,IAAK,KAAM,CAAC,OACpB,CAHH,mCAKE,WACE,IAEA,EAAcD,GAFJxN,KAAK2L,GAAG,KAAKhQ,UACbqE,KAAK2L,GAAG,KAAKhQ,WAChByN,GAAP,eACApJ,KAAKoJ,MAAMjC,KAAKiC,EACjB,KAVH,GAAwB/G,IAaXqL,GAAb,0CACE,aAAe,kCACP,CAAC,QAAS,SAAU,CAAC,WAC5B,CAHH,mCAKE,WACE,IAEA,EA7BG,SAAcjC,EAAWpE,GAC9B,MAAO,CAAW,OAAToE,EAAIpE,GACd,CA2BiBsG,CAFJ3N,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,YAChBoC,GAAP,eACApJ,KAAKoJ,MAAMpC,WAAaoC,CACzB,KAVH,GAA0B/G,IAabuL,GAAb,0CACE,aAAe,kCACP,CAAC,SAAU,CAAC,OAAQ,SAC3B,CAHH,mCAKE,WACE,IAAMzE,EAAMnJ,KAAK2L,KAAK3E,WACtB,EApCK,CAAgB,KAAV,IAoCUmC,GApCInD,EAAMS,GAoCxB2C,GAAP,eACApJ,KAAKoJ,MAAMjC,KAAKiC,EACjB,KATH,GAA4B/G,IC9BrB,IAAMwL,GAAb,0CACE,aAAe,kCACP,CAAC,IAAK,KAAM,CAAC,OACpB,CAHH,mCAKE,WACE,IAEA,EAhBG,SAAapC,EAAYpE,GAC9B,MAAO,CAAEoE,IAAMhF,GAAQY,IAAMrB,GAASyF,IAAMzF,GAAOqB,IAAMZ,EAAQA,EAAOT,EACzE,CAciB8H,CAFJ9N,KAAK2L,GAAG,KAAKhQ,UACbqE,KAAK2L,GAAG,KAAKhQ,WAChByN,GAAP,eACApJ,KAAKoJ,MAAMjC,KAAKiC,EACjB,KAVH,GAAyB/G,IAaZ0L,GAAb,0CACE,aAAe,kCACP,CAAC,QAAS,SAAU,CAAC,WAC5B,CAHH,mCAKE,WACE,IAEA,EAzBG,SAAetC,EAAWpE,GAC/B,MAAO,CAAW,OAAToE,EAAIpE,GACd,CAuBiB2G,CAFJhO,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,YAChBoC,GAAP,eACApJ,KAAKoJ,MAAMpC,WAAaoC,CACzB,KAVH,GAA2B/G,ICrBpB,SAAS4L,GAAMxC,EAAWpE,GAC/B,MAAO,CAAEoE,EAAIpE,EAAK,MACnB,CAEM,IAAM6G,GAAb,0CACE,aAAe,kCACP,CAAC,QAAS,SAAU,CAAC,WAAY,QACxC,CAHH,mCAKE,WACE,IAEA,EAAcD,GAFJjO,KAAK2L,GAAG,KAAK3E,WACbhH,KAAK2L,GAAG,KAAK3E,YAChBoC,GAAP,eACApJ,KAAKoJ,MAAMpC,WAAaoC,CACzB,KAVH,GAA2B/G,I,WCHd8L,GAAe,SAAC,GAAD,MAC1BC,EAD0B,EAC1BA,EACAtK,EAF0B,EAE1BA,GACAuK,EAH0B,EAG1BA,EACAjF,EAJ0B,EAI1BA,IACAkF,EAL0B,EAK1BA,KAL0B,OAa1B,4BACE,mCACA,2BACE,8BADF,KACa,yBAAKC,EAAAA,EAAAA,IAAIH,MACpB,+BAFF,KAEc,kCAAKI,GAAAA,GAAAA,GAAY1K,UAAjB,QAAwB,UACpC,8BAHF,KAGa,yBAAKyK,EAAAA,EAAAA,IAAIF,MACpB,8BAJF,KAIa,yBAAKE,EAAAA,EAAAA,IAAInF,MACpB,wBAAKqF,GAAAA,GAAMH,UApBW,ECCfI,GAAb,0CACE,aAAe,kCAEX,CACE,QACA,QACA,KACA,KACA,KACA,KACA,IACA,MAEF,CACE,WAEF,MAEH,CAlBH,mCAoBE,WACE,IAAMC,EAAI3O,KAAK2L,GAAG,KAAK3E,WACjB4H,EAAI5O,KAAK2L,GAAG,KAAK3E,WAOjBlD,GANK9D,KAAK2L,GAAG,MAAM3E,YAAc,IAC5BhH,KAAK2L,GAAG,MAAM3E,YAAc,IAC5BhH,KAAK2L,GAAG,MAAM3E,YAAc,IAC5BhH,KAAK2L,GAAG,MAAM3E,YAAc,IAC7BhH,KAAK2L,GAAG,KAAK3E,YAAc,IAC1BhH,KAAK2L,GAAG,MAAM3E,YAAc,GAEvC,GAAc6H,EAAAA,GAAAA,IAAI/K,EAAI6K,EAAGC,GAAlBxF,GAAP,eACApJ,KAAKoJ,MAAMpC,WAAaoC,CACzB,KAhCH,GAA+B/G,IAmClByM,GAAb,0CACE,aAAe,kCAEX,CACE,QACA,QACA,KACA,KACA,KACA,KACA,IACA,MAEF,CACE,UACA,KACA,MAEF,MAEH,CApBH,qCAsBE,WACE,MAAO,EACL,SAACX,GAAD,CACEC,EAAGpO,KAAK2L,GAAG,KAAK3E,WAChBlD,GAAI9D,KAAK8D,KACTuK,EAAGrO,KAAK2L,GAAG,KAAK3E,WAChBoC,IAAKpJ,KAAKoJ,MAAMpC,WAChBsH,KACGtO,KAAKoJ,IAAI,MAAMzN,YAAc8K,EAC1BgI,GAAAA,GAAAA,KACAzO,KAAKoJ,IAAI,MAAMzN,YAAc8K,EAC7BgI,GAAAA,GAAAA,SACAA,GAAAA,GAAAA,WAIX,GAtCH,kBAwCE,WACE,IAAME,EAAI3O,KAAK2L,GAAG,KAAK3E,WACjB4H,EAAI5O,KAAK2L,GAAG,KAAK3E,WAOjBlD,GANK9D,KAAK2L,GAAG,MAAM3E,YAAc,IAC5BhH,KAAK2L,GAAG,MAAM3E,YAAc,IAC5BhH,KAAK2L,GAAG,MAAM3E,YAAc,IAC5BhH,KAAK2L,GAAG,MAAM3E,YAAc,IAC7BhH,KAAK2L,GAAG,KAAK3E,YAAc,IAC1BhH,KAAK2L,GAAG,MAAM3E,YAAc,GAEvC,GAAqB6H,EAAAA,GAAAA,IAAI/K,EAAI6K,EAAGC,GAAhC,eAAOxF,EAAP,KAAY2F,EAAZ,KACMC,EAAKD,IAAUN,GAAAA,GAAAA,SAAiBhI,EAAOT,EACvCiJ,EAAKF,IAAUN,GAAAA,GAAAA,KAAahI,EAAOT,EACzChG,KAAKoJ,IAAI,OAAOpC,WAAaoC,EAC7BpJ,KAAKoJ,IAAI,MAAMjC,KAAK6H,GACpBhP,KAAKoJ,IAAI,MAAMjC,KAAK8H,EACrB,GAxDH,gBA0DE,WACE,IAMMnL,GANK9D,KAAK2L,GAAG,MAAM3E,YAAc,IAC5BhH,KAAK2L,GAAG,MAAM3E,YAAc,IAC5BhH,KAAK2L,GAAG,MAAM3E,YAAc,IAC5BhH,KAAK2L,GAAG,MAAM3E,YAAc,IAC7BhH,KAAK2L,GAAG,KAAK3E,YAAc,IAC1BhH,KAAK2L,GAAG,MAAM3E,YAAc,GAEvC,OAAOlD,CACR,KAnEH,GAAyBzB,ICrClB,SAAS6M,GAAUzD,EAAYpE,GAIpC,MAAO,CAHY,IAANoE,GAAiB,IAANpE,GAAmB,IAANoE,GAAiB,IAANpE,EAAWZ,EAAOT,EAChD,IAANyF,GAAiB,IAANpE,EAAUZ,EAAOT,EAGzC,CAEM,IAAMmJ,GAAb,0CACE,aAAe,kCACP,CAAC,IAAK,KAAM,CAAC,MAAO,SAC3B,CAHH,mCAKE,WACE,IAEA,EAAqBD,GAFXlP,KAAK2L,GAAG,KAAKhQ,UACbqE,KAAK2L,GAAG,KAAKhQ,WACvB,eAAOyT,EAAP,KAAYC,EAAZ,KACArP,KAAKoJ,IAAI,OAAOjC,KAAKiI,GACrBpP,KAAKoJ,IAAI,SAASjC,KAAKkI,EACxB,KAXH,GAA+BhN,ICOxB,IAAMiN,GAAb,0CACE,aAAe,kCACP,CAAC,IAAK,IAAK,KAAM,CAAC,MAAO,SAChC,CAHH,mCAKE,WACE,IAGA,EArBG,SACL7D,EACApE,EACAvF,GAEA,MAAgBoN,GAAUzD,EAAGpE,GAA7B,eAAOkI,EAAP,KAAUC,EAAV,KACA,EAAkBN,GAAUK,EAAGzN,GAA/B,eAAOsN,EAAP,KACA,EAAgB5B,GAAGgC,EADnB,MAGA,MAAO,CAACJ,GAFR,eAGD,CAWwBK,CAHXzP,KAAK2L,GAAG,KAAKhQ,UACbqE,KAAK2L,GAAG,KAAKhQ,UACbqE,KAAK2L,GAAG,KAAKhQ,WACvB,eAAOyT,EAAP,KAAYC,EAAZ,KACArP,KAAKoJ,IAAI,OAAOjC,KAAKiI,GACrBpP,KAAKoJ,IAAI,SAASjC,KAAKkI,EACxB,KAZH,GAA+BhN,ICTxB,IAAMqN,GAAb,0CACE,aAAe,kCACP,CAAC,UAAW,CAAC,WAAY,QAChC,CAHH,mCAKE,WACE,IAAMjE,EAAIzL,KAAK2L,KAAK3E,WACpB,EAVKiH,GAUexC,EAVN,GAUPrC,GAAP,eACApJ,KAAKoJ,MAAMpC,WAAaoC,CACzB,KATH,GAA2B/G,ICLdsN,GAAoB,SAAC,GAAD,IAC/B7S,EAD+B,EAC/BA,KACAxB,EAF+B,EAE/BA,KAF+B,OAO/B,2BACGwB,EADH,MACWuG,EAAAA,EAAAA,IAAI/H,KARgB,ECCpBsU,GAAb,0CAGE,WAAY9S,GAAgB,IAAD,yBACzB,cAAM,CAAC,KAAM,QAAS,CAAC,OAAQA,IAHjCmK,IAAejB,EAEY,CAE1B,CALH,mCAOE,WACMhG,KAAK2L,GAAG,QAAQhQ,YAAc8K,IAChCzG,KAAKiH,IAAMjH,KAAK2L,KAAKhQ,UAExB,GAXH,kBAaE,WAAiB,IAAD,EACdqE,KAAKoJ,MAAMjC,KAAX,UAAgBnH,KAAKiH,WAArB,QAA4B,EAC7B,KAfH,GAAyBmE,IAkBZyE,GAAb,0CAGE,WAAY/S,GAAgB,IAAD,yBACzB,cAAM,CAAC,SAAU,QAAS,CAAC,WAAYA,IAHzCxB,KAAe,EAEY,CAE1B,CALH,mCAOE,WACM0E,KAAK2L,GAAG,QAAQhQ,YAAc8K,IAChCzG,KAAK1E,KAA8B,MAAvB0E,KAAK2L,KAAK3E,WAEzB,GAXH,kBAaE,WACEhH,KAAKoJ,MAAMpC,WAAyB,MAAZhH,KAAK1E,IAC9B,GAfH,iBAiBE,SAAawB,EAAc0M,GACzB,OAAO1M,IAASkD,KAAKlD,KAAOkD,KAAKoJ,OAA1B,kDAA4CtM,EAAM0M,EAC1D,KAnBH,GAA8B4B,IAsBjB0E,GAAb,0IACE,WAAmB,IAAD,EAChB,MAAO,EACL,SAACH,GAAD,CACE7S,KAAI,UAAEkD,KAAKlD,YAAP,uBAAuBkD,KAAKwD,IAChClI,KAAM0E,KAAK1E,OAGhB,KARH,GAA+BuU,IAWlBE,GAAb,0CAGE,WAAYjT,GAAgB,IAAD,yBACzB,cAAM,CAAC,SAAU,OAAQ,MAAO,SAAU,CAAC,WAAYA,IAHzDxB,KAAe,EAEY,CAE1B,CALH,qCAOE,WACE,MAAO,EAAC,SAACqU,GAAD,CAAmB7S,KAAK,KAAKxB,KAAM0E,KAAK1E,OACjD,GATH,kBAWE,WACM0E,KAAK2L,GAAG,SAAShQ,YAAc8K,EACjCzG,KAAK1E,KAAO,EACH0E,KAAK2L,GAAG,QAAQhQ,YAAc8K,EACvCzG,KAAK1E,KAA8B,MAAvB0E,KAAK2L,KAAK3E,WACbhH,KAAK2L,GAAG,OAAOhQ,YAAc8K,IACtCzG,KAAK1E,MAAQ,EAEhB,GAnBH,kBAqBE,WACE0E,KAAKoJ,MAAMpC,WAAyB,MAAZhH,KAAK1E,IAC9B,GAvBH,iBAyBE,SAAawB,EAAc0M,GACzB,OAAO1M,IAASkD,KAAKlD,KAAOkD,KAAKoJ,OAA1B,kDAA4CtM,EAAM0M,EAC1D,KA3BH,GAAwB4B,ICpDX4E,GAAb,0CACE,WAAYlT,GAAgB,kCACpB,CAAC,MAAO,CAAC,OAAQA,EAAM,CAAC,KAC/B,CAHH,mCAKE,WAEE,IAAImT,EAAIjQ,KAAK2L,KAAKhQ,UAClBqE,KAAK3E,IAAI,KAAK8L,KAAK8I,EACpB,GATH,kBAWE,WAEE,IAAIA,EAAIjQ,KAAK3E,IAAI,KAAKM,UACtBqE,KAAKoJ,MAAMjC,KAAK8I,EACjB,KAfH,GAAyB7E,I,sBCgBZ8E,GAAU,iuBACVpS,GAAUJ,EAAAA,EAAAA,QAAYwS,GAAY1S,GAClC2S,GAAerS,GAAQ2C,gBAAgB9C,GAwBpD,SAASyS,GACPC,GAEA,YAAgD/S,IAAxC+S,EAA8BC,KACvC,CAeDH,GAAalR,aAAkB,MAAO,CACpCuD,KADoC,SAC/B+N,GACH,MAAO,CACLC,aAAcD,EACXrQ,MAAM,GACNsB,SAAS/F,KAAI,qBAAGgV,WAAH,IAEnB,IAGHN,GAAalR,aAA6B,cAAe,CACvDyR,aADuD,SAC1CC,EAAKC,GAChB,IACE,MAAO,CACLC,KAAM,IACNhR,MAAO+Q,EAAI/Q,MAED,CAAZ,MAAOlB,GAAK,CACd,IACE,MAAO,CACLkS,KAAM,IACNP,MAAOM,EAAI9T,KAED,CAAZ,MAAO6B,GAAK,CAEd,MAAM,IAAIkM,MAAJ,qDACP,EACDiG,aAjBuD,SAiB1CC,EAASC,EAAKC,GAAwB,IAAD,QAC1CC,EAAM,UAAGH,EAAQ7Q,MAAM,UAAjB,iBAAG,EAAkBA,MAAM,UAA3B,aAAG,EAA4Bb,aACrCyE,EAAKkN,EAAI3R,aACT8R,EAAG,UAAGF,EAAK/Q,MAAM,UAAd,iBAAG,EAAeA,MAAM,UAAxB,aAAG,EAAyBb,aAC/B+R,EACJL,EAAQ1R,aAAasK,SAAS,MAAQqH,EAAI3R,aAAasK,SAAS,KAC5D0G,EAAwB,CAC5BQ,KAAM,IACN/M,GAAI0K,GAAAA,GAAAA,IAAa1K,GACjBsN,IAAAA,GAIF,OAFID,IAAKd,EAAKgB,KAAOC,GAAAA,GAAAA,IAASH,IAC1BD,IAAQb,EAAKkB,MAAQC,GAAAA,GAAAA,IAAWN,IAC7Bb,CACR,EACDoB,MAhCuD,SAgCjD5M,EAhCiD,EAgCnCnD,GAClB,MAAO,CACLmP,KAAM,IACNP,MAHyC,EAAjCxT,KAKX,IA6EI,IAAM4U,GAAM,CACjB5T,QAASoS,GACTnS,UAAWoS,GACXzN,OAAQ5E,GACRQ,MAAOT,EAAgBC,GAASqS,IAChCwB,OAAQ,CACNC,UAhFG,SAAmBrB,GACxB,IADkC,EAC5BsB,EAAU,IAAIpJ,IAAoB,CACtC,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,MAAO,IACR,CAAC,MAAO,IACR,CAAC,MAAO,IACR,CAAC,MAAO,IACR,CAAC,MAAO,IACR,CAAC,MAAO,IACR,CAAC,KAAM,GACP,CAAC,MAAO,GACR,CAAC,MAAO,GACR,CAAC,OAAQ,GACT,CAAC,OAAQ,GACT,CAAC,SAAUqJ,IACX,CAAC,MAAOC,MASNC,EAAmC,GACnCC,EAAO,EAlCuB,UAmCR1B,EAAIC,cAnCI,IAmClC,2BAA4C,CAAC,IAAlCC,EAAiC,QAC1C,GAAyB,MAArBA,EAAYI,KAShBoB,GAAQ,EAEiB,MAArBxB,EAAYI,MACVT,GAAoBK,IACtBuB,EAASjL,KAAK0J,OAblB,CACE,GAAIoB,EAAQnJ,IAAI+H,EAAYH,OAC1B,MAAM,IAAIzF,MAAJ,8BAAiC4F,EAAYH,QAEnDuB,EAAQlJ,IAAI8H,EAAYH,MAAO2B,EAGlC,CASF,CApDiC,+BAsDlCD,EAAS9K,SA3BT,SAA+BuJ,GAC7B,IAAM5Q,GAAQ4K,EAAAA,EAAAA,IAAaoH,EAAQhJ,IAAI4H,EAAYH,QAClDG,EAAgD5Q,MAAQA,SACjD4Q,EAAgDH,KACzD,GAwBF,EA0BG4B,KAxBG,SAAc3B,GACnB,OAAOA,EAAIC,aACR/U,KAAI,SAAC4U,GACJ,GAAkB,MAAdA,EAAKQ,KAAc,CACrB,GAAIT,GAAoBC,GACtB,MAAM,IAAIxF,MAAJ,uCAER,OAAOwF,EAAKxQ,KACb,CACD,GAAkB,MAAdwQ,EAAKQ,KACP,OAAOsB,EAAAA,GAAAA,GAAM9B,EAAKe,IAAKf,EAAKvM,GAAIuM,EAAKkB,MAAOlB,EAAKgB,KAGpD,IACAhH,QAAO,SAACvG,GAAD,YAA6BxG,IAAPwG,CAAtB,GACX,ICpLM,SAAeoH,GAAtB,mDAAO,OAAP,2BAAO,WAAoBF,EAAgBC,GAApC,0EACDA,EAAKmH,SAAS,SADb,yCAEIC,GAASrH,EAAIC,IAFjB,WAKDA,EAAKmH,SAAS,QALb,yCAMIE,GAAQtH,EAAIC,IANhB,aASC,IAAIJ,MAAJ,yDAA4DI,IAT7D,oEAYA,SAAeqH,GAAtB,mDAAO,OAAP,2BAAO,WAAuBtH,EAAgBC,GAAvC,gGACgBD,EAAGuH,SAAStH,GAD5B,UACC/M,EADD,OAECG,EAASqT,GAAIpT,MAAMJ,KACrBsU,EAAAA,EAAAA,IAAMnU,GAHL,sBAIGG,EAAAA,EAAAA,IAAIH,GAJP,cAOCkS,GAAMhS,EAAAA,EAAAA,IAAGF,GACfqT,GAAIC,OAAOC,UAAUrB,GARhB,kBASEmB,GAAIC,OAAOO,KAAK3B,IATlB,oEAYA,SAAe8B,GAAtB,mDAAO,OAAP,2BAAO,WACLrH,EACAC,GAFK,sFAISD,EAAGuH,SAAStH,GAJrB,uCAKFwH,MAAM,MACNpI,QAAO,SAAC4H,GAAD,MAA0B,KAAhBA,EAAKS,MAAf,IACPjX,IAAI+D,EAAAA,KAPF,oECvBA,IAAMmT,GAAU,CAAC,MAAO,MAAO,MAAO,OAGhCb,GAAS,MAGTC,GAAW,MAAjB,qBAEMa,GAAb,WAOE,WAAYC,IAA+B,0EAEvC,OAAA7S,KAAA,QAAe,IAAI8S,WAAWD,EAIjC,CAbH,iCAGE,WACE,OAAO,OAAA7S,KAAA,QAAa1D,MACrB,GALH,iBAeE,SAAI0E,GAAwB,IAAD,EACzB,OAAIA,EAAQ,GAAKA,GAAShB,KAAKuJ,KACtB,MAET,WAAO,OAAAvJ,KAAA,QAAagB,UAApB,QAA8B,CAC/B,GApBH,iBAsBE,SAAIA,EAAenB,GACbmB,GAAS,GAAKA,EAAQhB,KAAKuJ,QAC7B,OAAAvJ,KAAA,QAAagB,GAAiB,MAARnB,EAEzB,GA1BH,oBA4BE,SAAOkT,EAAclT,EAAesE,GAClC,IAAI6O,EACJ,OAAQ7O,GACN,IAAK,MACH6O,GAAUlP,EAAAA,GAAAA,IAAGjE,GACb,MACF,IAAK,MACHmT,GAAUxT,EAAAA,EAAAA,IAAKK,GACf,MACF,IAAK,MACHmT,GAAUtT,EAAAA,EAAAA,IAAMG,GAChB,MAEF,QACEmT,GAAU5T,EAAAA,EAAAA,IAAMS,GAIhBoT,SAASD,IAAYA,GAAW,OAClChT,KAAK2I,IAAIoK,EAAMC,EAElB,GAjDH,2DAmDE,WAAWhI,EAAgBC,GAA3B,0GAEWC,GAAKF,EAAIC,GAFpB,cAE2BxP,KAAI,SAAC0B,EAAGzB,GAAJ,OAAU,EAAKiN,IAAIjN,EAAGyB,EAAtB,IAF/B,qDAKU,IAAI0N,MAAJ,qCAAwCI,IALlD,wDAnDF,4EA4DE,WAA6C,IAAvCpK,EAAsC,uDAA9B,EAAGC,EAA2B,uDAArBd,KAAKuJ,KAC1B,OAAO,QAAI,OAAAvJ,KAAA,QAAakT,MAAMrS,EAAOC,GACtC,GA9DH,iCAgEE,WACEqS,GADF,4FAEEtS,EAFF,+BAEU,EACRC,EAHF,+BAGQd,KAAKuJ,MAEX/C,EAAAA,EAAAA,IAAO3F,EAAQC,GACNpF,EAAImF,EANf,YAMsBnF,EAAIoF,GAN1B,iBAOI,OAPJ,SAOUqS,EAAGzX,EAAGsE,KAAK6I,IAAInN,IAPzB,OAM+BA,IAN/B,kEAhEF,K,sBCXO,SAAS0X,GACdC,EACAC,GAEA,OAAOC,EAAAA,EAAAA,aACL,SACE1M,EACA2M,GAFF,OAOEC,EAAAA,GAAAA,IAAQ5M,GAAO,SAAC6M,GACdL,EAASG,EAAQG,QAAQD,EAAOF,EAAQI,QACzC,GATH,GAUAN,EAEH,CAEM,SAASO,GAAuBC,GACrC,OAA0BC,EAAAA,EAAAA,UAAYD,GAAtC,eAAOjN,EAAP,KAAcmN,EAAd,KAIA,OAHAC,EAAAA,EAAAA,YAAU,WACRD,EAASF,EACV,GAAE,CAACA,IACG,CAACjN,EAAOmN,EAChB,CCxBD,IAAME,GAAe,EAAfA,GAAwB,EAwE9B,GAtE0B,SAACjY,GAIpB,IAAD,EACJ,GAAwB8X,EAAAA,EAAAA,UAAQ,UAAC9X,EAAMkY,YAAP,QAAeD,IAA/C,eAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BP,GAAoB5X,EAAM4D,OAApD,eAAOA,EAAP,KAAcwU,EAAd,KAaMC,EAAO,kBACX,iBACEpX,OAAK,QAAIqX,OAAQ,SAAW/Y,EAAAA,GAAAA,GAAM,OAAQ,WAC1C4B,QAAS,WACPgX,EAAQF,GACT,EAJH,SAMGrU,GAPQ,EAWP2U,GAAWC,EAAAA,EAAAA,cACf,SAACC,GAAD,cAAkCA,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAKC,QAAvC,GACA,IAEIC,GAAWH,EAAAA,EAAAA,cACf,SAACI,GAA4C,IAAD,IAC1CT,EAAQF,IACRG,EAAQ,UAACQ,EAAOhV,aAAR,QAAiB,IACzB5D,EAAM6Y,SAAN,UAAeD,EAAOhV,aAAtB,QAA+B,GAChC,GACD,CAAC5D,EAAOmY,EAASC,IAEbU,EAAO,WACX,IAAMA,GACJ,iBAAM7X,MAAO,CAAE8X,QAAS,QAASC,SAAU,YAA3C,UACE,kBACEP,IAAKF,EACLtX,MAAO,CACLgY,OAAQ,KACRD,SAAU,WACV/T,KAAM,IACNiU,UAAW,aAEbC,OAAQ,gBAAGP,EAAH,EAAGA,OAAH,OAAgBD,EAASC,EAAzB,EACRQ,WAAY,YAAsB,IAAnBC,EAAkB,EAAlBA,IAAKT,EAAa,EAAbA,OACN,UAARS,GACFV,EAASC,EAEZ,EACDhE,KAAK,OACL0E,aAAc1V,MAIpB,OAAOkV,CACR,EAED,OA3De,WACb,OAAQZ,GACN,KAAKD,GACH,OAAOa,IACT,KAAKb,GACH,OAAOI,IACT,QACE,OAAO,oBAEZ,CAkDMlK,EACR,EC4CM,SAASoL,GACdC,EACA5O,EACAgC,GAEA,IACE6M,EAIE7O,EAJF6O,YACAC,EAGE9O,EAHF8O,gBACAC,EAEE/O,EAFF+O,cAHF,EAKI/O,EADFgP,SAAYC,EAJd,EAIcA,WAAYC,EAJ1B,EAI0BA,SAAUC,EAJpC,EAIoCA,SAE9BhV,EACJ+U,EAAWzK,KAAK2K,OAAOR,EAAYE,GAAmBG,GAClDI,EAjCD,SACLH,EACAC,EACAxM,EACA2M,EACAtN,GAEA,IAAMhI,EAAQyK,KAAK8K,IAAI,EAAGL,EAAUvM,GAE9B0M,EAAOrN,EAAIhI,EADLyK,KAAK+K,IAAIL,EAAUxM,EAAS2M,EAAQ,GAClBtV,GAC9B,OAAO,OAAIqV,EACZ,CAsBcI,CAAQP,EAAUC,EAAUhV,EAAO4U,EAAe/M,GACzD0N,EAAmBjL,KAAK8K,KAAKpV,EAAQ+U,GAAYD,EAAY,GAMnE,MAAO,CAAEL,UAAAA,EAAWc,iBAAAA,EAAkBC,oBALVlL,KAAK8K,IAC/BV,GAAea,EAAmBL,EAAK5Z,OAASwZ,GAChD,GAGyDI,KAAAA,EAC5D,CAcD,IA+DA,GAxD6B,SAC3Bja,GACI,IAAD,EACGwa,GAAcC,EAAAA,EAAAA,QAA8B,MAElD,GAA0CC,EAAAA,EAAAA,UAAQ,WAAO,IAAD,EAChDd,EAvHH,SACLA,GAEA,MAOIA,EANFE,SAAAA,OADF,MACa,EADb,IAOIF,EALFG,SAAAA,OAFF,MAEarW,OAAOiX,iBAFpB,IAOIf,EAJFgB,WAAAA,OAHF,MAGe,EAHf,IAOIhB,EAHFC,WAAAA,OAJF,MAIe,GAJf,IAOID,EAFF9Q,MAAAA,OALF,MAKUiR,EAAWD,EAAW,EALhC,IAOIF,EADFiB,UAGF,MAAO,CAAEf,SAAAA,EAAUC,SAAAA,EAAUa,WAAAA,EAAYf,WAAAA,EAAY/Q,MAAAA,EAAO+R,eAT5D,MAMc/R,EANd,EAUD,CA0GoBgS,CAAyB,UAAC9a,EAAM4Z,gBAAP,QAAmB,CAAC,GACxDmB,EAzGH,SACLnB,EACAoB,EACAvC,GAGA,IAAQqB,EACNF,EADME,SAAUC,EAChBH,EADgBG,SAAUa,EAC1BhB,EAD0BgB,WAAYf,EACtCD,EADsCC,WAAY/Q,EAClD8Q,EADkD9Q,MAAO+R,EACzDjB,EADyDiB,UAErDlB,EAAgB7Q,EAAQ,EAAI+R,EAG5BI,EAAiBnS,EAAQ+Q,EACzBJ,GAAeM,EAAWD,EAAW,GAAKD,EAC1CH,EAAkBmB,EAAYhB,EAE9BS,EANajL,KAAK8K,IAAI,EAAGS,EAAaC,EAAYf,GAMlBD,EAGhCjP,EAA+B,CACnC4O,UAAW,EACXI,SAAAA,EACAqB,eAAAA,EACAxB,YAAAA,EACAC,gBAAAA,EACAC,cAAAA,EACAW,iBAAAA,EACAC,oBAV0Bd,GAAea,GAFtBW,EAAiB,EAAIvB,IAaxCO,KAAM,IAGR,OAAO,kBACFrP,GACA2O,GAASe,EAAmBZ,EAAiB9O,EAAOoQ,GAE1D,CAuEsB3D,CAAgBuC,EAAU5Z,EAAM4M,KAC7CsO,EAdR,SAAetO,GAAf,OACA,SAAChC,EAA8B4O,GAA/B,eAAC,UACI5O,GACA2O,GAASC,EAAW5O,EAAOgC,GAFhC,CADA,CAckBuO,CAAcnb,EAAM4M,KACpC,MAAO,CAAEgN,SAAAA,EAAUsB,QAAAA,EAASH,WAAAA,EAC7B,GAAE,CAAC/a,EAAM4Z,SAAU5Z,EAAM4M,MALlBgN,EAAR,EAAQA,SAAUmB,EAAlB,EAAkBA,WAAYG,EAA9B,EAA8BA,QAO9B,GAAgC5D,EAAAA,EAAAA,YAAW4D,EAASH,GAApD,eAAOnQ,EAAP,KAAcwQ,EAAd,MAEApD,EAAAA,EAAAA,YAAU,WACoB,OAAxBwC,EAAYzD,SACdqE,EAAeZ,EAAYzD,QAAQyC,UAEtC,GAAE,CAACI,EAAU5Z,EAAMqb,MAEpB,IAAMC,GAAgB9C,EAAAA,EAAAA,cACpB,SAAC+C,GACKA,IACFA,EAAI/B,UAAYgB,EAAYzD,QACxByD,EAAYzD,QAAQyC,UACpBI,EAASgB,WAAahB,EAASC,YAErCW,EAAYzD,QAAUwE,CACvB,GACD,CAACf,EAAaZ,EAASgB,WAAYhB,EAASC,aAGxC2B,EAAO5Q,EAAMqP,KAAKza,KAAI,SAAC0Q,GAAD,OAC1B,gBAA2BjP,MAAO,CAAEwa,OAAO,GAAD,OAAK7B,EAASC,WAAd,OAA1C,SACG7Z,EAAMqb,IAAInL,IADHlQ,EAAM0b,OAAOxL,GADG,IAM5B,OACE,iBACEuI,IAAK6C,EACLra,MAAO,CACLwa,OAAO,GAAD,OAAK7Q,EAAMqQ,eAAX,MACNU,UAAW,SACXC,eAAgB,QAElBlb,UAAS,UAAEV,EAAMU,iBAAR,QAAqB,GAC9Bmb,SAAU,SAACnZ,GAAD,OAAO0Y,EAAgB1Y,EAAEkW,OAA0BY,UAAnD,EARZ,WAUE,gBAAKvY,MAAO,CAAEwa,OAAO,GAAD,OAAK7Q,EAAM0P,iBAAX,SACnBkB,GACD,gBAAKva,MAAO,CAAEwa,OAAO,GAAD,OAAK7Q,EAAM2P,oBAAX,WAGzB,E,sBCpMYuB,GAAc,SAAC,GAcrB,IAbLlF,EAaI,EAbJA,OAaI,IAZJ1B,IAAAA,OAYI,MAZE,CAAEtR,MAAO,GAYX,MAXJmY,UAAAA,OAWI,OAXS,EAWT,MAVJC,SAAAA,OAUI,aATJ9T,OAAAA,OASI,MATKd,EAAAA,GASL,MARJyR,SAAAA,OAQI,MARO,WAAQ,EAQf,EACEe,GAAWc,EAAAA,EAAAA,UACf,iBAAO,CACL5R,MAAO,GACPiR,SAAUnD,EAAOtJ,KACjBuM,WArBc,GAsBde,WAAY1F,EAAItR,MAJlB,GAMA,CAACgT,EAAOtJ,KAAM4H,IAEVtI,GAAM4L,EAAAA,EAAAA,cACV,SAACjL,EAAgBzE,GAAjB,OACE8N,EACGtX,MAAMiO,EAAQA,EAASzE,GACvBtJ,KAAI,SAAC0B,EAAGzB,GAAJ,MAAU,CAACA,EAAI8N,EAAQrM,EAAvB,GAHT,GAIA,CAAC0V,IAEGyE,GAAM7C,EAAAA,EAAAA,cACV,+BAAE/Y,EAAF,KAAKyB,EAAL,YACE,SAAC+a,GAAD,CACElX,MAAOtF,EACPmE,MAAOsE,EAAOhH,GACd8a,SAAUA,EACVD,UAAWtc,IAAMsc,EACjBlD,SAAUA,GANd,GASA,CAAC3Q,EAAQ8T,EAAUD,EAAWlD,IAGhC,OACE,SAAC,GAAD,CACEe,SAAUA,EACVhN,IAAKA,EACLyO,IAAKA,EACLK,OAAQ,oCAGb,EAEYO,GAAa,SAAC,GAAD,IACxBlX,EADwB,EACxBA,MACAnB,EAFwB,EAExBA,MAFwB,IAGxBmY,UAAAA,OAHwB,aAIxBC,SAAAA,OAJwB,aAKxBnD,SAAAA,OALwB,MAKb,WAAQ,EALK,SAaxB,iBAAK5X,MAAO,CAAE8X,QAAS,OAAQ0C,OAAQ,QAAvC,WACE,iBACExa,OAAK,mBACAib,EAAAA,GAAAA,IAAQ,SACPH,EACA,CAAEI,WAAY,oCACd,CAAC,GALT,UAQGC,EAAAA,EAAAA,IAAIrX,MAEP,iBACE9D,OAAK,gBACHob,KAAM,IACNC,UAAW,UACRJ,EAAAA,GAAAA,IAAQ,SACPH,EACA,CAAEI,WAAY,oCACd,CAAC,GAPT,SAUGH,GACC,SAAC,GAAD,CACEpY,MAAOA,EACPiV,SAAU,SAAC0D,GAAD,OACR1D,EAAS9T,EAAOwX,EAAU7Y,OAAOE,GADzB,KAKZ,0BAAOA,QA1CW,EAgDb+S,GAAS,SAAC,GAYhB,IAAD,IAXJ9V,KAAAA,OAWI,MAXG,SAWH,MAVJkb,UAAAA,OAUI,OAVS,EAUT,MATJC,SAAAA,OASI,SARJpF,EAQI,EARJA,OAQI,IAPJ1O,OAAAA,OAOI,MAPK,MAOL,EACJ,GAAyB4P,EAAAA,EAAAA,UAAS5P,GAAlC,eAAOsU,EAAP,KAAYC,EAAZ,KACA,GAAsB3E,EAAAA,EAAAA,UAAS,KAA/B,eAAO5C,EAAP,KAAYwH,EAAZ,KACA,GAAwB5E,EAAAA,EAAAA,UAAS,CAAElU,MAAO,IAA1C,eAAO+Y,EAAP,KAAaC,EAAb,KAEMC,EAAS,WACbD,EAAQ,CAAEhZ,MAAOF,OAAOwR,IACzB,EAED,GAAsC4H,EAAAA,EAAAA,YAAWC,GAAAA,IAAzCC,EAAR,EAAQA,WAAYjO,EAApB,EAAoBA,GAAIkO,EAAxB,EAAwBA,UAClBC,GAAS1E,EAAAA,EAAAA,cAAW,uBAAC,kHAEJwE,EAAWtE,SAFP,cAEjBhQ,EAFiB,gBAGjBkO,EAAO3H,KAAKF,EAAIrG,GAHC,uDAKvByU,QAAQC,MAAR,MACAH,EAAU,8BANa,yDAQxB,CAAClO,EAAIiO,EAAYpG,EAAQqG,IAE5B,OACE,qBAASvc,UAAU,QAAnB,WACE,+BACE,yBAAMG,KACN,sBAAUG,KAAK,QAAf,WACE,mBAAQG,QAAS+b,EAAQxc,UAAU,SAAnC,UACE,SAAC,KAAD,CAAMG,KAAK,mBAEb,kBACEI,MAAO,CAAE1B,MAAO,MAAOkc,OAAQ,QAC/B4B,YAAa,eACbC,UAAW,kBAAqB,UAArB,EAAGjE,KAA6BwD,GAAhC,EACXhE,SAAU,gBAAajV,EAAb,EAAGgV,OAAUhV,MAAb,OAA2B8Y,EAAM,OAAC9Y,QAAD,IAACA,EAAAA,EAAS,IAA3C,KAEZ,mBAAQzC,QAAS0b,EAAQnc,UAAU,SAAnC,UACE,SAAC,KAAD,CAAMG,KAAK,gBAEZ6V,GAAQlX,KAAI,SAAC+d,GAAD,OACX,mBACE7c,UAAU,SAEVM,KAAK,SACL,eAAcuc,IAAWf,EAJ3B,WAME,kBACE5H,KAAK,QACL/T,KAAMA,EACN+C,MAAO2Z,EACPC,QAASD,IAAWf,EACpB3D,SAAU,kBAAM4D,EAAUc,EAAhB,IAEXA,IAXIA,EAHI,WAmBjB,SAACzB,GAAD,CACE5G,IAAKyH,EACL/F,OAAQA,EACRmF,UAAWA,EACXC,SAAUA,EACV9T,OAAQ,SAAChH,GAAD,OAShB,SAAkBgH,EAAgBhH,GAChC,OAAQgH,GACN,IAAK,MACH,OAAOoK,EAAAA,EAAAA,IAAIpR,GACb,IAAK,MACH,OAAOkb,EAAAA,EAAAA,IAAIlb,GACb,IAAK,MACH,OAAOoT,EAAAA,GAAAA,GAAIpT,GAEb,QACE,OAAOkG,EAAAA,EAAAA,IAAIlG,GAEhB,CArB8Buc,CAASjB,EAAKtb,EAA7B,EACR2X,SAAU,SAACpZ,EAAWyB,GAAZ,OAA0B0V,EAAOxM,OAAO3K,EAAGyB,EAAjB,OAAoBsb,QAApB,IAAoBA,EAAAA,EAAO,MAArD,MAIjB,ECjMM,IAAMkB,GAAb,0CAKE,WAA+Bne,EAAesB,GAAgB,IAAD,yBAC3D,cAAM,CAAC,SAAU,OAAX,kBAA8BtB,EAA9B,MAAyC,CAAC,WAAYsB,IAD/BtB,MAAAA,EAA8B,EAJnDqX,YAImD,IAHrD+G,SAAmB,EAGkC,EAFrDhW,QAAkB,EAIxB,EAAKiP,OAAS,IAAIgH,GAAWvO,KAAKC,IAAI,EAAG,EAAK/P,QAFa,CAG5D,CARH,mCAUE,WACE,IAAM0P,EAAOlL,KAAK2L,GAAG,QAAQhQ,UAC7BqE,KAAK4D,QAAU5D,KAAK2L,GAAG,WAAW3E,WAC9BkE,IACFlL,KAAK4Z,SAAW5Z,KAAK2L,KAAK3E,WAC1BhH,KAAK6S,OAAOlK,IAAI3I,KAAK4D,QAAS5D,KAAK4Z,UAEtC,GAjBH,kBAmBE,WAAiB,IAAD,IACd5Z,KAAKoJ,MAAMpC,WAAX,oBAAwBhH,KAAK6S,cAA7B,aAAwB,EAAahK,IAAI7I,KAAK4D,gBAA9C,QAA0D,CAC3D,GArBH,kBAuBE,WAAiB,IAAD,IACRA,EAAU5D,KAAK2L,GAAG,WAAW3E,WACnChH,KAAKoJ,MAAMpC,WAAX,oBAAwBhH,KAAK6S,cAA7B,aAAwB,EAAahK,IAAIjF,UAAzC,QAAqD,CACtD,GA1BH,gBA4BE,SAAGZ,GAAmB,IAAD,OAKnB,OAJAwD,EAAAA,EAAAA,IACExD,EAAMhD,KAAK6S,OAAOtJ,MAClB,kDAAgCvG,EAAhC,eAA0C,EAAK6P,OAAOtJ,KAAtD,QAEK,IAAIuQ,GAAJ,UAAc9Z,KAAKlD,KAAnB,YAA2BkG,EAA3B,KAAmCA,EAAKhD,KAAK6S,OACrD,GAlCH,oBAoCE,WACE,MAAO,EACL,SAAC,GAAD,CAAiB/V,KAAMkD,KAAKlD,KAAM+V,OAAQ7S,KAAK6S,OAAQ1O,OAAO,QAEjE,KAxCH,GAAyBiH,IA2CZ0O,GAAb,0CACE,WACEhd,EACiBkE,EACT+Y,GACP,IAAD,yBACA,cAAMjd,IAHWkE,MAAAA,EAEjB,EADQ+Y,IAAAA,EACR,CAED,CAPH,uCASE,WACE,OAAO/Z,KAAK+Z,IAAIlR,IAAI7I,KAAKgB,MAC1B,EAXH,IAaE,SAAwBpB,GACtBI,KAAK+Z,IAAIpR,IAAI3I,KAAKgB,MAAOpB,EAC1B,KAfH,GAA4BgH,GAkBfoT,GAAb,0CACE,WAAYld,GAAgB,kCACpB,EAAGA,EACV,CAHH,qCAKE,WACE,MAAO,EAAC,mCAAWkD,KAAKxE,SACzB,KAPH,GAA0Bme,IAUbM,GAAb,0CACE,WAAYnd,GAAgB,kCACpB,EAAGA,EACV,CAHH,kBAA2B6c,IAMdO,GAAb,0CACE,WAAYpd,GAAgB,kCACpB,EAAGA,EACV,CAHH,kBAA4B6c,IAMfQ,GAAb,0CACE,WAAYrd,GAAgB,kCACpB,GAAIA,EACX,CAHH,kBAA2B6c,IAMdS,GAAb,0CACE,WAAYtd,GAAgB,kCACpB,GAAIA,EACX,CAHH,kBAA4B6c,IC5FfU,GAAQ,SAACpe,GAMf,IAAD,EACJ,OACE,qBAASU,UAAW,CAAC,QAAD,UAAUV,EAAMU,iBAAhB,QAA6B,IAAI2d,KAAK,KAA1D,UACGre,EAAMG,SAAU,4BAASH,EAAMG,UAChC,0BAAOH,EAAMuF,WACZvF,EAAMse,SAAU,4BAASte,EAAMse,WAGrC,EAEYC,GAAY,SAACve,GAMnB,IAAD,EACJ,OACE,qBACEU,UAAS,UAAEV,EAAMU,iBAAR,QAAqB,GAC9B8d,KAAMxe,EAAMwe,KACZvd,MAAOjB,EAAMiB,MAHf,WAKE,8BACE,gBAAKP,UAAU,0BAAf,SAA0CV,EAAMye,YAEjDze,EAAMuF,WAGZ,EC/BKmZ,GAAQ,QAUd,SAAShS,GAAIuN,EAAyBvH,EAAWC,EAAW/O,GAC1D,IAAM+a,EAAwB,GAAX,IAAJhM,EAAUD,GACnBkM,EAAQhb,IAAU8a,GAAQ,IAAM,EACtCzE,EAAK0E,GAASC,EACd3E,EAAK0E,EAAQ,GAAKC,EAClB3E,EAAK0E,EAAQ,GAAKC,EAClB3E,EAAK0E,EAAQ,GAAK,GACnB,CAEM,IAAME,GAAS,SAAC,GAAoC,IAAlCjI,EAAiC,EAAjCA,OACnBkI,GAASrE,EAAAA,EAAAA,UAmBb,OAlBAzC,EAAAA,EAAAA,YAAU,WAAO,IAAD,IAjBQtF,EAAWC,EAkB3BoM,EAAG,oBAAGD,EAAO/H,eAAV,aAAG,EAAgBiI,WAAW,aAA9B,aAAuC3d,EAEhD,GAAI0d,EAAK,CAKP,IAJA,IAAME,GAAQzQ,EAAAA,EAAAA,IACZuQ,EAAIG,aAAa,EAAG,EAAG,IAAK,KAC5B,8BAEOC,EAAM,EAAGA,EAAM,IAAKA,IAC3B,IAAK,IAAI9D,EAAM,EAAGA,EAAM,IAAKA,IAAO,CAClC,IAAMuD,GA3BUlM,EA2BUyM,EA3BCxM,EA2BI0I,EAxBxB,KAwBWzE,EA1BThK,IAAIiJ,GAAS,GAAKlD,GAAMD,EAAI,GAAM,IAC/B,GAAKA,EAAI,IACVgM,GANP,SA+BJhS,GAAIuS,EAAMhF,KAAMkF,EAAK9D,EAAKuD,EAC3B,CAEHG,EAAIK,aAAaH,EAAO,EAAG,EAC5B,CACF,GAAE,CAACrI,KAGF,SAACwH,GAAD,CAAOje,QAAQ,6BAAf,UACE,mBACEc,MAAO,CACL1B,MAAO,OACP8f,SAAU,QACVC,UAAW,cACXC,aAAc,OACdC,OAAQ,IACRC,UAAW,iBACXC,WAAY,iBACZC,aAAc,sBACdC,YAAa,uBAVjB,UAaE,mBACEnH,IAAK,SAACA,GAAD,OAAUqG,EAAO/H,QAAP,OAAiB0B,QAAjB,IAAiBA,EAAAA,OAAOpX,CAAlC,EACL9B,MAAO,IACPkc,OAAQ,SAKjB,EC/DKoE,GAA6C,CAEjDC,MAAO,IACPC,UAAW,IACXC,UAAW,IACXC,QAAS,IACTC,WAAY,IACZC,UAAW,IACXC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,SAAU,IACVC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,IAAK,IACLC,IAAK,IACLC,IAAK,KAiBA,IAAMC,GAAW,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SACzB,GAAoC1J,EAAAA,EAAAA,WAAS,GAA7C,eAAO2J,EAAP,KAAmBC,EAAnB,KACA,GAAwB5J,EAAAA,EAAAA,UAAS0J,EAASrU,MAAMpC,YAAhD,eAAO1L,EAAP,KAAasiB,EAAb,KAEMC,GAASpJ,EAAAA,EAAAA,cACb,SAACqJ,GACC,IAAMxI,EApBZ,SAAiCyI,GAC/B,GAAIjC,GAAOiC,EAASzI,KAClB,OAAOwG,GAAOiC,EAASzI,KAEzB,GAA4B,IAAxByI,EAASzI,IAAIhZ,OAAc,CAC7B,IAAM0hB,EAAOD,EAASzI,IAAI2I,WAAW,GACrC,GAAID,GAAQ,IAAMA,GAAQ,IACxB,OAAOA,CAEV,CAED,OAAO,CACR,CAQiBE,CAAwBJ,GACxB,IAARxI,IAGJwI,EAAMK,iBACNV,EAASI,OAAOvI,GAChBsI,EAAQH,EAASrU,MAAMpC,YACvB2W,GAAc,GACf,GACD,CAACF,EAAUE,EAAeC,IAGtBQ,GAAY3J,EAAAA,EAAAA,cAAY,WAC5BkJ,GAAc,EACf,GAAE,IAEH,OACE,iBAAKhhB,UAAU,0BAAf,WACE,gBAAKA,UAAU,SAAf,UACE,SAACgT,GAAD,CAAmB7S,KAAK,WAAWxB,KAAMA,OAE3C,gBAAKqB,UAAU,SAAf,SACG+gB,GACC,kBAAOhJ,IAAK,SAAC/V,GAAD,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAG0f,OAAV,EAAmBxN,KAAK,OAAO0I,UAAWsE,KAEtD,mBAAQzgB,QAASghB,EAAjB,UACE,SAAC,KAAD,CAAMthB,KAAK,mBAMtB,EC3DD,IAAMwhB,GACD,MADCA,GAEA,MAFAA,GAGA,MAHAA,GAIA,MAJAA,GAKA,KALAA,GAMA,MANAA,GAOA,MAPAA,GAQA,MARAA,GASA,MATAA,GAUA,MAVAA,GAWA,MAGC,SAASC,GAAO9N,GACrB,SAASxJ,EAAIA,GACX,OAAQwJ,EAAcxJ,KAASA,CAChC,CAeD,MAda,CACXnF,EAAGmF,EAAIqX,IACPE,GAAIvX,EAAIqX,IACRG,GAAIxX,EAAIqX,IACRI,GAAIzX,EAAIqX,IACRxa,IAAM2M,EAAc6N,KAAY,EAChCK,GAAI1X,EAAIqX,IACRM,GAAI3X,EAAIqX,IACRO,GAAI5X,EAAIqX,IACRQ,GAAI7X,EAAIqX,IACRS,GAAI9X,EAAIqX,IACRU,GAAI/X,EAAIqX,IAIX,CAEM,SAASW,GAAT,KAGiB,IAFpBC,EAEmB,EAFnBA,IAAKzO,EAEc,EAFdA,YACLrC,EACmB,EADnBA,EAAGC,EACgB,EADhBA,EAAG0B,EACa,EADbA,GAEFzU,EAAOijB,GAAO9N,GACdhF,EAAInQ,EAAKojB,GAAKQ,EAAM9Q,EAC1B,GAAoBS,EAAAA,GAAAA,IAAIvT,EAAKwI,GAAIuK,EAAG5C,GAApC,eAEA,MAAO,CAAC,CAAE2C,EAAAA,EAAGC,EAAAA,EAAG0B,GAAIA,EAAK,EAAGjB,IAF5B,KAEiCR,KAFjC,MAEyChT,EAAKujB,GAC/C,CAEM,SAASM,GAAT,KAGmB,IAFtBD,EAEqB,EAFrBA,IAAKzO,EAEgB,EAFhBA,YAAa2O,EAEG,EAFHA,MAClBhR,EACqB,EADrBA,EAAGC,EACkB,EADlBA,EAAG0B,EACe,EADfA,GAAIjB,EACW,EADXA,IAAKR,EACM,EADNA,KAEXhT,EAAOijB,GAAO9N,GAEdqO,EAAKxjB,EAAKwjB,IAAMxQ,IAASG,GAAAA,GAAAA,SACzBsQ,EAAKzjB,EAAKyjB,IAAMzQ,IAASG,GAAAA,GAAAA,KACzBuQ,EAAK1jB,EAAK0jB,IAAM1Q,IAASG,GAAAA,GAAAA,SAG/BsB,EAAKqP,EAAQ,EAFDN,GAAMC,GAAMC,EAED5Q,EAAI2B,EAEvBzU,EAAKsjB,KACPvQ,EAAIS,GAGDxT,EAAKwG,EAECxG,EAAKqjB,KACdvQ,EAAIU,GAFJV,EAAkB,MAAdqC,EAKN,IAAMhF,EAAInQ,EAAKojB,GAAKQ,EAAM9Q,EACpBiR,GAAOxQ,EAAAA,GAAAA,IAAIvT,EAAKwI,GAAIuK,EAAG5C,GAmB7B,OAjBAqD,EAAMuQ,EAAK,GACX/Q,EAAO+Q,EAAK,GAgBL,CAdmB,CACxBC,SAAUlR,EACVmR,KAAMzQ,EACN0Q,OAAQlkB,EAAKujB,IAGS,CACtBzQ,EAAAA,EACAC,EAAAA,EACAS,IAAAA,EACAR,KAAAA,EACAyB,GAAAA,GAIH,CAKA,ICtGY0P,GAAb,0CACE,aAAe,kCACP,GAAI,MACX,CAHH,4EAKE,WAAoBzU,EAAgBC,GAApC,0GAEWoH,GAASrH,EAAIC,GAFxB,cAE+BxP,KAAI,SAAC0B,EAAGzB,GAAJ,OAAW,EAAKgkB,GAAGhkB,GAAGsL,WAAa7J,CAAnC,IAFnC,qDAKU,IAAI0N,MAAJ,qCAAwCI,IALlD,wDALF,8DAA4B0O,IAefmB,GAAb,0CAGE,aAAe,kCACP,GAAI,SACX,CALH,qCAOE,WACE,MAAO,EAAC,SAAC,GAAD,CAAiBjI,OAAQ7S,KAAK6S,SACvC,KATH,GAA4B8G,IAAfmB,GACK6E,OAAS7N,GAWpB,IAAM0L,GAAb,0CAGE,aAAe,kCACP,GAAI,CAAC,WAAY,WACxB,CALH,qCAOE,SAAOlI,GACLtV,KAAKoJ,MAAMpC,WAAmB,MAANsO,CACzB,GATH,sBAWE,WACEtV,KAAKoJ,MAAMpC,WAAa,CACzB,GAbH,oBAeE,WACE,MAAO,EAAC,SAAC,GAAD,CAAmByW,SAAUzd,OACtC,KAjBH,GAA8BqC,IAAjBmb,GACKmC,OAAS5N,GAmBpB,IAAMa,GAAb,0CAME,aAAe,IAAD,yBACZ,cAAM,CAAC,SAAU,OAAQ,gBAAiB,CAAC,WAAY,WANjDmH,IAAM,IAAIK,GAKJ,EAJNwF,OAAS,IAAI9E,GAIP,EAHN2C,SAAW,IAAID,GAGT,EAFN5Z,QAAU,EAIhB,EAAK/B,MAAMiI,IAAI,EAAK2T,UACpB,EAAK5b,MAAMiI,IAAI,EAAK8V,QACpB,EAAK/d,MAAMiI,IAAI,EAAKiQ,KAJR,CAKb,CAXH,mCAaE,WACE,IAAM7O,EAAOlL,KAAK2L,GAAG,QAAQhQ,UAE7B,GADAqE,KAAK4D,QAAU5D,KAAK2L,GAAG,WAAW3E,WAC9BkE,EAAM,CACR,IAAM/B,EAAMnJ,KAAK2L,KAAK3E,WAClBhH,KAAK4D,SAAW4Z,GAASmC,SAElB3f,KAAK4D,SAAWkX,GAAO6E,OAChC3f,KAAK4f,OAAOF,GAAG1f,KAAK4D,QAAUkX,GAAO6E,QAAQ3Y,WAAamC,EAE1DnJ,KAAK+Z,IAAI2F,GAAG1f,KAAK4D,SAASoD,WAAamC,EAE1C,CACF,GA1BH,kBA4BE,WACEnJ,KAAKsJ,MACN,GA9BH,kBAgCE,WACE,GAAKtJ,KAAK+Z,IAAV,CACA/Z,KAAK4D,QAAU5D,KAAK2L,GAAG,WAAW3E,WAClC,IACqC,IADjCoC,EAAM,EACV,GAAIpJ,KAAK4D,SAAW4Z,GAASmC,OAE3BvW,EAAG,oBAAGpJ,KAAKyd,gBAAR,aAAG,EAAerU,MAAMpC,kBAAxB,QAAsC,OACpC,GAAIhH,KAAK4D,SAAWkX,GAAO6E,OAAQ,CAAC,IAAD,IACxCvW,EAAG,oBAAGpJ,KAAK4f,cAAR,aAAG,EAAaF,GAAG1f,KAAK4D,QAAUkX,GAAO6E,QAAQ3Y,kBAAjD,QAA+D,CACnE,KAAM,CAAC,IAAD,IACLoC,EAAG,oBAAGpJ,KAAK+Z,WAAR,aAAG,EAAU2F,GAAG1f,KAAK4D,SAASoD,kBAA9B,QAA4C,CAChD,CACDhH,KAAKoJ,MAAMpC,WAAaoC,CAXH,CAYtB,GA7CH,gBA+CE,SAAY/N,GACV,UAAIA,QAAJ,IAAIA,GAAAA,EAAKwkB,WAAW,UAAW,CAAC,IAAD,MACvB7c,GAAM5D,EAAAA,EAAAA,IAAK,oBAAC/D,EAAI8C,OAAJ,OAAU,YAAV,iBAAD,iBAAC,EAA6BiK,cAA9B,aAAC,EAAqCpF,WAAtC,QAA6C,KAC9D,OAAOhD,KAAK+Z,IAAI2F,GAAG1c,EACpB,CACD,UAAI3H,QAAJ,IAAIA,GAAAA,EAAKwkB,WAAW,UAAW,CAAC,IAAD,MACvB7c,GAAM5D,EAAAA,EAAAA,IAAK,oBAAC/D,EAAI8C,OAAJ,OAAU,YAAV,iBAAD,iBAAC,EAA6BiK,cAA9B,aAAC,EAAqCpF,WAAtC,QAA6C,KAC9D,OAAOhD,KAAK4f,OAAOF,GAAG1c,EACvB,CACD,OAAO,iDAAS3H,EACjB,GAzDH,iBA2DE,SAAayB,GAA4C,IAA9B0M,EAA6B,uDAApB,EAClC,OAAI1M,EAAK+iB,WAAW,UACX7f,KAAK0f,GAAY,MAATlW,GAEb1M,EAAK+iB,WAAW,UACX7f,KAAK0f,GAAGlW,EAAU,KAASsR,GAAO6E,QAEvC7iB,EAAK+iB,WAAW,YACX7f,KAAK0f,GAAGlC,GAASmC,QAEtB7iB,EAAK+iB,WAAW,UACX7f,KAAK0f,GAAGlW,IAEV,kDAAU1M,EAAM0M,EACxB,GAzEH,gBA2EE,SAAGA,GACD,OAAIA,GAAUgU,GAASmC,OACd3f,KAAKyd,SAASrU,MAEnBI,GAAUsR,GAAO6E,OACZ3f,KAAK4f,OAAOF,GAAGlW,EAASsR,GAAO6E,QAE/B3f,KAAK+Z,IAAI2F,GAAGlW,EAEtB,KApFH,GAA4B4B,IAuFf0U,GAAb,0CAGE,aAAe,IAAD,yBACZ,cACE,CAAC,UAAW,kBAAmB,SAC/B,CAAC,WAAY,SAAU,eAAgB,YALnCjZ,MDnID,CAAEuH,EAAG,EAAGC,EAAG,EAAG0B,GAAI,EAAGjB,IAAK,EAAGR,KAAMG,GAAAA,GAAAA,MCqI5B,CAKb,CARH,mCAUE,WAAuB,IAAD,EACpB,EAAwBwQ,GAAQjf,KAAK+f,WAAY/f,KAAK6G,OAAtD,eAAOA,EAAP,KAAc2Y,EAAd,KACAxf,KAAK6G,MAAQA,EACb7G,KAAKoJ,IAAI,UAAUjC,KAAKqY,EAAS/Y,EAAOT,GACxChG,KAAKoJ,IAAI,QAAQpC,WAAjB,UAA8BhH,KAAK6G,MAAMiI,WAAzC,QAAgD,CACjD,GAfH,kBAiBE,WAAuB,IAAD,QACpB,GAAK9O,KAAK6G,MAAV,CACA,MAAwBsY,GAAQnf,KAAK+f,WAAY/f,KAAK6G,OAAtD,eAAOmZ,EAAP,KAAenZ,EAAf,KACA7G,KAAK6G,MAAQA,EAEb7G,KAAKoJ,IAAI,YAAYpC,WAArB,UAAkCgZ,EAAOV,gBAAzC,QAAqD,EACrDtf,KAAKoJ,IAAI,QAAQpC,WAAjB,UAA8BgZ,EAAOT,YAArC,QAA6C,EAC7Cvf,KAAKoJ,IAAI,UAAUjC,KAAK6Y,EAAOR,OAAS/Y,EAAOT,GAC/ChG,KAAKoJ,IAAI,MAAMpC,WAAf,oBAA4BhH,KAAK6G,aAAjC,aAA4B,EAAYkJ,UAAxC,QAA8C,CAPvB,CAQxB,GA1BH,sBA4BE,WAIE,MAAO,CAAEmP,IAHGlf,KAAK2L,GAAG,OAAO3E,WAGbyJ,YAFMzQ,KAAK2L,GAAG,eAAe3E,WAEhBoY,MADmB,IAAhCpf,KAAK2L,GAAG,SAAS3E,WAEhC,GAjCH,iBAmCE,SAAa3L,EAAamO,GACxB,cAAInO,QAAJ,IAAIA,GAAAA,EAAKwkB,WAAW,aACX,IAAI9X,GAAY,YAAa/H,KAAK6G,MAAMuH,GAEjD,OAAI/S,QAAJ,IAAIA,GAAAA,EAAKwkB,WAAW,aACX,IAAI9X,GAAY,YAAa/H,KAAK6G,MAAMwH,GAEjD,OAAIhT,QAAJ,IAAIA,GAAAA,EAAKwkB,WAAW,MACX,IAAI9X,GAAY,KAAM/H,KAAK6G,MAAMkJ,KAEnC,kDAAU1U,EAAKmO,EACvB,GA9CH,oBAgDE,WACE,IAAMlO,EAAOijB,GAAOve,KAAK2L,GAAG,eAAe3E,YAC3C,MAAO,EACL,SAAC2I,GAAD,CAAmB7S,KAAM,IAAKxB,KAAM0E,KAAK6G,MAAMuH,KAC/C,SAACuB,GAAD,CAAmB7S,KAAM,IAAKxB,KAAM0E,KAAK6G,MAAMwH,KAC/C,SAACsB,GAAD,CAAmB7S,KAAM,KAAMxB,KAAM0E,KAAK6G,MAAMkJ,MAChD,SAAC5B,GAAD,CACEC,EAAG9S,EAAKojB,GAAK1e,KAAK2L,GAAG,OAAO3E,WAAahH,KAAK6G,MAAMuH,EACpDC,EAAGrO,KAAK6G,MAAMwH,EACdjF,IAAKpJ,KAAK6G,MAAMiI,IAChBhL,GAAIxI,EAAKwI,GACTwK,KAAMtO,KAAK6G,MAAMyH,OAGtB,KA9DH,GAAyBlD,IAAzB,sDAiEa6U,GAAb,0CAKE,aAAe,IAAD,wBACZ,cAAM,CAAC,SAAU,IADL,uDAJP,IAAIrN,KAIG,uDAHP,IAAI6M,KAGG,uDAFP,IAAIK,KAKT,EAAKI,MAAL,0BAAqB,CACnB,CAAElW,KAAM,CAAElN,KAAM,QAAS+D,MAAO,GAAKkJ,GAAI,CAAEjN,KAAM,QAAS+D,MAAO,IACjE,CACEmJ,KAAM,CAAElN,KAAM,cAAe+D,MAAO,GACpCkJ,GAAI,CAAEjN,KAAM,cAAe+D,MAAO,IAEpC,CAAEmJ,KAAM,CAAElN,KAAM,OAAQ+D,MAAO,GAAKkJ,GAAI,CAAEjN,KAAM,MAAO+D,MAAO,IAC9D,CAAEmJ,KAAM,CAAElN,KAAM,SAAU+D,MAAO,GAAKkJ,GAAI,CAAEjN,KAAM,SAAU+D,MAAO,IACnE,CACEmJ,KAAM,CAAElN,KAAM,WAAY+D,MAAO,GACjCkJ,GAAI,CAAEjN,KAAM,WAAY+D,MAAO,MAInC,EAAKqf,MAAL,0BAAqB,CACnB,CAAElW,KAAM,CAAElN,KAAM,KAAM+D,MAAO,GAAKkJ,GAAI,CAAEjN,KAAM,UAAW+D,MAAO,IAChE,CACEmJ,KAAM,CAAElN,KAAM,cAAe+D,MAAO,GACpCkJ,GAAI,CAAEjN,KAAM,MAAO+D,MAAO,MAI9B,EAAKqf,MAAL,0BAAqB,CACnB,CAAElW,KAAM,CAAElN,KAAM,MAAO+D,MAAO,GAAKkJ,GAAI,CAAEjN,KAAM,KAAM+D,MAAO,IAC5D,CAAEmJ,KAAM,CAAElN,KAAM,SAAU+D,MAAO,GAAKkJ,GAAI,CAAEjN,KAAM,OAAQ+D,MAAO,IACjE,CACEmJ,KAAM,CAAElN,KAAM,WAAY+D,MAAO,GACjCkJ,GAAI,CAAEjN,KAAM,UAAW+D,MAAO,IAEhC,CAAEmJ,KAAM,CAAElN,KAAM,OAAQ+D,MAAO,GAAKkJ,GAAI,CAAEjN,KAAM,MAAO+D,MAAO,MAhCpD,CAkCb,CAvCH,mCAyCE,YACE,mDACD,GA3CH,iBA6CE,SAAa/D,EAAc0M,GACzB,OACE1M,EAAK+iB,WAAW,OAChB/iB,EAAK+iB,WAAW,cAChB/iB,EAAK+iB,WAAW,cAET,OAAA7f,KAAA,QAAU6I,IAAI/L,GAEnBA,EAAK+iB,WAAW,WACX,OAAA7f,KAAA,QAAU6I,IAAI/L,EAAM0M,IAEtB,kDAAU1M,EAAM0M,EACxB,GAzDH,kBA2DE,SAAcwB,EAAgBC,GAC5B,OAAO,OAAAjL,KAAA,QAAUkL,KAAKF,EAAIC,EAC3B,KA7DH,GAA8B5I,IC5JjB8d,GAAW,IAAI1X,IAExB,CACE,CAAC,OAAQyE,IACT,CAAC,SAAUE,IACX,CAAC,MAAOE,IACR,CAAC,QAASC,IACV,CAAC,MAAO/B,IACR,CAAC,QAASI,IACV,CAAC,KAAM6B,IACP,CAAC,OAAQC,IACT,CAAC,SAAUE,IACX,CAAC,MAAOC,IACR,CAAC,QAASE,IACV,CAAC,MAAOF,IACR,CAAC,QAASE,IACV,CAAC,MAAOnB,IACR,CAAC,QAASE,IACV,CAAC,YAAaC,IACd,CAAC,YAAaC,IACd,CAAC,OAAQlB,IACT,CAAC,WAAYG,IACb,CAAC,WAAYG,IACb,CAAC,YAAa+C,IACd,CAAC,YAAaG,IACd,CAAC,QAASpB,IACV,CAAC,QAASwB,IACV,CAAC,MAAOZ,IACR,CAAC,YAAaJ,IACd,CAAC,MAAOsB,IACR,CAAC,MAAOJ,IACR,CAAC,WAAYC,IACb,CAAC,YAAaA,IACd,CAAC,YAAaA,IACd,CAAC,KAAME,IACP,CAAC,OAAQiK,IACT,CAAC,QAASC,IACV,CAAC,SAAUC,IACX,CAAC,QAASC,IACV,CAAC,SAAUC,IACX,CAAC,SAAUqF,IACX,CAAC,SAAU3E,IACX,CAAC,WAAY0C,IACb,CAAC,MAAOsC,IACR,CAAC,WAAYG,IACb,CAAC,SAAUrN,IACX,CAAC,YAAa9C,IACd,CAAC,YAAaA,KAEhBrU,KAAI,+BAAEqB,EAAF,KAAQsjB,EAAR,WAAsB,CAC1BtjB,EACA,WACE,IAAMujB,EAAO,IAAID,EAEjB,OADAC,EAAKvjB,KAAOA,EACLujB,CACR,EANG,KAUD,SAASC,GAAexjB,GAC7B,IAAMujB,EAAOF,GAAStX,IAAI/L,GAC1B,OAAOujB,GACH9hB,EAAAA,EAAAA,IAAG8hB,MACH7hB,EAAAA,EAAAA,IAAI,IAAIqM,MAAJ,eAAkB/N,EAAlB,6BACT,CC1HD,SAASyjB,GAAS1f,EAAeC,GAC/B,QAAYxD,IAARwD,EAAJ,CAGA,GAAIA,GAAOD,EACT,OAAOC,EAAMD,EAAQ,EAEvB,GAAIA,EAAQ,GAAa,IAARC,EACf,OAAO,EAET,MAAM,IAAI+J,MAAJ,6CAAgDhK,EAAhD,cAA2DC,EAA3D,KAPL,CAQF,CAUM,SAAS0f,GAAM3e,GACpB,GAAoB,YAAhBA,EAAMA,MACR,OAAOye,GAAeze,EAAM/E,KAAK2jB,YAGnC,IAL0D,EAKpDC,EAAY,IAAIre,GACpBR,EAAMxF,IAAIZ,KAAI,gBAAGJ,EAAH,EAAGA,IAAKG,EAAR,EAAQA,MAAR,MAAqB,CAAEH,IAAKA,EAAIolB,WAAYjlB,MAAAA,EAA5C,IACdqG,EAAMrF,KAAKf,KAAI,gBAAGJ,EAAH,EAAGA,IAAKG,EAAR,EAAQA,MAAR,MAAqB,CAAEH,IAAKA,EAAIolB,WAAYjlB,MAAAA,EAA5C,IACfqG,EAAM/E,KAAK2jB,WACX,GACA5e,EAAMK,SAVkD,UAavCL,EAAMA,OAbiC,IAa1D,2BAAgC,CAAC,IAAtB+H,EAAqB,QACxBjG,EAAU2c,GAAe1W,EAAK9M,KAAK2jB,YACzC,IAAIjO,EAAAA,EAAAA,IAAM7O,GAAU,OAAOA,EAC3B,IAAMgd,GAAWpiB,EAAAA,EAAAA,IAAGoF,GAEdhC,EAAQiI,EAAKjI,MAAMlG,KAAgB,wBAAG6F,EAAH,EAAGA,IAAKF,EAAR,EAAQA,IAAR,MAAmB,CAC1D2I,GAAI,CACFjN,KAAMwE,EAAIjG,IAAIolB,WACd5f,MAAK,UAAES,EAAIT,aAAN,QAAe,EACpBrF,MAAO+kB,GAAQ,UAACjf,EAAIT,aAAL,QAAc,EAAGS,EAAIR,MAEtCkJ,KAAM,CACJlN,KAAMsE,EAAI/F,IAAIolB,WACd5f,MAAK,UAAEO,EAAIP,aAAN,QAAe,EACpBrF,MAAO+kB,GAAQ,UAACnf,EAAIP,aAAL,QAAc,EAAGO,EAAIN,MATC,IAazC,IACE4f,EAAUR,KAAKS,EAAUhf,EAG1B,CAFC,MAAOhD,GACP,OAAOH,EAAAA,EAAAA,IAAIG,EACZ,CACF,CApCyD,+BAsC1D,OAAOJ,EAAAA,EAAAA,IAAGmiB,EACX,C,eC7DYE,GAAb,WASE,WACUC,GAOP,IAND1c,EAMA,uDANS,UACT2c,EAKA,uCAJAC,EAIA,uCAHAC,EAGA,uCAFArd,EAEA,uCADA3C,EACA,uCACA,IADA,oBAPQ6f,SAAAA,EAOR,KAhBepI,SAgBf,OAfesI,UAef,OAdeC,UAcf,OAbeF,SAaf,OAZe9f,WAYf,OAXe2C,aAWf,EAEEQ,EAAO0b,WAAW,WACVviB,IAARwjB,QACSxjB,IAATyjB,QACSzjB,IAAT0jB,EACA,CAAC,IAAD,EACA,YAAiC7c,EAAOhG,OAAP,OAC/B,iCAD+B,qCAAjC,aAAiC,EAE9BiK,OAFKqQ,EAAR,EAAQA,IAAKsI,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,KAAMF,EAAzB,EAAyBA,IAQzB9gB,KAAKyY,IAAMA,EACXzY,KAAK+gB,KAAOE,SAASF,GACrB/gB,KAAKghB,KAAOC,SAASD,GACrBhhB,KAAK8gB,IAAMG,SAASH,GACpB9gB,KAAK2D,SAAU,EACf3D,KAAKgB,OAAS,CACf,MACCwF,EAAAA,EAAAA,IAAO,CAAC,IAAK,IAAK,IAAK,KAAKmD,SAASxF,EAAO,KAC5CnE,KAAKyY,IAAMtU,EAAO,GAClBnE,KAAK8gB,IAAL,OAAWA,QAAX,IAAWA,EAAAA,EAAO,EAClB9gB,KAAK+gB,KAAL,OAAYA,QAAZ,IAAYA,EAAAA,EAAQ,EACpB/gB,KAAKghB,KAAL,OAAYA,QAAZ,IAAYA,EAAAA,EAAQ,EACpBhhB,KAAK2D,QAAL,OAAeA,QAAf,IAAeA,GAAAA,EACf3D,KAAKgB,MAAL,OAAaA,QAAb,IAAaA,EAAAA,GAAU,CAE1B,CA/CH,qCAiDE,SAAOkgB,GACL,IAAIL,EAAQ,UAAM7gB,KAAK6gB,UACvB,GAAI7gB,KAAK2D,QAAS,CAChB,IAAM3C,EAAQhB,KAAKgB,OAAS,EAAIhB,KAAKgB,MAAQ,GAC7C6f,EAAQ,UAAMA,EAAN,YAAkB7f,EAAlB,IACT,CACD,OAAI6f,EAASvkB,OAAS0D,KAAK8gB,IAAM9gB,KAAK+gB,KAAO/gB,KAAKghB,KACzCH,EAASM,UAAU,EAAGnhB,KAAK8gB,IAAM9gB,KAAK+gB,KAAO/gB,KAAKghB,MAEpDhhB,KAAKohB,UAAUP,EACvB,GA3DH,mBA6DE,SAAMK,GACJ,IAAMtQ,EAAMsQ,EAAKG,OAAOrhB,KAAK6gB,SAAU7gB,KAAKgB,OAC5C,GAAiB,MAAbhB,KAAKyY,IACP,OAAOzY,KAAKshB,QAAQ1Q,GAGtB,IACI/Q,GAAQ4Y,EADA,CAAE8I,EAAGhT,EAAAA,GAAKF,EAAGhL,EAAAA,GAAKme,EAAGnJ,EAAAA,IAAMrY,KAAKyY,MAC5B7H,GAChB,MAAiB,MAAb5Q,KAAKyY,IACAzY,KAAKyhB,SAAS5hB,GAEdG,KAAKohB,UAAUvhB,EAAMqT,MAAMrT,EAAMvD,OAAS0D,KAAK8gB,KAEzD,GA1EH,uBA4EE,SAAkBjhB,GAChB,IAAM6hB,EAAQ1hB,KAAK+gB,KAAO/gB,KAAK8gB,IAAM9gB,KAAKghB,KACpCW,EAAYrW,KAAK2K,OAAOyL,EAAQ7hB,EAAMvD,QAAU,GAChDslB,EAAaF,EAAQC,EAAY9hB,EAAMvD,OACvCglB,EAAUK,EAAY9hB,EAAMvD,OAC5BmlB,EAAWH,EAAUM,EAG3B,OADA/hB,GADAA,EAAQA,EAAMgiB,SAASP,IACTQ,OAAOL,EAEtB,GArFH,qBAuFE,SAAgB5hB,GACdA,EAAQA,EAAMshB,UAAU,EAAGnhB,KAAK8gB,KAChC,IAAMW,EAAWzhB,KAAKghB,KAAOhhB,KAAK8gB,IAC5BQ,EAAUthB,KAAK+gB,KAAOU,EAG5B,OADA5hB,GADAA,EAAQA,EAAMiiB,OAAOL,IACPI,SAASP,EAExB,GA9FH,sBAgGE,SAAiBzhB,GACfA,EAAQA,EAAMshB,UAAU,EAAGnhB,KAAK8gB,KAChC,IAAMQ,EAAUthB,KAAK+gB,KAAO/gB,KAAK8gB,IAC3BW,EAAWzhB,KAAKghB,KAAOM,EAG7B,OADAzhB,GADAA,EAAQA,EAAMgiB,SAASP,IACTQ,OAAOL,EAEtB,KAvGH,KCUsBM,GAAtB,6CACqBvR,aAAyC,GAD9D,KAEYwR,YAAwB,GAFpC,KAGYC,KAAe,GAH3B,KAIEjX,GAAiB,IAAIkX,GAAAA,GAJvB,KA0BEC,YA1BF,OA2BEC,WA3BF,OAyDqBC,YAAmC,IAAI5Z,GAzD5D,6CAME,SAAcuC,GACZhL,KAAKgL,GAAKA,CACX,GARH,2DAUE,WAAWsX,GAAX,0GAVF,uHAWE,WAAgBA,GAAhB,0GAXF,+EAYE,SAAWA,GAA0B,GAZvC,wBAaE,SAAWC,GACTviB,KAAKgiB,YAAcO,CACpB,GAfH,4BAiBE,SAAe9R,GACbzQ,KAAKwQ,aAAazJ,KAAK0J,EACxB,GAnBH,mBAqBE,WACEzQ,KAAKmiB,OAASniB,KAAKwQ,aAAalI,OAAOC,YACvCvI,KAAKiiB,KAAO,EACb,GAxBH,iBA6BE,WAIE,YAHoB3kB,IAAhB0C,KAAKmiB,QACPniB,KAAKof,QAEApf,KAAKmiB,MACb,GAlCH,uBAoCE,WAAqD,IAAD,EAClD,iBAAOniB,KAAKoiB,aAAZ,aAAO,EAAYviB,KACpB,GAtCH,2DAwCE,sFACEG,KAAKoiB,MAAQpiB,KAAKwiB,MAAMjc,OACnBvG,KAAKoiB,MAAMK,KAFlB,gCAGUziB,KAAKoiB,MAAMviB,MAAM6iB,GAAG1iB,MAH9B,iCAIW,GAJX,iCAMS,GANT,gDAxCF,gHAiDE,mGACeA,KAAK2iB,OADpB,iGAjDF,wEAqDE,SAAKC,GAAmB,GArD1B,uBAuDE,WAAc,GAvDhB,2BA0DE,SAAc/B,EAAkBhhB,GAC9BG,KAAKqiB,YAAY1Z,IAAIkY,EAAUhhB,EAChC,GA5DH,8BA6DE,WACEG,KAAKqiB,YAAYQ,OAClB,GA/DH,oBAiEE,WAAU,IAAD,OACD9Z,EAAS/I,KAAKgiB,YAAYvmB,KAAI,SAACukB,GAAD,OAAYA,EAAO8C,MAAM,EAAzB,IACpC9iB,KAAKiiB,MAAL,WAAiBlZ,EAAOuR,KAAK,KAA7B,MACD,GApEH,oBAsEE,WAAU,IAAD,OACDvR,EAAS/I,KAAKgiB,YAAYvmB,KAAI,SAACukB,GAAD,OAAYA,EAAO5jB,OAAO,EAA1B,IACpC4D,KAAKiiB,MAAL,WAAiBlZ,EAAOuR,KAAK,KAA7B,MACD,GAzEH,iBA2EE,WACE,OAAOta,KAAKiiB,IACb,KA7EH,KAoFA,SAASc,GAAkB9Q,GACzB,YAA0C3U,IAAlC2U,EAA0B9M,GACnC,CAEM,IAAM6d,GAAb,gMACU3C,KAAa,IAAIlV,GAD3B,EAEUvF,MAAQE,EAAM+C,MAFxB,qCAyDE,SAAKwX,GAEH,OADArgB,KAAKqgB,KAAOA,EACLrgB,IACR,GA5DH,oBA8DE,SAAO6gB,GACL,MAAiB,SAAbA,IAGJA,EAAQ,UAAMA,QAGevjB,IAA3B0C,KAAKqgB,KAAK1U,GAAGkV,SACevjB,IAA5B0C,KAAKqgB,KAAKjX,IAAIyX,GAEjB,GAxEH,oBA0EE,SAAOA,EAA2BrX,GAEhC,GAAiB,UADjBqX,EAAQ,UAAMA,IAEZ,OAAO7gB,KAAK4F,MAAM6a,WAEpB,IAAMplB,EAAM2E,KAAKqgB,KAAKxX,IAAIgY,EAAUrX,GACpC,OAAKnO,EACEA,aAAeuL,EAAMvL,EAAI2L,WAAa3L,EAAIM,UADhC,CAElB,GAlFH,oBAoFE,SAAOklB,EAAkBhhB,EAAe2J,GAEtC,IAAMyZ,EAAWjjB,KAAKqgB,KAAKxX,IAAIgY,EAAUrX,GACrCyZ,aAAoBrc,EACtBqc,EAASjc,WAAanH,EAEd,OAARojB,QAAQ,IAARA,GAAAA,EAAU9b,KAAe,IAAVtH,EAAcmG,EAAMS,EAEtC,GA5FH,kBA8FE,WACEzG,KAAKqgB,KAAK/W,MACX,GAhGH,kBAkGE,WACEtJ,KAAKqgB,KAAK/W,OACVtJ,KAAK4F,MAAMe,MACZ,GArGH,kBAuGE,WACE3G,KAAKqgB,KAAK/W,OACVtJ,KAAK4F,MAAMc,MACZ,GA1GH,2DA4GE,WAAoB4b,GAApB,sFACQtiB,KAAKqgB,KAAKnV,KAAKlL,KAAKgL,GAAIsX,GADhC,gDA5GF,iHAgHE,0FACEtiB,KAAK4F,MAAMwZ,QADb,6GAhHF,0EAIE,SAAYzZ,GACV,IAD8B,EACxBub,EAAO,IAAI8B,EADa,UAGXrd,EAAID,OAHO,IAG9B,2BAA8B,CAAC,IAApBuM,EAAmB,QAC5B,GAAI8Q,GAAkB9Q,GACpBiP,EAAKgC,eAAeF,EAASG,kBAAkBlR,QAC1C,CACL,IAAMmR,EAAS,IAAIC,GAAsBpR,EAAKlN,OAC9Cmc,EAAKgC,eAAeE,GAFf,gBAGmBnR,EAAKnN,YAHxB,IAGL,2BAAyC,CAAC,IAA/BE,EAA8B,QACvCoe,EAAOF,eAAeF,EAASG,kBAAkBne,GAClD,CALI,+BAMN,CACF,CAb6B,+BAe9B,OAAOkc,CACR,GApBH,+BAsBE,SAAiCjP,GAC/B,IAAMjN,EAAY,IAAIse,GACtBte,EAAUK,KAAO4M,EAAK5M,KAFiC,gBAGtC4M,EAAK9M,KAHiC,IAGvD,2BAA2B,CAAC,IAAjBrB,EAAgB,QACzBkB,EAAUke,eAAeF,EAASO,gBAAgBzf,GACnD,CALsD,+BAMvD,OAAOkB,CACR,GA7BH,6BA+BE,SAA+BqL,GAC7B,IAAQvM,EAAOuM,EAAPvM,GACR,OAAQA,GACN,IAAK,OACH,OAAO,IAAI0f,GACb,IAAK,OACH,OAAO,IAAIC,GACb,IAAK,OACH,OAAO,IAAIC,GACb,IAAK,SACH,OAAO,IAAIC,GACb,IAAK,MACH,OAAO,IAAIC,GAAmBvT,EAAK7M,GAAI6M,EAAKxQ,MAAOwQ,EAAKrP,OAC1D,IAAK,cACH,OAAO,IAAI6iB,GAA0BxT,EAAKnM,MAC5C,IAAK,OACH,OAAO,IAAI4f,GAAoBzT,EAAK5R,SACtC,IAAK,aACH,OAAO,IAAIslB,GACb,IAAK,OACH,OAAO,IAAIC,GAAuB3T,EAAK1L,MACzC,SACEsf,EAAAA,EAAAA,IAAgBngB,EAAD,gCAA8BA,IAElD,KAvDH,GAA8Bie,IAiJjB6B,GAAb,WACE,WACU/C,EACAhhB,EACAmB,IACP,oBAHO6f,SAAAA,EAGR,KAFQhhB,MAAAA,EAER,KADQmB,MAAAA,CACN,CALN,iCAOE,SAAGkgB,GACDA,EAAKgD,OAAOlkB,KAAK6gB,SAAU7gB,KAAKH,MAAOG,KAAKgB,MAC7C,KATH,KAYa2iB,GAAb,yEACE,SAAGzC,GACDA,EAAKlB,QACN,KAHH,KAMa6D,GAAb,WAGE,aAA0C,IAA9BM,EAA6B,uDAAJ,IAAI,oBAFjC5B,QAAoB,GAEa,gBACpB4B,GADoB,IACvC,2BAA0B,CAAC,IAAhBjgB,EAAe,QACxBlE,KAAKokB,UAAUlgB,EAChB,CAHsC,+BAIxC,CAPH,wCASE,SAAUmM,GACRrQ,KAAKuiB,QAAQxb,KACX,IAAI6Z,GACFvQ,EAAK7M,GACL6M,EAAKnT,MACLmT,EAAK7U,MACL6U,EAAK5M,KACL4M,EAAK3M,KACL2M,EAAK1M,QACL0M,EAAKzM,SAGV,GArBH,gBAuBE,SAAGsd,GACDA,EAAKmD,WAAWrkB,KAAKuiB,SACrBrB,EAAK9kB,QACN,KA1BH,KA6BaknB,GAAb,6CACqB9S,aAAkC,GADvD,KAEEnL,UAFF,+CAIE,SAAeoL,GACbzQ,KAAKwQ,aAAazJ,KAAK0J,EACxB,GANH,yDAQE,WAASyQ,GAAT,0FAC4BlhB,KAAKwQ,cADjC,+DACaC,EADb,iBAEUA,EAAYiS,GAAGxB,GAFzB,qMARF,8DAeamC,GAAb,0CACE,WAA4BD,GAAiB,IAAD,yBAC1C,gBAD0BA,OAAAA,EAAgB,CAE3C,CAHH,0EAKE,WAAkBlC,GAAlB,4EACWxlB,EAAI,EADf,YACkBA,EAAIsE,KAAKojB,QAD3B,kFAEmBlC,GAFnB,OACmCxlB,IADnC,+DALF,4DAA2C4nB,IAgE9BQ,GAAb,WACE,WAA4BlB,IAAkB,oBAAlBA,QAAAA,CAAmB,CADjD,iCAEE,SAAG1B,GACDA,EAAKoD,KAAKtkB,KAAK4iB,QAChB,KAJH,KAOamB,GAAb,yEACE,SAAG7C,GACDA,EAAKqD,WACN,KAHH,KAMaP,GAAb,WACE,WAAqBrf,IAAe,oBAAfA,KAAAA,CAAgB,CADvC,0EAEE,WAASuc,GAAT,sFACQA,EAAKhW,KAAKlL,KAAK2E,MADvB,gDAFF,8DA0Ba+e,GAAb,6CACWc,uBAAwB,CADnC,kCAEE,SAAGtD,GACDA,EAAK5X,MACN,KAJH,KAOaka,GAAb,6CACWgB,uBAAwB,CADnC,kCAEE,SAAGtD,GACDA,EAAKva,MACN,KAJH,KAOa8c,GAAb,6CACWe,uBAAwB,CADnC,kCAEE,SAAGtD,GACDA,EAAKxa,MACN,KAJH,KCpaa+d,IAAiBC,EAAAA,EAAAA,eAC5B,IAAIxC,GAAAA,GAAW,IAAIyC,GAAAA,KCaRC,GAAgB,CAC3B,CAAC,KAAM,qBACP,CAAC,KAAM,qBACP,CAAC,KAAM,qBACP,CAAC,KAAM,sBAGIC,GAAwD,CACnE,KAAM,CACJ,MACA,MACA,KACA,MACA,MACA,OACA,QACA,QACA,OACA,QACA,YACA,YACA,WACA,WACA,UAEF,KAAM,CAAC,YAAa,YAAa,QAAS,QAAS,YAAa,OAChE,KAAM,CAAC,MAAO,WAAY,KAAM,OAAQ,QAAS,SAAU,QAAS,UACpE,KAAM,CAAC,SAAU,MAAO,aAU1B,SAASC,GAAQhoB,GACf,MAAM,QAAN,OAAeA,EAAf,gDAKD,CA2CD,SAASioB,GAAW1E,GAClB,MAAO,CACLne,QAASme,EAAKne,QACd8iB,OAAQnpB,EAAWwkB,EAAKhkB,KACxB4oB,QAASppB,EAAWwkB,EAAK7jB,MACzB0oB,aAAcrpB,EAAWwkB,EAAKvkB,MAC9B+F,MAAO,IAAIoH,IAAIoX,EAAKxe,OAEvB,CAED,IAAM+D,GAAQE,EAAM+C,MAOb,SAASsc,GACdna,EACAkO,EACAkM,EACAC,GAEA,MA/EF,SAAmBD,GAAkC,IAAD,IAC5CE,EAAO,UAAIF,EAAQ,wBAAZ,QAA0D,KACjEG,EAAQV,GAASS,GAEvB,MAAO,CAAEA,QAAAA,EAASC,MAAAA,EAAOC,SADX,UAAGJ,EAAQ,qBAAX,QAA4BG,EAAM,GAEjD,CA0EoCE,CAAUL,GAAvCE,EAAN,EAAMA,QAASC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,SAClBnF,EAAO,IAAIlV,GACX+V,EAAO,IAAI8B,GAET1P,EAA+B,WACnC,IAAMoS,EAA0B,CAC9BJ,QAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAG,WAAYxF,GAASzX,IAAI8c,GACzBI,aAAa,GAGXC,EAAYvF,GAAeoF,EAASF,WACpChT,EAAAA,EAAAA,IAAMqT,GACR3M,GAAUlE,EAAAA,EAAAA,IAAQxW,EAAAA,EAAAA,IAAIqnB,KAEtBxF,GAAO9hB,EAAAA,EAAAA,IAAGsnB,GAGZ,IAAMC,EAAMf,GAAW1E,GAMvB,OAJA0F,YAAW,WACTC,EAAQC,YACT,IAEM,CACLP,SAAAA,EACAQ,MAAO,CACLC,IAAK,GACLC,IAAK,GACLzgB,IAAK,GACLyD,IAAK,IAEP0c,IAAAA,EAEH,CAhCoC,GAkC/BzS,EAAW,CACfgT,SADe,SAEbxf,EAFa,GAcZ,IAAD,IAVEsf,IAAAA,OAUF,MAVQtf,EAAMqf,MAAMC,IAUpB,MATExgB,IAAAA,OASF,MATQkB,EAAMqf,MAAMvgB,IASpB,MAREygB,IAAAA,OAQF,MARQvf,EAAMqf,MAAME,IAQpB,MAPEhd,IAAAA,OAOF,MAPQ,GAOR,EACAvC,EAAMqf,MAAMC,IAAMA,EAClBtf,EAAMqf,MAAMvgB,IAAMA,EAClBkB,EAAMqf,MAAME,IAAMA,EAClBvf,EAAMqf,MAAM9c,IAAMA,CACnB,EAEDkd,WArBe,SAqBJzf,GAAuB,IAAD,EAC/BA,EAAMif,IAAMf,GAAW1E,GACvBxZ,EAAM6e,SAASH,MAAQV,GAAShe,EAAM6e,SAASJ,SAC/Cze,EAAM6e,SAASF,SAAf,UAA0BnF,EAAKvjB,YAA/B,QAAuC0oB,EAClC3e,EAAM6e,SAASH,MAAM5b,SAAS9C,EAAM6e,SAASF,YAChD3e,EAAM6e,SAASH,MAAf,kBACK1e,EAAM6e,SAASH,OADpB,CAEE1e,EAAM6e,SAASF,WAGpB,EAEDe,WAjCe,SAiCJ1f,EAAsBye,GAC/B,IAAMC,EAAQV,GAASS,GACjBE,EACJ3e,EAAM6e,SAASF,UAAYD,EAAM5b,SAAS9C,EAAM6e,SAASF,UACrD3e,EAAM6e,SAASF,SACfD,EAAM,GACZ1e,EAAM6e,SAASJ,QAAUA,EACzBze,EAAM6e,SAASH,MAAQA,EACvBvlB,KAAKwmB,QAAQ3f,EAAO2e,EACrB,EAEDgB,QA5Ce,SA4CP3f,EAAsB2e,GAC5B3e,EAAM6e,SAASF,SAAWA,EAC1B3e,EAAM6e,SAASC,WAAaxF,GAASzX,IAAI8c,EAC1C,EAEDiB,YAjDe,SAiDH5f,GACVA,EAAM6e,SAASE,aAAc,CAC9B,EACDc,aApDe,SAoDF7f,GACXA,EAAM6e,SAASE,aAAc,CAC9B,EACDe,eAvDe,SAuDA9f,GAAuB,IAAD,QACnCA,EAAMqf,MAAM9c,IAAZ,oBAAkB8X,SAAlB,aAAkB,EAAM0F,aAAxB,QAAiC,GACjC/f,EAAM6e,SAASrgB,KAAf,UAAsB6b,SAAtB,iBAAsB,EAAM2F,mBAA5B,aAAsB,EAAmBxhB,KACzCrF,KAAKsmB,WAAWzf,EACjB,GAGGmf,EAAU,CACdO,WADc,SACHO,GACTxB,EAAUF,EAAQ,iBAAmB0B,EACrCzB,EAASrS,QAAQ,CAAEW,OAAQ,aAAcC,QAAS0R,IAClDtlB,KAAKwmB,QAAQ3B,GAASS,GAAS,GAChC,EAEDkB,QAPc,SAONnG,GAAmD,IAArCiF,EAAoC,uDAA1BF,EAAQ,iBACtCI,EAAWJ,EAAQ,cAAgB/E,EACnCgF,EAASrS,QAAQ,CAAEW,OAAQ,UAAWC,QAAS4R,IAC/CxlB,KAAK+mB,SAASzB,EAASE,EACxB,EAEDpG,MAbc,WAcZtZ,EAAM+C,MAAMuW,QACZiB,EAAKjB,QACL8B,EAAK9B,QACLiG,EAASrS,QAAQ,CAAEW,OAAQ,WAAYC,QAAS,CAAC,IACjDyR,EAASrS,QAAQ,CAAEW,OAAQ,cAC5B,EAEDqT,YArBc,YAqB6D,IAA7Db,EAA4D,EAA5DA,IAAKxgB,EAAuD,EAAvDA,IAAKygB,EAAkD,EAAlDA,IACtBf,EAASrS,QAAQ,CAAEW,OAAQ,WAAYC,QAAS,CAAEuS,IAAAA,EAAKxgB,IAAAA,EAAKygB,IAAAA,KAC5D,IACEpmB,KAAKinB,YAAYd,GACjBnmB,KAAKknB,YAAYvhB,EAGlB,CAFC,MAAOhH,GACPua,GAAUlE,EAAAA,EAAAA,GAAQrW,GACnB,CACF,EAEDsoB,YA/Bc,SA+BFd,GACV9F,EAAKtV,SACL,IAAMoc,EAAc1kB,EAAAA,MAAU0jB,GAC9B,IAAI3T,EAAAA,EAAAA,IAAM2U,GAGR,OAFAjO,EAAU,6BACVmM,EAASrS,QAAQ,CAAEW,OAAQ,eAG7B,IAAMkS,EAAYnF,IAAUniB,EAAAA,EAAAA,IAAG4oB,IAC/B,IAAI3U,EAAAA,EAAAA,IAAMqT,GAGR,OAFA3M,GAAUlE,EAAAA,EAAAA,IAAQxW,EAAAA,EAAAA,IAAIqnB,UACtBR,EAASrS,QAAQ,CAAEW,OAAQ,eAG7BuF,EAAU,yBAAamH,EAAKvjB,QAC5BkD,KAAKonB,aAAY7oB,EAAAA,EAAAA,IAAGsnB,GACrB,EAEDuB,YAjDc,SAiDFC,GAEV,IAF6B,EAEvBrC,EAAS3E,EAAKhkB,IAFS,UAGO2oB,GAHP,IAG7B,2BAA4C,CAAC,IAAD,qBAAhC3pB,EAAgC,KAAzB2L,EAAyB,KAAzBA,WACbqgB,EAAShrB,IAAIqM,IAAIrN,KACnBgsB,EAAShrB,IAAIwM,IAAIxN,GAAM2L,WAAaA,EAEvC,CAP4B,+BAQ7BqgB,EAAS/d,OACT+W,EAAOgH,EACPhC,EAASrS,QAAQ,CAAEW,OAAQ,cAC5B,EAEKoT,SA9DQ,SA8DCzB,EAAiBxoB,GAAe,IAAD,+IAC5CsoB,EAAQ,cAAgBtoB,EAClBwqB,EAAS,SAACnkB,GAAD,0BACAmiB,EADA,YACWxoB,EADX,YACmBA,EADnB,YAC2BqG,EAD3B,EAF6B,SAKdokB,QAAQC,IAAI,CACxCxc,EAAGuH,SAAS+U,EAAO,QAAQG,OAAM,kBAAM3C,GAAQhoB,EAAd,IACjCkO,EAAGuH,SAAS+U,EAAO,QAAQG,OAAM,iBAxOjC,8CAwOiC,IACjCzc,EAAGuH,SAAS+U,EAAO,QAAQG,OAAM,iBAlOjC,WAkOiC,MARS,+BAKrCtB,EALqC,KAKhCxgB,EALgC,KAK3BygB,EAL2B,KAW5Cf,EAASrS,QAAQ,CAAEW,OAAQ,WAAYC,QAAS,CAAEuS,IAAAA,EAAKxgB,IAAAA,EAAKygB,IAAAA,KAC5D,EAAKa,YAAYd,GACjB,EAAKe,YAAYvhB,GAb2B,6CAc7C,EAEK+hB,SA9EQ,SA8ECvB,GAA8C,IAAD,8IAAhCwB,EAAgC,+BAA1BrC,EAASxoB,EAAiB,+BAAV0oB,EAChDH,EAASrS,QAAQ,CAAEW,OAAQ,WAAYC,QAAS,CAAEuS,IAAAA,KAC5Clb,EAFoD,oBAEhC0c,EAFgC,YAEzB7qB,EAFyB,YAEjBA,EAFiB,iBAGpDkO,EAAG4c,UAAU3c,EAAMkb,GAHiC,OAI1DjN,EAAU,SAAD,OAAUjO,IAJuC,4CAK3D,EAEDjO,OArFc,SAqFP3B,EAAUK,QACL4B,IAAN5B,EACFL,EAAI2L,WAAa3L,EAAI2L,WAAc,GAAKtL,EAEtB,IAAdL,EAAIG,MACNH,EAAI2B,SAEJ3B,EAAI2L,YAAc,EAGtBqZ,EAAK/W,OACL+b,EAASrS,QAAQ,CAAEW,OAAQ,cAC5B,EAED/N,MAnGc,WAoGZA,GAAM5I,SACNqoB,EAASrS,QAAQ,CAAEW,OAAQ,cAC5B,EAEDkU,WAxGc,WAyGZ,IAAMR,EAAW/G,GAAekF,IAC5BhT,EAAAA,EAAAA,IAAM6U,GACRnO,EAAU,0BAAD,OACmBsM,EADnB,cACgCxQ,EAAAA,EAAAA,IAAQxW,EAAAA,EAAAA,IAAI6oB,MAIvDrnB,KAAKonB,aAAY7oB,EAAAA,EAAAA,IAAG8oB,GACrB,EAEDpB,WAnHc,WAoHZjmB,KAAK+mB,SAASzB,EAASE,EACxB,EAED0B,YAvHc,SAuHFviB,GACV0gB,EAASrS,QAAQ,CAAEW,OAAQ,WAAYC,QAAS,CAAEjO,IAAKhB,KACvD,IAAMgB,EAAME,EAAIvH,MAAMqG,GAEtB,OAAI6N,EAAAA,EAAAA,IAAM7M,IACRuT,EAAU,iCACH,IAETA,EAAU,uBAEVgI,EAAO8B,GAAShZ,MAAKzL,EAAAA,EAAAA,IAAGoH,IAAMmiB,KAAKzH,IAC9B0H,cAAc/c,GACnBqa,EAASrS,QAAQ,CAAEW,OAAQ,oBACpB,EACR,EAEKqU,QAvIQ,SAuIArjB,GAAe,IAAD,2HACrB,EAAKuiB,YAAYviB,GADI,wDAI1B0gB,EAASrS,QAAQ,CAAEW,OAAQ,gBAE3B3I,EAAGid,MAAM,YANiB,SAOpB/G,EAAKgH,MAPe,OAQ1Bld,EAAGmd,OAEH9C,EAASrS,QAAQ,CAAEW,OAAQ,mBAVD,4CAW3B,EAEKhN,KApJQ,WAoJA,OAAD,0HACLua,EAAKyB,OADA,4CAEZ,GAGH,MAAO,CAAErP,aAAAA,EAAcD,SAAAA,EAAU2S,QAAAA,EAClC,CCvXM,IAAMoC,GAAU,8HACVtqB,GAAUJ,EAAAA,EAAAA,QAAY0qB,GAAY5qB,GAClC6qB,GAAevqB,GAAQ2C,gBAAgB9C,GAEpD0qB,GAAappB,aAAmB,OAAQ,CACtC8T,KADsC,SACjClT,EAAOd,GACV,OAAOc,EAAMR,YACd,IAGHgpB,GAAappB,aAAmB,OAAQ,CACtCgT,KADsC,SACjC7R,EAAIkoB,EAAOhoB,GACd,OAAOgoB,EAAM9mB,SAAS/F,KAAI,SAACqG,GAAD,OAAOA,EAAEiR,IAAT,GAC3B,IAGHsV,GAAappB,aAAkB,OAAQ,CACrCuD,KADqC,SAChCkD,GACH,OAAOA,EAAMlE,SAAS/F,KAAI,SAACqG,GAAD,OAAOA,EAAEmQ,IAAT,GAC3B,IAGI,IAAMsW,GAAM,CACjBzqB,QAASsqB,GACTrqB,UAAWsqB,GACX3lB,OAAQ5E,GACRQ,MAAOT,EAAgBC,GAASuqB,KC5BrBG,GAAY,SAAC,GAQnB,IAAD,IAPJ7rB,UAAAA,OAOI,MAPQ,GAOR,EANJyM,EAMI,EANJA,IACAgd,EAKI,EALJA,IAMMpG,EAASuI,GAAIjqB,MAAM8K,GACnBqf,EAAUF,GAAIjqB,MAAM8nB,GAE1B,IAAI5T,EAAAA,EAAAA,IAAMwN,GACR,OACE,gCACE,8BACE,gDAEF,0BAAMhL,EAAAA,EAAAA,IAAQxW,EAAAA,EAAAA,IAAIwhB,OAClB,2BACE,yBAAM5W,SAMd,IAAIoJ,EAAAA,EAAAA,IAAMiW,GACR,OACE,gCACE,8BACE,iDAEF,6BACE,0BAAMzT,EAAAA,EAAAA,IAAQxW,EAAAA,EAAAA,IAAIiqB,OAClB,yBAAMrC,UAMd,IAAMsC,GAAUnqB,EAAAA,EAAAA,IAAGkqB,GACbE,GAAUpqB,EAAAA,EAAAA,IAAGyhB,GACf4I,EAAW,EACTC,GAAQttB,EAAAA,EAAAA,GAAM,EAAG+P,KAAK8K,IAAIsS,EAAQpsB,OAAQqsB,EAAQrsB,SAASb,KAAI,SAACC,GAAO,IAAD,IACpEotB,EAAI,UAAGJ,EAAQhtB,UAAX,QAAiB,GACrBqtB,EAAI,UAAGJ,EAAQjtB,UAAX,QAAiB,GAC3B,OAAOH,EAAAA,EAAAA,GAAM,EAAG+P,KAAK8K,IAAI0S,EAAKxsB,OAAQysB,EAAKzsB,SACxCb,KAAI,SAACsD,EAAGiqB,GAAJ,cAAU,WAACF,EAAKE,UAAN,QAAY,GAAZ,UAAgBD,EAAKC,UAArB,QAA2B,GAArC,IACJvtB,KAAI,YAAiB,IAAD,eAAd2qB,EAAc,KAAThd,EAAS,KACb2J,EAAO,CACXqT,IAAG,OAAEA,QAAF,IAAEA,EAAAA,EAAO,IACZhd,IAAG,OAAEA,QAAF,IAAEA,EAAAA,EAAO,IACZ6f,KACiC,QAA5B,OAAH7C,QAAG,IAAHA,OAAA,EAAAA,EAAK1T,OAAOvU,MAAM,YAAwB,OAAHiL,QAAG,IAAHA,OAAA,EAAAA,EAAKsJ,WAAL,OAAgB0T,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAK1T,SAKhE,OAHKK,EAAKkW,OACRL,GAAY,GAEP7V,CACR,GACJ,IAED,OACE,iBAAKpW,UAAW,YAAcA,EAA9B,WACE,wBACE,8GAGYisB,QAGd,kBACE1rB,MAAO,CACLgsB,WAAY,+BACZC,aAAc,QAHlB,UAME,2BACGN,EAAMptB,KAAI,SAAC6b,EAAK5b,GAAN,OACT,wBACG4b,EAAI7b,KAAI,WAAqBC,GAArB,IAAG0qB,EAAH,EAAGA,IAAKhd,EAAR,EAAQA,IAAK6f,EAAb,EAAaA,KAAb,OACP,SAACG,GAAD,CAAUhD,IAAKA,EAAKhd,IAAKA,EAAK6f,KAAMA,GAAWvtB,EADxC,KADFA,EADA,UAWpB,EAEK0tB,GAAW,SAAC,GAQX,IAPLhD,EAOI,EAPJA,IACAhd,EAMI,EANJA,IAOA,OADI,EALJ6f,MAOE,iCACE,wBAAK7C,KACL,sBAGF,iCACE,yBACE,yBAAMA,OAER,yBACE,yBAAMhd,QAIb,E,iCCpGYigB,GAAa,SAAC,GAA4C,IAAD,IAAzChQ,EAAyC,EAAzCA,MAC3B,OAAY,OAALA,QAAK,IAALA,GAAAA,EAAOiQ,UACZ,qBAAS3sB,UAAU,aAAa8d,MAAI,EAApC,WACE,oBAASxd,KAAK,SAASN,UAAU,YAAjC,UACE,qCAEF,0BACE,qDACG0c,QADH,IACGA,OADH,EACGA,EAAO5a,eADV,eACqB4a,QADrB,IACqBA,OADrB,EACqBA,EAAO3a,oBAD5B,QAC4CnB,UAKhD,uBAEH,EAEKgsB,GAAW,SAAC,GAUX,IATL1pB,EASI,EATJA,MACAiV,EAQI,EARJA,SACA0U,EAOI,EAPJA,SAOI,IANJnsB,SAAAA,OAMI,SACJ,GAAwB0W,EAAAA,EAAAA,UAASlU,GAAjC,eAAO4pB,EAAP,KAAaC,EAAb,KACA,OACE,qBACE,+BAAuBF,GACvBnsB,SAAUA,EACVwC,MAAO4pB,EACP3U,SAAU,SAACnW,GAAO,IAAD,EACTkB,EAAK,UAAGlB,EAAEkW,cAAL,aAAG,EAAUhV,MACxB6pB,EAAQ7pB,GACRiV,EAASjV,EACV,GAGN,EAEK8pB,GAAS,SAAC,GAcT,IAbL9pB,EAaI,EAbJA,MACAiV,EAYI,EAZJA,SACA0U,EAWI,EAXJA,SACAnQ,EAUI,EAVJA,MAUI,IATJhc,SAAAA,OASI,SARJ2a,EAQI,EARJA,UASQ4R,GAAU7Q,EAAAA,EAAAA,YAAWC,GAAAA,IAArB4Q,MACFC,GAASC,EAAAA,GAAAA,MAETC,GAASrT,EAAAA,EAAAA,UACTsT,GAActT,EAAAA,EAAAA,QAAiB,IAG/BuT,GAAmBxV,EAAAA,EAAAA,cAAY,SAACyV,GAAQ,IAAD,EAC3CH,EAAO/W,QAAUkX,EACjB,UAAAH,EAAO/W,eAAP,SAAgBmX,cAAc,CAC5BjB,WAAW,6PAIXkB,SAAU,GACVC,QAAS,CACPC,SAAS,IAGd,GAAE,IAiFH,OA9EArW,EAAAA,EAAAA,YAAU,WACR,GAAK8V,EAAO/W,QAAZ,CACA,IAAMuX,EAAQR,EAAO/W,QAAQwX,WACvBC,EAAyD,GAC/D,GAAIF,GAASvS,EAAW,CACtB,IAAMnX,EAAQ0pB,EAAMG,cAAc1S,EAAUnX,OACtCC,EAAMypB,EAAMG,cAAc1S,EAAUlX,KACpCvF,EAAK,OAAGsuB,QAAH,IAAGA,OAAH,EAAGA,EAAQc,MAAMC,cAAc/pB,EAAOC,GAC7CvF,IACFkvB,EAAe1jB,KAAK,CAClBxL,MAAAA,EACAsvB,QAAS,CAAEC,gBAAiB,eAE9Bf,EAAO/W,QAAQ+X,oBAAoBxvB,GAEtC,CACDyuB,EAAYhX,QAAU+W,EAAO/W,QAAQgY,iBACnChB,EAAYhX,QACZyX,EAjByB,CAmB5B,GAAE,CAACV,EAAQ/R,EAAW6R,KAGvB5V,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRgX,EACM,WAAVrB,EACIsB,OAAOC,WAAW,8BAA8BC,QACtC,SAAVxB,EACN,UAAAG,EAAO/W,eAAP,SAAgBmX,cAAc,CAC5BP,MAAOqB,EAAS,UAAY,MAE/B,GAAE,CAAClB,EAAQH,KAGZ3V,EAAAA,EAAAA,YAAU,gBACe3W,IAAnBysB,EAAO/W,SACX+W,EAAO/W,QAAQmX,cAAc,CAAEkB,SAAUhuB,GAC1C,GAAE,CAAC0sB,EAAQ1sB,KAGZ4W,EAAAA,EAAAA,YAAU,WAAO,IAAD,UACd,QAAuB3W,IAAnBysB,EAAO/W,SACI,OAAX6W,EAAJ,CACA,IAAMU,EAAQR,EAAO/W,QAAQwX,WAC7B,GAAc,OAAVD,EACJ,QAAcjtB,IAAV+b,GAAuBA,EAAMjb,YAC/ByrB,EAAOE,OAAOuB,gBAAgBf,EAAOf,EAAU,QADjD,CAKA,2BACE,kEAAwD+B,KAAxD,UACElS,EAAM3a,oBADR,QACwB,WAF1B,aACE,EAEG0J,cAHL,QAGe,CAAE6J,KAAM,EAAGuZ,OAAQ,EAAG/sB,QAAS,yBAHtCwT,EAAR,EAAQA,KAAMuZ,EAAd,EAAcA,OAAQ/sB,EAAtB,EAAsBA,QAIhBgtB,EAAkB9rB,OAAOsS,GACzByZ,EAAgBD,EAChBE,EAAchsB,OAAO6rB,GAIvBI,EACFD,GAAW,oBAJMpB,EAChBsB,eAAeJ,GACftK,UAAUwK,EAAc,GAECxtB,MAAM,mBAArB,aAAI,EAA+B,GAAG7B,cAAtC,QAAgD,GACzDsvB,GAAaD,IACfC,EAAYD,EAAc,GAG5B9B,EAAOE,OAAOuB,gBAAgBf,EAAOf,EAAU,CAC7C,CACE/qB,QAAAA,EACAktB,YAAAA,EACAF,gBAAAA,EACAG,UAAAA,EACAF,cAAAA,EACAI,SAAUC,GAAAA,GAAAA,QAzBb,CAN0B,CAkC5B,GAAE,CAAC1S,EAAO0Q,EAAQF,EAAQL,KAGzB,iCACE,SAAC,MAAD,CACE3pB,MAAOA,EACPiV,SAAU,eAAC3X,EAAD,uDAAK,GAAL,OAAY2X,EAAS3X,EAArB,EACVqsB,SAAUA,EACVS,QAASA,IAEV5sB,IAAY,gBAAKV,UAAU,cAGjC,EAEYqvB,GAAS,SAAC,GAkBhB,IAAD,IAjBJrvB,UAAAA,OAiBI,MAjBQ,GAiBR,MAhBJO,MAAAA,OAgBI,MAhBI,CAAC,EAgBL,MAfJG,SAAAA,OAeI,SAdJwC,EAcI,EAdJA,MACAiV,EAaI,EAbJA,SACAhX,EAYI,EAZJA,QACA0rB,EAWI,EAXJA,SACAxR,EAUI,EAVJA,UAWA,GAA0BjE,EAAAA,EAAAA,YAA1B,eAAOsF,EAAP,KAAc4S,EAAd,KACQpC,GAAW9Q,EAAAA,EAAAA,YAAWC,GAAAA,IAAtB6Q,OAEFvrB,GAAQmW,EAAAA,EAAAA,cACZ,WAAwB,IAAvBgV,EAAsB,uDAAP,GACRprB,EAASP,EAAQK,MAAMsrB,GAC7BwC,EAAS5tB,EAAOirB,SAAWjrB,OAASf,EACrC,GACD,CAAC2uB,EAAUnuB,KAGbmW,EAAAA,EAAAA,YAAU,kBAAM3V,EAAMuB,EAAZ,GAAoB,CAACvB,EAAOuB,IACtC,IAAMqsB,GAAUvV,EAAAA,EAAAA,UAAQ,kBAAMwV,EAAAA,GAAAA,GAAS7tB,EAAO,IAAtB,GAA4B,CAACA,IAE/C8tB,GAAa3X,EAAAA,EAAAA,cACjB,WAAwB,IAAvBgV,EAAsB,uDAAP,GACd3U,EAAS2U,GACTyC,EAAQzC,EACT,GACD,CAACyC,EAASpX,IAGZ,OACE,gBAAKnY,UAAS,iBAAYA,GAAaO,MAAOA,EAA9C,SACG2sB,EAAOwC,QAAUxC,EAAOyC,OACvB,SAAC3C,GAAD,CACE9pB,MAAOA,EACPiV,SAAUsX,EACV5C,SAAUA,EACVnQ,MAAOA,EACPhc,SAAUA,EACV2a,UAAWA,KAGb,iCACE,SAACuR,GAAD,CACE1pB,MAAOA,EACPiV,SAAUsX,EACV5C,SAAUA,EACVnsB,SAAUA,KAEZ,SAACgsB,GAAD,CAAYhQ,MAAOA,QAK5B,EC5PKzT,GAAQE,EAAM+C,MAEP0jB,GAAY,WACvB,OAAkCxY,EAAAA,EAAAA,WAASiB,EAAAA,EAAAA,GAAQpP,KAAnD,eAAO4mB,EAAP,KAAkBC,EAAlB,KASA,OAPAxY,EAAAA,EAAAA,YAAU,WACR,IAAMyY,EAAe9mB,GAAMQ,EAAEiD,WAAU,WACrCojB,GAAazX,EAAAA,EAAAA,GAAQpP,IACtB,IACD,OAAO,kBAAM8mB,EAAarhB,aAAnB,CACR,KAGC,iCACE,6BADF,KACyB2J,EAAAA,EAAAA,GAAQwX,KAGpC,EClBYG,GAAiB,SAAC,GAAqC,IAAnC9qB,EAAkC,EAAlCA,MACzB+qB,GAAwC,OAAI/qB,GAAOgrB,SAAQ,SAACjjB,GAAD,OAC/DA,EAAKQ,SAAS3O,KAAI,SAAC0B,EAAGzB,GAAJ,MAAU,CAAC,GAAD,OAAIkO,EAAKpG,GAAT,YAAe9H,GAAKyB,EAA9B,GAD6C,IAIjE,OAA8B,IAA1ByvB,EAAetwB,QACV,4BAIP,8BACGswB,EAAenxB,KAAI,+BAAEqrB,EAAF,KAAK3pB,EAAL,YAClB,yBAAcA,GAAJ2pB,EADQ,KAKzB,ECjBM,8FAEegG,GAAtB,wDAcEtK,MAAQ,EAdV,KAeEuK,MAAQ,IAfV,kDAoBa,IApBb,iDAqBoB,IArBpB,iDAsBgB,IAtBhB,iDAuBS,WACL,IAAK,SAAD,QAAJ,CAGA,IAAMC,EAAMC,KAAKD,MACXE,EAAQF,GAAG,OAAG,EAAH,QAGjB,IAFA,SAAI,IAAJ,IAAmBA,GACnB,SAAI,IAAJ,KAAwBE,GACpB,SAAI,IAAJ,IAAuB,EAAKH,MAAO,CACrC,IAAK,IAAIrxB,EAAI,EAAGA,EAAI4P,KAAK+K,IAAI,EAAKmM,MAlCf,KAkCkC9mB,IACnD,EAAKiL,OAEP,EAAKwmB,eACL,SAAI,IAAJ,KAAwB,EAAKJ,KAC9B,CACDK,uBAAsB,SAAD,QAZpB,CAaF,GAvCH,qCACE,WACEptB,KAAK2G,OACL3G,KAAKmtB,aACN,GAJH,mBAgBE,WACE,OAAO,OAAAntB,KAAP,OACD,GAlBH,mBAyCE,YACE,OAAAA,KAAA,SAAgB,GAChB,OAAAA,KAAA,QAAmBitB,KAAKD,MAAQhtB,KAAK+sB,OACrC,OAAA/sB,KAAA,UACAA,KAAKhD,QACN,GA9CH,kBAgDE,YACE,OAAAgD,KAAA,SAAgB,EAChBA,KAAKhD,QACN,KAnDH,KCAO,IAAMqwB,GAAS,SAACpxB,GACrB,IAAMqxB,EDmHD,SAAkBC,GACvB,IAAMlI,GAAW3O,EAAAA,EAAAA,SAA2B,WAAQ,IAEpD,GAA4CC,EAAAA,EAAAA,UAC1C,kBAvDmB,SACrB4W,EACAlI,GAEA,IAAM/R,EAAgC,CACpCka,QAASD,EAAMC,QACfT,MAAOQ,EAAMR,MACbvK,MAAO+K,EAAM/K,OAGT2K,EAAcI,EAAMJ,YAAYM,KAAKF,GAsC3C,OArCAA,EAAMJ,YAAc,WAClBA,IACA9H,EAASrS,QAAQ,CAAEW,OAAQ,UAC5B,EAkCM,CAAEL,aAAAA,EAAcD,SAhCN,CACfhN,OADe,SACRQ,GACLA,EAAM2mB,QAAUD,EAAMC,QACtB3mB,EAAMkmB,MAAQQ,EAAMR,MACpBlmB,EAAM2b,MAAQ+K,EAAM/K,KACrB,EACDkL,SANe,SAMN7mB,EAAwB2b,GAC/B3b,EAAM2b,MAAQA,CACf,EACDmL,SATe,SASN9mB,EAAwBkmB,GAC/BlmB,EAAMkmB,MAAQA,CACf,GAqB8B/G,QAlBjB,CACd4H,MADc,WAEZL,EAAMK,OACP,EACD/sB,MAJc,WAKZ0sB,EAAM1sB,QACNwkB,EAASrS,QAAQ,CAAEW,OAAQ,UAC5B,EACDka,KARc,WASZN,EAAMM,OACNxI,EAASrS,QAAQ,CAAEW,OAAQ,UAC5B,EACDyL,MAZc,WAaZmO,EAAMnO,QACNiG,EAASrS,QAAQ,CAAEW,OAAQ,UAC5B,GAIJ,CAMSma,CAAeP,EAAOlI,EAA5B,GACA,CAACkI,EAAOlI,IAFF/R,EAAR,EAAQA,aAAcD,EAAtB,EAAsBA,SAAU2S,EAAhC,EAAgCA,QAKhC,EAA4B5S,GAAgBC,EAAUC,GAAtD,eAAOzM,EAAP,KAAcknB,EAAd,KAIA,OAFA1I,EAASrS,QAAU+a,EAEZ,CAAElnB,MAAAA,EAAOwe,SAAUA,EAASrS,QAASgT,QAAAA,EAC7C,CChIgBgI,CAAS/xB,EAAMqxB,QAC9B,OACE,sBAAUrwB,KAAK,QAAf,WACE,mBACEN,UAAU,SACVS,QAAS,kBAAMkwB,EAAOtH,QAAQ4H,OAArB,EACT,eAAc,eAHhB,UAKE,SAAC,KAAD,CAAM9wB,KAAK,iBAEb,mBACEH,UAAU,SACVS,QAAS,kBAAMkwB,EAAOtH,QAAQ5G,OAArB,EACT,eAAc,gBAHhB,UAKE,SAAC,KAAD,CAAMtiB,KAAK,kBAEb,mBACEH,UAAU,SACVS,QAAS,kBACPkwB,EAAOzmB,MAAM2mB,QAAUF,EAAOtH,QAAQ6H,OAASP,EAAOtH,QAAQnlB,OADvD,EAGT,eAAcysB,EAAOzmB,MAAM2mB,QAAU,eAAU,cALjD,UAOE,SAAC,KAAD,CAAM1wB,KAAMwwB,EAAOzmB,MAAM2mB,QAAU,QAAU,kBAE/C,mBACE7wB,UAAU,SACVG,KAAK,QACL+C,MAAOytB,EAAOzmB,MAAMkmB,MACpBjY,SAAU,SAACnW,GAAO,IAAD,IACf2uB,EAAOjI,SAAS,CACd1R,OAAQ,WACRC,QAASjU,OAAM,oBAAChB,EAAEkW,cAAH,aAAC,EAAUhV,aAAX,QAAoBytB,EAAOzmB,MAAMkmB,QAEnD,EACD1vB,SAAUiwB,EAAOzmB,MAAM2mB,QAVzB,SAYG,CACC,CAAC,GAAI,iBACL,CAAC,IAAK,gBACN,CAAC,IAAM,kBACP,CAAC,IAAM,iBACP/xB,KAAI,+BAAEsxB,EAAF,KAASzc,EAAT,YACJ,mBAAoBzQ,MAAOktB,EAA3B,SACGzc,GADUyc,EADT,OAMR,mBACEpwB,UAAU,SACVG,KAAK,QACL+C,MAAOytB,EAAOzmB,MAAM2b,MACpB1N,SAAU,SAACnW,GAAO,IAAD,IACf2uB,EAAOjI,SAAS,CACd1R,OAAQ,WACRC,QAASjU,OAAM,oBAAChB,EAAEkW,cAAH,aAAC,EAAUhV,aAAX,QAAoBytB,EAAOzmB,MAAM2b,QAEnD,EACDnlB,SAAUiwB,EAAOzmB,MAAM2mB,QAVzB,SAYG,CACC,CAAC,EAAG,kBACJ,CAAC,IAAK,OACN,CAAC,IAAM,QACP,CAAC,IAAM,SACP/xB,KAAI,+BAAE+mB,EAAF,KAASlS,EAAT,YACJ,mBAAoBzQ,MAAO2iB,EAA3B,SACGlS,GADUkS,EADT,MAMPvmB,EAAMuF,WAGZ,EC9DYa,GAAO,WAClB,MR6WK,WACL,IAAM2I,GAAK+N,EAAAA,EAAAA,YAAW0L,IACdvL,GAAcH,EAAAA,EAAAA,YAAWC,GAAAA,IAAzBE,UACFkM,GAAkCzO,EAAAA,EAAAA,UAAQ,kBAAMsX,YAAN,GAAoB,IAE9D5I,GAAW3O,EAAAA,EAAAA,SAA0B,WAAQ,IAEnD,GAA4CC,EAAAA,EAAAA,UAC1C,kBAAMwO,GAAcna,EAAIkO,EAAWkM,EAASC,EAA5C,GACA,CAACra,EAAIkO,EAAWkM,EAASC,IAFnB/R,EAAR,EAAQA,aAAcD,EAAtB,EAAsBA,SAAU2S,EAAhC,EAAgCA,QAKhC,EAA4B5S,GAAgBC,EAAUC,GAAtD,eAAOzM,EAAP,KAAcknB,EAAd,KAGA,OAFA1I,EAASrS,QAAU+a,EAEZ,CAAElnB,MAAAA,EAAOwe,SAAAA,EAAUW,QAAAA,EAC3B,CQ7XsCkI,GAA7BrnB,EAAR,EAAQA,MAAOmf,EAAf,EAAeA,QAASX,EAAxB,EAAwBA,SAExB,EAAsBxR,GAAoBhN,EAAMqf,MAAMC,KAAtD,eAAOA,EAAP,KAAYgI,EAAZ,KACA,EAAsBta,GAAoBhN,EAAMqf,MAAMvgB,KAAtD,eAAOA,EAAP,KAAYyoB,EAAZ,KACA,EAAsBva,GAAoBhN,EAAMqf,MAAME,KAAtD,eAAOA,EAAP,KAAYiI,EAAZ,KACA,EAAcxa,GAAoBhN,EAAMqf,MAAM9c,KAAvCA,GAAP,eAMMklB,GAAU5X,EAAAA,EAAAA,UAChB4X,EAAQtb,SAAR,uBAAkB,mGACVgT,EAAQgB,YAAY,CAAEb,IAAAA,EAAKxgB,IAAAA,EAAKygB,IAAAA,IADtB,2CAIlB,IAAMkH,GAAS5W,EAAAA,EAAAA,WACfzC,EAAAA,EAAAA,YAAU,WAoBR,OAnBAqZ,EAAOta,QAAU,sLACf,mHACQsb,EAAQtb,eADhB,aACQ,OAAAsb,GADR,uBAEQtI,EAAQ5G,QAFhB,2CADe,+EAMf,WACEiG,EAASrS,QAAQ,CAAEW,OAAQ,kBAC5B,GARc,2DAUf,mFACEqS,EAAQrf,OADV,2CAVe,0EAcf,WACE0e,EAASrS,QAAQ,CAAEW,OAAQ,kBAC5B,KAhBc,EAAG,CAA0BmZ,KAmBvC,WAAO,IAAD,EACX,UAAAQ,EAAOta,eAAP,SAAgB6a,MACjB,CACF,GAAE,CAACS,EAAStI,EAASX,IAEtB,OAAoCtR,EAAAA,EAAAA,WAAS,GAA7C,eAAO8T,EAAP,KAAmB0G,EAAnB,KACMC,EAAgB,yCAAG,yFACnB3G,GACF,UAAAyG,EAAQtb,eAAR,cAAAsb,GACAC,GAAc,KAEdvI,EAAQ6B,aACR0G,GAAc,IANO,2CAAH,qDAUhBE,GACJ,iCACE,0BACE,8BAEF,sBAAUxxB,KAAK,QAAf,WACE,mBACE4C,MAAOgH,EAAM6e,SAASJ,QACtBxQ,SAAU,YAA4B,IAAfjV,EAAc,EAAxBgV,OAAUhV,MACrBmmB,EAAQO,WAAW1mB,EACpB,EACD,cAAY,iBALd,SAOG+kB,GAAcnpB,KAAI,+BAAEizB,EAAF,KAAUpe,EAAV,YACjB,mBAAqBzQ,MAAO6uB,EAA5B,SACGpe,GADUoe,EADI,OAMrB,mBACE7uB,MAAOgH,EAAM6e,SAASF,SACtB1Q,SAAU,YAA4B,IAAfjV,EAAc,EAAxBgV,OAAUhV,MACrBmmB,EAAQQ,QAAQ3mB,EACjB,EACD,cAAY,cALd,SAOGgH,EAAM6e,SAASH,MAAM9pB,KAAI,SAAC4kB,GAAD,OACxB,mBAAmBxgB,MAAOwgB,EAA1B,SACGA,GADUA,EADW,YAS5BsO,GACJ,SAACtU,GAAD,CACE1d,UAAU,aACVP,QACE,iCACE,gBAAKwyB,SAAU,EAAf,kBACA,8BACG/nB,EAAM6e,SAASC,aACd,8BACE,kBACE9U,KAAK,WACL5T,KAAK,SACLwc,QAASoO,EACT/S,SAAU0Z,KAEZ,oCAIN,sBAAUvxB,KAAK,QAAf,WACE,mBACEG,QAASkxB,EAAQtb,QACjBuG,UAAW+U,EAAQtb,QACnB3V,SAAUwqB,EAHZ,UAKE,8BAEF,mBAAQzqB,QA5GD,WACf4oB,EAAQ0B,SAASvB,EAClB,EA0GoC9oB,SAAUwqB,EAArC,UACE,8BAEF,mBACE3qB,MAAO,CAAE2xB,WAAY,UACrBzxB,QAAS,WACP4oB,EAAQpgB,OACT,EACDvI,UAAWwJ,EAAMif,IAAI5jB,QACrB,cAAY,QANd,UAQE,SAACqqB,GAAD,OAEF,mBACEnvB,QAAS,WACP4oB,EAAQ5G,OACT,EACD/hB,UAAWwJ,EAAMif,IAAI5jB,QACrB,cAAY,cALd,UAOE,oCA9CV,UAoDE,SAAC8pB,GAAD,CACErvB,UAAU,SACVkD,MAAOsmB,EACPrR,SAAUqZ,EACVrwB,QAAS2E,EAAAA,OACT+mB,SAAU,MACVnsB,SAAUwqB,MAKViH,GACJ,UAACzU,GAAD,CAAO1d,UAAU,eAAeP,OAAQqyB,EAAxC,WACE,SAACzyB,EAAD,CACEK,IAAK,CACHP,KAAM+K,EAAMif,IAAId,OAChBhoB,OAAQ,SAAC3B,EAAKK,GACZsqB,EAAQhpB,OAAO3B,EAAKK,EACrB,GAEHc,KAAM,CAAEV,KAAM+K,EAAMif,IAAIb,SACxBvoB,SAAU,CAAEZ,KAAM+K,EAAMif,IAAIZ,iBAE9B,SAAC1K,GAAD,CAAWE,SAAS,qCAApB,UACE,2BACE,SAACiS,GAAD,CAAgB9qB,MAAOgF,EAAMif,IAAIjkB,eAKnCktB,GACJ,UAAC1U,GAAD,CAAO1d,UAAU,cAAjB,WACE,SAAC6d,GAAD,CACEE,SACE,iCACE,gBAAK/d,UAAU,SAAf,UACE,8BAEF,gBAAKA,UAAU,SAAf,SACG2wB,EAAOta,UAAW,SAACqa,GAAD,CAAQC,OAAQA,EAAOta,eAIhD9V,MAAO,CAAE+X,SAAU,YAXrB,UAaE,SAAC+W,GAAD,CACE9uB,MAAO,CACL+X,SAAU,WACVyC,OAAQ,0DAEV7X,MAAO8F,EACPmP,SAAUsZ,EACVtwB,QAAS+H,EAAInD,OACb8mB,SAAU,MACVxR,UAAWnR,EAAM6e,SAASrgB,UAG9B,SAACmV,GAAD,CACEE,SAAS,iCACTxd,MAAO,CAAE+X,SAAU,YAFrB,UAIE,SAAC+W,GAAD,CACE9uB,MAAO,CACL+X,SAAU,WACVyC,OAAQ,0DAEV7X,MAAOumB,EACPtR,SAAUuZ,EACVvwB,QAASyqB,GAAI7lB,OACb8mB,SAAU,WAGd,SAAChP,GAAD,CAAWE,SAAS,2BAAqBD,MAAM,EAA/C,UACE,gBAAKvd,MAAO,CAAE8xB,YAAa,mCAA3B,UACE,SAACxG,GAAD,CAAWpC,IAAKA,EAAKhd,IAAKA,WAMlC,OACE,iBAAKzM,UAAU,gBAAf,UACGgyB,EACAG,EACAC,IAGN,EAED,K,wJC1MO,IAAMvgB,EAGT,CACF+B,IAAK,CACH,EAAK,GACL,EAAK,GACL,KAAM,GACNlC,EAAG,GACHD,EAAG,GACH6gB,EAAG,GACH,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,MAAO,GACP,MAAO,GACP,MAAO,GACP,MAAO,GACP,MAAO,EACP,MAAO,GACP,MAAO,GACP,MAAO,EACP,MAAO,EACP,MAAO,EACP,MAAO,GACP,MAAO,IAETnrB,GAAI,CACF,GAAM,IACN,GAAM,IACN,GAAM,KACN,GAAM,IACN,GAAM,IACN,GAAM,KACN,GAAM,KACN,GAAM,KACN,GAAM,KACN,GAAM,MACN,GAAM,MACN,GAAM,MACN,GAAM,MACN,EAAM,MACN,GAAM,MACN,EAAM,MACN,EAAM,MACN,GAAM,QAOG0N,EAGT,CACFjB,IAAK,CACH,GAAI,EACJ0e,EAAG,EACH5gB,EAAG,EACH6gB,GAAI,EACJ9gB,EAAG,EACH+gB,GAAI,EACJC,GAAI,EACJC,IAAK,GAEPvrB,GAAI,CACF,EAAK,GACL,EAAK,IACL,EAAK,IACL,EAAK,KACL,EAAK,IACL,EAAK,KACL,EAAK,KACL,EAAK,QAcIwN,EAGT,CACFf,IAAK,CACH,GAAI,EACJ+e,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GAEP9rB,GAAI,CACF,EAAK,GACL,EAAK,MACL,EAAK,MACL,EAAK,MACL,EAAK,MACL,EAAK,MACL,EAAK,MACL,EAAK,QAII2K,EAAQ,CACnB,EAAM,WACN,EAAM,OACN,GAAM,WACNohB,SAAU,EACVC,KAAM,EACNC,SAAU,IAGL,SAASlhB,EAAI/K,EAAYqI,EAAWV,GACzC,IAAIukB,EAAI,EACR,OAAQlsB,GACN,KAAK,GACHksB,EAAI,EACJ,MACF,KAAK,GACHA,EAAI,EACJ,MACF,KAAK,GACHA,GAAK,EACL,MACF,KAAK,GACHA,EAAI7jB,EACJ,MACF,KAAK,GACH6jB,EAAIvkB,EACJ,MACF,KAAK,GACHukB,GAAK7jB,EACL,MACF,KAAK,GACH6jB,GAAKvkB,EACL,MACF,KAAK,GACHukB,GAAK7jB,EACL,MACF,KAAK,GACH6jB,GAAKvkB,EACL,MACF,KAAK,GACHukB,EAAI7jB,EAAI,EACR,MACF,KAAK,GACH6jB,EAAIvkB,EAAI,EACR,MACF,KAAK,GACHukB,EAAI7jB,EAAI,EACR,MACF,KAAK,GACH6jB,EAAIvkB,EAAI,EACR,MACF,KAAK,EACHukB,EAAI7jB,EAAIV,EACR,MACF,KAAK,GACHukB,EAAI7jB,EAAIV,EACR,MACF,KAAK,EACHukB,EAAIvkB,EAAIU,EACR,MACF,KAAK,EACH6jB,EAAI7jB,EAAIV,EACR,MACF,KAAK,GACHukB,EAAI7jB,EAAIV,EAOZ,MAAO,CAHPukB,GAAQ,MAEA,IAANA,EAAUvhB,EAAMqhB,KAAW,MAAJE,EAAavhB,EAAMshB,SAAWthB,EAAMohB,SAE9D,C,6HC3NM,SAAStf,EAAIzM,GAClB,OAAS,MAALA,EAMN,SAAsBA,GAEpB,IAAMmsB,GAAY,MADlBnsB,GAAU,SACmB,GACzBosB,GAAyB,KAALpsB,IAA4B,EAChDqsB,GAAuB,GAALrsB,IAA4B,EAC9CssB,EAAqB,EAALtsB,EAEpB,QAAyBxG,IAArBkR,EAAAA,GAAAA,GAAY0hB,GAEd,MAAO,OAGT,IAAI1c,EAAUhF,EAAAA,GAAAA,GAAY0hB,GACtBD,IACFzc,EAAUA,EAAQ6c,QAAQ,KAAM,MAGlC,IAAM9e,EAAQC,EAAAA,GAAAA,GAAU2e,GAClB9e,EAAOC,EAAAA,GAAAA,GAAQ8e,GAEjB3f,EAAsB+C,EACtBjC,IACFd,EAAW,UAAMc,EAAN,YAAed,IAExBY,IACFZ,EAAW,UAAMA,EAAN,YAAqBY,IAGlC,OAAOZ,CACR,CAlCU6f,CAAaxsB,GAoCxB,SAAsBA,GACpB,MAAO,KAAY,MAALA,GAAa2c,SAAS,GACrC,CApCQ8P,CAAazsB,EACrB,CAqCM,SAASA,EAAGyM,GACjB,MAAe,MAAXA,EAAI,GAOV,SAAaA,GACX,OAAO0Q,SAAS1Q,EAAI4Q,UAAU,GAAI,GACnC,CARUqP,CAAIjgB,GAUf,SAAaA,GAAsB,IAAD,QAC5B1O,EAAQ0O,EAAIpS,OAAJ,OACV,sEADU,gCAGZ,mBAAoC0D,QAApC,IAAoCA,OAApC,EAAoCA,EAAOuG,cAA3C,QAAqD,CAAC,EAA9C8I,EAAR,EAAQA,OAAQ9L,EAAhB,EAAgBA,UAAWiM,EAA3B,EAA2BA,KACrB8C,EAAO/O,EAAUuE,SAAS,MAAQuH,EAAOvH,SAAS,KAClD6mB,EAAMhf,EAAAA,GAAAA,IAAA,UAAYN,SAAZ,QAAqC,IAC3Ckf,EAAM9e,EAAAA,GAAAA,IAAA,UAAUD,SAAV,QAA+B,IACrC6e,EAAM1hB,EAAAA,GAAAA,IAAA,UAAcpJ,SAAd,QAA4C,IAExD,OAAO+M,EAAMgC,EAAM+b,EAAKM,EAAKJ,EAC9B,CAnBUF,CAAI3f,EAEd,CAmBM,SAAS4B,EACdf,EACAtN,GAGS,IAFToN,EAEQ,uDAFY,EACpBC,EACQ,uDADO,EAETsf,EAAI,MACJriB,EAAIgD,EAAM,KAAS,EACnBsf,EAAI5sB,GAAM,EACVuK,GAAI,OAAC6C,QAAD,IAACA,EAAAA,EAAU,IAAM,EACrByf,EAAC,OAAGxf,QAAH,IAAGA,EAAAA,EAAO,EACjB,OAAOsf,EAAIriB,EAAIsiB,EAAIriB,EAAIsiB,CACxB,C,gOC/FD,IAAMC,EAAM,CACV,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGK,SAASC,EAAMn1B,GAAoB,IAAD,EACvC,iBAAOk1B,EAAIl1B,UAAX,QAAiB,GAClB,CAEM,SAASJ,EAAKI,GACnB,OAAQA,GACN,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,OACT,KAAK,GACH,MAAO,OACT,KAAK,GACH,MAAO,OACT,KAAK,GACH,MAAO,OACT,KAAK,GACH,MAAO,OACT,KAAK,GACH,MAAO,OACT,KAAK,GACH,MAAO,OACT,QACE,MAAO,OAEZ,CAEM,SAASo1B,EAAInuB,EAAWouB,GAE7B,OAAW,MADH9P,SAASte,EAAE0tB,QAAQ,mBAAoB,IAAKU,EAErD,CAEM,SAASrxB,EAAMhE,GACpB,OAAOo1B,EAAIp1B,EAAG,GACf,CAEM,SAAS0D,EAAM1D,GACpB,OAAOo1B,EAAIp1B,EAAG,GACf,CAEM,SAAS8D,EAAK9D,GACnB,OAAOo1B,EAAIp1B,EAAG,EACf,CAEM,SAAS2c,EAAI3c,GAClB,IAAMs1B,EAAKH,GAAW,MAAJn1B,IAAe,IAC3Bu1B,EAAKJ,GAAW,KAAJn1B,IAAe,GAC3Bw1B,EAAKL,GAAW,IAAJn1B,IAAe,GAC3By1B,EAAKN,EAAU,GAAJn1B,GAEjB,MAAM,KAAN,OAAYs1B,GAAZ,OAAiBC,GAAjB,OAAsBC,GAAtB,OAA2BC,EAC5B,CAEM,SAAS5iB,EAAI7S,GAAoC,IAAzB01B,EAAwB,uDAAZ,GACnCJ,EAAK11B,GAAU,MAAJI,IAAe,IAC1Bu1B,EAAK31B,GAAU,KAAJI,IAAe,GAC1Bw1B,EAAK51B,GAAU,IAAJI,IAAe,GAC1By1B,EAAK71B,EAAS,GAAJI,GAGhB,MAAO,UAAGs1B,GAAH,OAAQC,GAAR,OAAaC,GAAb,OAAkBC,GAAKhQ,UAAU,GAAKiQ,EAC9C,CAEM,SAAS/tB,EAAI3H,GAElB,OAAU,SADVA,GAAQ,OAEC,SAED,MAAJA,EAEI,IAAN,OADAA,EAAU,GAAJA,EAAS,OAGX,GAAN,OAAUA,EACX,CAEM,SAAS21B,EAAI31B,GAElB,MAAM,GAAN,OADAA,GAAQ,MAET,CAEM,SAAS2R,EAAO5B,EAAWpE,GAGhC,IAAIvF,KAFJ2J,GAAQ,QACRpE,GAAQ,QAGR,OADAvF,GAAQ,KAET,C","sources":["components/pinout.tsx","languages/base.ts","languages/hdl.ts","languages/tst.ts","simulator/chip/clock.ts","simulator/chip/chip.tsx","simulator/chip/builtins/logic/and.ts","simulator/chip/builtins/logic/dmux.ts","simulator/chip/builtins/logic/mux.ts","simulator/chip/builtins/logic/nand.ts","simulator/chip/builtins/logic/not.ts","simulator/chip/builtins/logic/or.ts","simulator/chip/builtins/logic/xor.ts","simulator/chip/builtins/arithmetic/add_16.ts","components/chips/alu.tsx","simulator/chip/builtins/arithmetic/alu.tsx","simulator/chip/builtins/arithmetic/half_adder.ts","simulator/chip/builtins/arithmetic/full_adder.ts","simulator/chip/builtins/arithmetic/inc16.ts","components/chips/register.tsx","simulator/chip/builtins/sequential/bit.tsx","simulator/chip/builtins/sequential/dff.ts","languages/asm.ts","simulator/fs.ts","simulator/cpu/memory.ts","util/react.ts","components/pico/inline_edit.tsx","components/pico/virtual_scroll.tsx","components/chips/memory.tsx","simulator/chip/builtins/sequential/ram.tsx","components/shell/panel.tsx","components/chips/screen.tsx","components/chips/keyboard.tsx","simulator/cpu/cpu.ts","simulator/chip/builtins/computer/computer.tsx","simulator/chip/builtins/index.ts","simulator/chip/builder.ts","simulator/output.ts","simulator/tst.ts","util/storage.ts","pages/chip.store.ts","languages/cmp.ts","components/difftable.tsx","components/editor.tsx","components/clockface.tsx","components/chips/visualizations.tsx","simulator/timer.ts","components/runbar.tsx","pages/chip.tsx","simulator/cpu/alu.ts","util/asm.ts","util/twos.ts"],"sourcesContent":["import { plural, Trans } from \"@lingui/macro\";\nimport { Pin as ChipPin, Pins, Voltage } from \"../simulator/chip/chip\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range\";\n\nimport \"./pinout.scss\";\n\nexport interface ImmPin {\n  bits: [number, Voltage][];\n  pin: ChipPin;\n}\n\nexport function reducePin(pin: ChipPin) {\n  return {\n    pin,\n    bits: range(0, pin.width)\n      .map((i) => [i, pin.voltage(i)] as [number, Voltage])\n      .reverse(),\n  };\n}\n\nexport function reducePins(pins: Pins): ImmPin[] {\n  return [...pins.entries()].map(reducePin);\n}\n\nexport interface PinoutPins {\n  pins: ImmPin[];\n  toggle?: (pin: ChipPin, bit?: number) => void;\n}\n\nexport const FullPinout = (props: {\n  ins: PinoutPins;\n  outs: PinoutPins;\n  internal: PinoutPins;\n}) => {\n  const inBlock = (\n    <PinoutBlock\n      header={plural(props.ins.pins.length, {\n        one: \"Input pin\",\n        other: \"Input pins\",\n      })}\n      {...props.ins}\n    />\n  );\n  const outBlock = (\n    <PinoutBlock\n      header={plural(props.outs.pins.length, {\n        one: \"Output pin\",\n        other: \"Output pins\",\n      })}\n      {...props.outs}\n    />\n  );\n  const internalBlock = (\n    <PinoutBlock\n      header={plural(props.internal.pins.length, {\n        one: \"Internal pin\",\n        other: \"Internal pins\",\n      })}\n      {...props.internal}\n    />\n  );\n  return (\n    <table className=\"pinout\">\n      <tbody>\n        {inBlock}\n        {outBlock}\n        {internalBlock}\n      </tbody>\n    </table>\n  );\n};\n\nexport const PinoutBlock = (props: PinoutPins & { header: string }) => {\n  return (\n    <>\n      {props.pins.length > 0 && (\n        <tr>\n          <th colSpan={2}>{props.header}</th>\n        </tr>\n      )}\n      {[...props.pins].map((immPin) => (\n        <tr key={immPin.pin.name}>\n          <td>{immPin.pin.name}</td>\n          <td>\n            <Pin pin={immPin} toggle={props.toggle} />\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n\nexport const Pinout = ({\n  pins,\n  toggle,\n}: {\n  pins: ImmPin[];\n  toggle?: (pin: ChipPin, bit?: number) => void;\n}) => {\n  if (pins.length === 0) {\n    return <Trans>None</Trans>;\n  }\n  return (\n    <table className=\"pinout\">\n      <thead>\n        <tr>\n          <th>\n            <Trans>Name</Trans>\n          </th>\n          <th>\n            <Trans>Value</Trans>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {[...pins].map((immPin) => (\n          <tr key={immPin.pin.name}>\n            <td>{immPin.pin.name}</td>\n            <td>\n              <Pin pin={immPin} toggle={toggle} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst Pin = ({\n  pin,\n  toggle,\n}: {\n  pin: ImmPin;\n  toggle: ((pin: ChipPin, bit?: number) => void) | undefined;\n}) => {\n  return (\n    <fieldset role=\"group\" style={{ width: `${pin.bits.length}rem` }}>\n      {pin.bits.map(([i, v]) => (\n        <button\n          key={i}\n          onClick={() => toggle?.(pin.pin, i)}\n          disabled={toggle === undefined}\n          data-testid={`pin-${i}`}\n        >\n          {v}\n        </button>\n      ))}\n    </fieldset>\n  );\n};\n","import raw from \"raw.macro\";\nimport ohm from \"ohm-js\";\nimport { int10, int16, int2 } from \"../util/twos\";\nimport { t } from \"@lingui/macro\";\nimport { Err, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result\";\n\nexport const UNKNOWN_PARSE_ERROR = t`Unknown parse error`;\n\n// Reload .....\n\nconst baseGrammar = raw(\"./grammars/base.ohm\");\nexport const grammars = {\n  Base: ohm.grammar(baseGrammar),\n};\n\nexport const baseSemantics = grammars.Base.createSemantics();\n\nbaseSemantics.extendOperation(\"asIteration\", {\n  List(list, _) {\n    return list.asIteration();\n  },\n});\n\nbaseSemantics.addAttribute(\"value\", {\n  decNumber(_, digits): number {\n    return int10(digits.sourceString);\n  },\n  wholeDec(_, digits): number {\n    return int10(digits.sourceString);\n  },\n  binNumber(_, digits) {\n    return int2(digits.sourceString);\n  },\n  hexNumber(_, digits) {\n    return int16(digits.sourceString);\n  },\n  Number: (num) => {\n    return num.value;\n  },\n});\n\nbaseSemantics.addAttribute(\"name\", {\n  identifier(_, __): string {\n    return this.sourceString;\n  },\n  Name(_): string {\n    return this.child(0)?.name;\n  },\n});\n\nbaseSemantics.addAttribute(\"String\", {\n  String(_a, str, _b) {\n    return str.sourceString;\n  },\n});\n\nexport type ParseError = Error | { message: string; shortMessage: string };\n\nexport function makeParser<ResultType>(\n  grammar: ohm.Grammar,\n  semantics: ohm.Semantics,\n  property: (obj: ohm.Dict) => ResultType = ({ root }) => root\n): (source: string) => Result<ResultType, ParseError> {\n  return function parse(source) {\n    try {\n      const match = grammar.match(source);\n      if (match.succeeded()) {\n        const parsed = semantics(match);\n        const parse = property(parsed);\n        return Ok(parse);\n      } else {\n        return Err({\n          message: match.message ?? UNKNOWN_PARSE_ERROR,\n          shortMessage: match.shortMessage ?? UNKNOWN_PARSE_ERROR,\n        });\n      }\n    } catch (e) {\n      return Err(e as Error);\n    }\n  };\n}\n\nexport interface Span {\n  start: number;\n  end: number;\n}\n","/** Reads and parses HDL chip descriptions. */\nimport raw from \"raw.macro\";\nimport ohm from \"ohm-js\";\nimport { grammars, baseSemantics } from \"./base\";\nimport { makeParser } from \"./base\";\n\nexport interface PinIndex {\n  start?: number | undefined;\n  end?: number | undefined;\n}\n\nexport interface PinParts extends PinIndex {\n  pin: string;\n}\n\nexport interface PinDeclaration {\n  pin: string | string;\n  width: number;\n}\n\nexport interface Wire {\n  lhs: PinParts;\n  rhs: PinParts;\n}\n\nexport interface Part {\n  name: string;\n  wires: Wire[];\n}\n\nexport interface HdlParse {\n  name: string;\n  ins: PinDeclaration[];\n  outs: PinDeclaration[];\n  clocked: string[];\n  parts: \"BUILTIN\" | Part[];\n}\n\nconst hdlGrammar = raw(\"./grammars/hdl.ohm\");\nexport const grammar = ohm.grammar(hdlGrammar, grammars);\n\nexport const hdlSemantics = grammar.extendSemantics(baseSemantics);\n\nhdlSemantics.addAttribute<PinIndex>(\"SubBus\", {\n  SubBus(_a, startNode, endNode, _b) {\n    const start = startNode.value;\n    const end = endNode.child(0)?.child(1)?.value ?? start;\n    return { start, end };\n  },\n});\n\nhdlSemantics.addAttribute<PinParts>(\"WireSide\", {\n  WireSide({ name }, index) {\n    const { start, end } = (index.child(0)?.SubBus as PinIndex) ?? {\n      start: undefined,\n      end: undefined,\n    };\n    return { pin: name, start, end };\n  },\n});\n\nhdlSemantics.addAttribute<Wire>(\"Wire\", {\n  Wire(left, _, right) {\n    let rhs: PinParts = right.isTerminal()\n      ? { pin: right.sourceString }\n      : right.WireSide;\n    return { lhs: left.WireSide as PinParts, rhs };\n  },\n});\n\nhdlSemantics.addAttribute<Wire[]>(\"Wires\", {\n  Wires(list) {\n    return list.asIteration().children.map(({ Wire }: { Wire: Wire }) => Wire);\n  },\n});\n\nhdlSemantics.addAttribute<Part>(\"Part\", {\n  Part({ name }, _a, { Wires }, _b, _c) {\n    return { name: name as string, wires: Wires as Wire[] };\n  },\n});\n\nhdlSemantics.addAttribute<Part[] | \"BUILTIN\">(\"Parts\", {\n  Parts(_, parts) {\n    return parts.children.map((c) => c.Part);\n  },\n  BuiltinPart(_a, _b) {\n    return \"BUILTIN\";\n  },\n});\n\nhdlSemantics.addAttribute<\"BUILTIN\" | Part[]>(\"PartList\", {\n  PartList(list) {\n    return list.Parts;\n  },\n});\n\nhdlSemantics.addAttribute<string[]>(\"Clocked\", {\n  ClockedList(_a, clocked, _b) {\n    return (\n      clocked\n        .asIteration()\n        .children.map(\n          ({ sourceString }: { sourceString: string }) => sourceString\n        ) ?? []\n    );\n  },\n});\n\nhdlSemantics.addAttribute<PinDeclaration>(\"PinDecl\", {\n  PinDecl({ name }, width) {\n    return {\n      pin: name,\n      width: width.child(0)?.child(1)?.value ?? 1,\n    };\n  },\n});\n\nhdlSemantics.addAttribute<PinDeclaration[]>(\"PinList\", {\n  PinList(list) {\n    return list\n      .asIteration()\n      .children.map(({ PinDecl }: { PinDecl: PinDeclaration }) => PinDecl);\n  },\n});\n\nhdlSemantics.addAttribute<HdlParse>(\"Chip\", {\n  Chip(_a, { name }, _b, body, _c) {\n    return {\n      name,\n      ins: body.child(0).child(0)?.child(1)?.PinList ?? [],\n      outs: body.child(1).child(0)?.child(1)?.PinList ?? [],\n      parts: body.child(2).PartList ?? [],\n      clocked: body.child(3).child(0)?.Clocked,\n    };\n  },\n});\n\nhdlSemantics.addAttribute<HdlParse>(\"Root\", {\n  Root(root) {\n    return root.child(0)?.Chip;\n  },\n});\n\nexport const HDL = {\n  parser: grammar,\n  grammar: hdlGrammar,\n  semantics: hdlSemantics,\n  parse: makeParser<HdlParse>(grammar, hdlSemantics, (n) => n.Chip),\n};\n","/** Reads tst files to apply and perform test runs. */\n\nimport ohm from \"ohm-js\";\nimport raw from \"raw.macro\";\nimport { baseSemantics, grammars, makeParser, Span } from \"./base\";\n\nexport interface TstEchoOperation {\n  op: \"echo\";\n  message: string;\n}\n\nexport interface TstClearEchoOperation {\n  op: \"clear-echo\";\n}\n\nexport interface TstSetOperation {\n  op: \"set\";\n  id: string;\n  index?: number;\n  value: number;\n}\n\nexport interface TstEvalOperation {\n  op: \"eval\" | \"tick\" | \"tock\";\n}\n\nexport interface TstOutputOperation {\n  op: \"output\";\n}\n\nexport interface TstOutputSpec {\n  id: string;\n  builtin: boolean;\n  address: number;\n  style: \"D\" | \"X\" | \"B\" | \"S\";\n  width: number;\n  lpad: number;\n  rpad: number;\n}\n\nexport interface TstOutputListOperation {\n  op: \"output-list\";\n  spec: TstOutputSpec[];\n}\n\nexport interface TstLoadROMOperation {\n  op: \"load\";\n  file: string;\n}\n\nexport type TstOperation =\n  | TstEvalOperation\n  | TstEchoOperation\n  | TstClearEchoOperation\n  | TstOutputOperation\n  | TstSetOperation\n  | TstOutputListOperation\n  | TstLoadROMOperation;\n\nexport interface TstLineStatement {\n  ops: TstOperation[];\n  break?: true;\n  span: Span;\n}\n\nexport interface TstRepeat {\n  statements: TstLineStatement[];\n  count: number;\n}\n\nexport type TstStatement = TstLineStatement | TstRepeat;\n\nexport interface Tst {\n  lines: TstStatement[];\n}\n\nexport const tstGrammar = raw(\"./grammars/tst.ohm\");\nexport const grammar = ohm.grammar(tstGrammar, grammars);\nexport const tstSemantics = grammar.extendSemantics(baseSemantics);\n\ntstSemantics.extendAttribute<number>(\"value\", {\n  Index(_a, idx, _b) {\n    return idx?.child(0)?.value ?? -1;\n  },\n});\n\ntstSemantics.extendAttribute<string>(\"name\", {\n  FileName(name, _dot, ext) {\n    return `${name.name}.${ext.name}`;\n  },\n});\n\ntstSemantics.addAttribute<number>(\"index\", {\n  Index(_open, dec, _close) {\n    return dec.child(0)?.value ?? 0;\n  },\n});\n\ntstSemantics.addAttribute<TstOutputSpec>(\"format\", {\n  OutputFormat(\n    { name: id },\n    index,\n    _a,\n    { sourceString: style },\n    { value: lpad },\n    _b,\n    { value: width },\n    _c,\n    { value: rpad }\n  ) {\n    return {\n      id,\n      builtin: index?.child(0) !== undefined,\n      address: index?.child(0)?.value ?? -1,\n      style: style as TstOutputSpec[\"style\"],\n      width,\n      lpad,\n      rpad,\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstOperation>(\"operation\", {\n  TstEvalOperation(op) {\n    return { op: op.sourceString as TstEvalOperation[\"op\"] };\n  },\n  TstOutputOperation(_) {\n    return { op: \"output\" };\n  },\n  TstOutputListOperation(_, formats) {\n    return {\n      op: \"output-list\",\n      spec: formats.children.map((n) => n.format),\n    };\n  },\n  TstSetOperation(op, { name }, index, { value }) {\n    const setOp: TstSetOperation = {\n      op: \"set\",\n      id: name,\n      value,\n    };\n    const child = index.child(0)?.child(1)?.child(0);\n    if (child) {\n      setOp.index = child.value;\n    }\n    return setOp;\n  },\n  TstEchoOperation(op, str) {\n    return {\n      op: \"echo\",\n      message: str.String as string,\n    };\n  },\n  TstClearEchoOperation(op) {\n    return {\n      op: \"clear-echo\",\n    };\n  },\n  TstLoadROMOperation(_r, _l, { name }) {\n    return {\n      op: \"load\",\n      file: name,\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstStatement>(\"statement\", {\n  TstRepeat(op, { value: count }, _o, statements, _c) {\n    return {\n      statements: statements.children.map(({ statement }) => statement),\n      count,\n    };\n  },\n  TstStatement(list, end) {\n    const stmt: TstStatement = {\n      ops: list\n        .asIteration()\n        .children.map(\n          ({ operation }: { operation: TstOperation }) => operation\n        ),\n      span: {\n        start: this.source.startIdx,\n        end: this.source.endIdx,\n      },\n    };\n    if (end.sourceString === \"!\") {\n      stmt.break = true;\n    }\n    return stmt;\n  },\n});\n\ntstSemantics.addAttribute<Tst>(\"tst\", {\n  Tst(lines) {\n    return {\n      lines: lines.children.map((n) => n.statement),\n    };\n  },\n});\n\ntstSemantics.addAttribute<Tst>(\"root\", {\n  Root({ tst }) {\n    return tst;\n  },\n});\n\nexport const TST = {\n  grammar: tstGrammar,\n  semantics: tstSemantics,\n  parser: grammar,\n  parse: makeParser<Tst>(grammar, tstSemantics),\n};\n","import { BehaviorSubject, Observable, Subject } from \"rxjs\";\nimport { assert } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { HIGH, LOW, Voltage } from \"./chip\";\n\ninterface Tick {\n  readonly level: Voltage;\n  readonly ticks: number;\n}\n\nlet clock: Clock;\nexport class Clock {\n  private level: Voltage = LOW;\n  private ticks = 0;\n\n  static get() {\n    if (clock === undefined) {\n      clock = new Clock();\n    }\n    return clock;\n  }\n\n  private subject = new BehaviorSubject<Tick>({\n    level: this.level,\n    ticks: this.ticks,\n  });\n  readonly $: Observable<Tick> = this.subject;\n\n  readonly update = new Subject<void>();\n\n  private next() {\n    this.subject.next({\n      level: this.level,\n      ticks: this.ticks,\n    });\n    this.update.next();\n  }\n\n  private constructor() {}\n\n  reset() {\n    this.level = LOW;\n    this.ticks = 0;\n    this.next();\n  }\n\n  tick() {\n    assert(this.level === LOW, \"Can only tick up from LOW\");\n    this.level = HIGH;\n    this.next();\n  }\n\n  tock() {\n    assert(this.level === HIGH, \"Can only tock down from HIGH\");\n    this.level = LOW;\n    this.ticks += 1;\n    this.next();\n  }\n\n  toggle() {\n    this.level === HIGH ? this.tock() : this.tick();\n  }\n\n  eval() {\n    this.tick();\n    this.tock();\n  }\n\n  toString() {\n    return `${this.ticks}${this.level === HIGH ? \"+\" : \"\"}`;\n  }\n}\n","import { assert, assertExists } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range\";\nimport { ReactNode } from \"react\";\nimport { bin } from \"../../util/twos\";\nimport { Clock } from \"./clock\";\n\nexport const HIGH = 1;\nexport const LOW = 0;\nexport type Voltage = typeof HIGH | typeof LOW;\n\nexport interface Pin {\n  readonly name: string;\n  readonly width: number;\n  busVoltage: number;\n  pull(voltage: Voltage, bit?: number): void;\n  toggle(bit?: number): void;\n  voltage(bit?: number): Voltage;\n  connect(pin: Pin): void;\n}\n\nexport class Bus implements Pin {\n  state: Voltage[];\n  next: Pin[] = [];\n\n  constructor(readonly name: string, readonly width = 1) {\n    this.state = range(0, this.width).map(() => LOW);\n  }\n\n  ensureWidth(newWidth: number) {\n    assert(newWidth <= 16, `Cannot widen past 16 to ${newWidth} bits`);\n    if (this.width < newWidth) {\n      (this as { width: number }).width = newWidth;\n      this.state = [\n        ...this.state,\n        ...range(this.width, newWidth).map(() => LOW as Voltage),\n      ];\n    }\n  }\n\n  connect(next: Pin) {\n    this.next.push(next);\n    next.busVoltage = this.busVoltage;\n  }\n\n  pull(voltage: Voltage, bit = 0) {\n    assert(\n      bit >= 0 && bit < this.width,\n      `Bit out of bounds: ${this.name}@${bit}`\n    );\n    this.state[bit] = voltage;\n    this.next.forEach((n) => n.pull(voltage, bit));\n  }\n\n  voltage(bit = 0): Voltage {\n    assert(bit >= 0 && bit < this.width);\n    return this.state[bit];\n  }\n\n  set busVoltage(voltage: number) {\n    for (const i of range(0, this.width)) {\n      this.state[i] = ((voltage & (1 << i)) >> i) as Voltage;\n    }\n    this.next.forEach((n) => (n.busVoltage = this.busVoltage));\n  }\n\n  get busVoltage(): number {\n    return range(0, this.width).reduce((b, i) => b | (this.state[i] << i), 0);\n  }\n\n  toggle(bit = 0) {\n    const nextVoltage = this.voltage(bit) === LOW ? HIGH : LOW;\n    this.pull(nextVoltage, bit);\n  }\n}\n\nexport class InSubBus extends Bus {\n  constructor(\n    private bus: Pin,\n    private start: number,\n    override readonly width = 1\n  ) {\n    super(bus.name);\n    assert(\n      start >= 0 && start + width <= bus.width,\n      `Mismatched InSubBus dimensions on ${bus.name} (${width} + ${start} > ${bus.width})`\n    );\n    this.connect(bus);\n  }\n\n  override pull(voltage: Voltage, bit = 0) {\n    assert(bit >= 0 && bit < this.width);\n    this.bus.pull(voltage, this.start + bit);\n  }\n\n  override voltage(bit = 0): Voltage {\n    assert(bit >= 0 && bit < this.width);\n    return this.bus.voltage(this.start + bit);\n  }\n\n  override set busVoltage(voltage: number) {\n    const high = this.bus.busVoltage & ~mask(this.width + this.start);\n    const low = this.bus.busVoltage & mask(this.start);\n    const mid = (voltage & mask(this.width)) << this.start;\n    this.bus.busVoltage = high | mid | low;\n  }\n\n  override get busVoltage(): number {\n    return (this.bus.busVoltage >> this.start) & mask(this.width);\n  }\n\n  override connect(bus: Pin): void {\n    assert(\n      this.start + this.width <= bus.width,\n      `Mismatched InSubBus connection dimensions (From ${bus.name} to ${this.name})`\n    );\n    this.bus = bus;\n  }\n}\n\nexport class OutSubBus extends Bus {\n  constructor(\n    private bus: Pin,\n    private start: number,\n    override readonly width = 1\n  ) {\n    super(bus.name);\n    assert(start >= 0 && width <= bus.width, `Mismatched OutSubBus dimensions`);\n    this.connect(bus);\n  }\n\n  override set busVoltage(voltage: number) {\n    this.bus.busVoltage =\n      (voltage & mask(this.width + this.start)) >> this.start;\n  }\n\n  override get busVoltage(): number {\n    return this.bus.busVoltage & mask(this.width);\n  }\n\n  override connect(bus: Pin): void {\n    assert(\n      this.width <= bus.width,\n      `Mismatched OutSubBus connection dimensions`\n    );\n    this.bus = bus;\n  }\n}\n\nexport class ConstantBus extends Bus {\n  constructor(name: string, private readonly value: number) {\n    super(name, 16 /* TODO: get high bit index */);\n  }\n\n  pullHigh(_ = 0) {}\n  pullLow(_ = 0) {}\n  override voltage(_ = 0): Voltage {\n    return (this.busVoltage & 0x1) as Voltage;\n  }\n\n  override set busVoltage(voltage: number) {\n    // Noop\n  }\n  override get busVoltage(): number {\n    return this.value;\n  }\n}\n\nexport const TRUE_BUS = new ConstantBus(\"true\", 0xffff);\nexport const FALSE_BUS = new ConstantBus(\"false\", 0);\n\nexport function parsePinDecl(toPin: string): {\n  pin: string;\n  width: number;\n} {\n  const { pin, w } = toPin.match(/(?<pin>[a-zA-Z]+)(\\[(?<w>\\d+)\\])?/)\n    ?.groups as {\n    pin: string;\n    w?: string;\n  };\n  return {\n    pin,\n    width: w ? Number(w) : 1,\n  };\n}\n\nexport function parseToPin(toPin: string): {\n  pin: string;\n  start?: number;\n  end?: number;\n} {\n  const { pin, i, j } = toPin.match(\n    /(?<pin>[a-z]+)(\\[(?<i>\\d+)(\\.\\.(?<j>\\d+))?\\])?/\n  )?.groups as { pin: string; i?: string; j?: string };\n  return {\n    pin,\n    start: i ? Number(i) : undefined,\n    end: j ? Number(j) : undefined,\n  };\n}\n\nexport class Pins {\n  private readonly map = new Map<string, Pin>();\n\n  insert(pin: Pin) {\n    let { name } = pin;\n    assert(!this.map.has(name), `Pins already has ${name}!`);\n    this.map.set(name, pin);\n  }\n\n  emplace(name: string, minWidth?: number) {\n    if (this.has(name)) {\n      return this.get(name)!;\n    } else {\n      const pin = new Bus(name, minWidth);\n      this.insert(pin);\n      return pin;\n    }\n  }\n\n  has(pin: string): boolean {\n    return this.map.has(pin);\n  }\n\n  get(pin: string): Pin | undefined {\n    return this.map.get(pin);\n  }\n\n  entries(): Iterable<Pin> {\n    return this.map.values();\n  }\n\n  [Symbol.iterator]() {\n    return this.map[Symbol.iterator]();\n  }\n}\n\nlet id = 0;\nexport class Chip {\n  readonly id = id++;\n  ins = new Pins();\n  outs = new Pins();\n  pins = new Pins();\n  parts = new Set<Chip>();\n  clockedPins: Set<string>;\n\n  get clocked() {\n    if (this.clockedPins.size > 0) {\n      return true;\n    }\n    for (const part of this.parts) {\n      if (part.clocked) return true;\n    }\n    return false;\n  }\n\n  constructor(\n    ins: (string | { pin: string; width: number })[],\n    outs: (string | { pin: string; width: number })[],\n    public name?: string,\n    internals: (string | { pin: string; width: number })[] = [],\n    clocked: string[] = []\n  ) {\n    for (const inn of ins) {\n      const { pin, width = 1 } =\n        (inn as { pin: string }).pin !== undefined\n          ? (inn as { pin: string; width: number })\n          : parsePinDecl(inn as string);\n      this.ins.insert(new Bus(pin, width));\n    }\n\n    for (const out of outs) {\n      const { pin, width = 1 } =\n        (out as { pin: string }).pin !== undefined\n          ? (out as { pin: string; width: number })\n          : parsePinDecl(out as string);\n      this.outs.insert(new Bus(pin, width));\n    }\n\n    for (const internal of internals) {\n      const { pin, width = 1 } =\n        (internal as { pin: string }).pin !== undefined\n          ? (internal as { pin: string; width: number })\n          : parsePinDecl(internal as string);\n      this.pins.insert(new Bus(pin, width));\n    }\n\n    this.clockedPins = new Set(clocked);\n\n    Clock.get().$.subscribe(() => this.eval());\n  }\n\n  reset() {\n    for (const [_, pin] of this.ins) {\n      pin.busVoltage = 0;\n    }\n    this.eval();\n  }\n\n  in(pin = \"in\"): Pin {\n    assert(this.ins.has(pin), `No pin ${pin}`);\n    return this.ins.get(pin)!;\n  }\n\n  out(pin = \"out\"): Pin {\n    assert(this.outs.has(pin));\n    return this.outs.get(pin)!;\n  }\n\n  pin(name: string): Pin {\n    assert(this.pins.has(name));\n    return this.pins.get(name)!;\n  }\n\n  get(name: string, offset?: number): Pin | undefined {\n    if (this.ins.has(name)) {\n      return this.ins.get(name)!;\n    }\n    if (this.outs.has(name)) {\n      return this.outs.get(name)!;\n    }\n    if (this.pins.has(name)) {\n      return this.pins.get(name)!;\n    }\n    return this.getBuiltin(name, offset);\n  }\n\n  private getBuiltin(name: string, offset = 0): Pin | undefined {\n    if (BUILTIN_NAMES.includes(name)) {\n      for (const part of this.parts) {\n        const pin = part.get(name, offset);\n        if (pin) {\n          return pin;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  isOutPin(pin: string): boolean {\n    return this.outs.has(pin);\n  }\n\n  wire(part: Chip, connections: Connection[]) {\n    this.parts.add(part);\n    for (const { to, from } of connections) {\n      if (part.isOutPin(to.name)) {\n        this.wireOutPin(part, to, from);\n      } else {\n        this.wireInPin(part, to, from);\n      }\n    }\n  }\n\n  render(): ReactNode[] {\n    return [...this.parts]\n      .map((part) => part.render())\n      .filter((v) => v !== undefined);\n  }\n\n  private findPin(from: string, minWidth?: number): Pin {\n    if (from.toLowerCase() === \"true\" || from === \"1\") {\n      return TRUE_BUS;\n    }\n    if (from.toLowerCase() === \"false\" || from === \"0\") {\n      return FALSE_BUS;\n    }\n    if (this.ins.has(from)) {\n      return this.ins.get(from)!;\n    }\n    if (this.outs.has(from)) {\n      return this.outs.get(from)!;\n    }\n    return this.pins.emplace(from, minWidth);\n  }\n\n  private wireOutPin(part: Chip, to: PinSide, from: PinSide) {\n    let partPin = assertExists(\n      part.outs.get(to.name),\n      () => `Cannot wire to missing pin ${to.name}`\n    );\n    to.width ??= partPin.width;\n\n    let chipPin = this.findPin(from.name, from.width ?? to.width);\n    const isInternal = this.pins.has(chipPin.name);\n\n    from.width ??= chipPin.width;\n\n    if (chipPin instanceof ConstantBus) {\n      throw new Error(`Cannot wire to constant bus`);\n    }\n\n    // Widen internal pins\n    if (isInternal && chipPin instanceof Bus) {\n      chipPin.ensureWidth(from.start + from.width);\n    }\n\n    // Wrap the chipPin in an InBus when the chip side is dimensioned\n    if (from.start > 0 || from.width !== chipPin.width) {\n      chipPin = new InSubBus(chipPin, from.start, from.width);\n    }\n\n    // Wrap the chipPin in an OutBus when the part side is dimensioned\n    if (to.start > 0 || to.width !== chipPin.width) {\n      chipPin = new OutSubBus(chipPin, to.start, to.width);\n    }\n\n    partPin.connect(chipPin);\n  }\n\n  private wireInPin(part: Chip, to: PinSide, from: PinSide) {\n    let partPin = assertExists(\n      part.ins.get(to.name),\n      () => `Cannot wire to missing pin ${to.name}`\n    );\n    to.width ??= partPin.width;\n\n    const chipPin = this.findPin(from.name, from.width ?? to.width);\n\n    from.width ??= chipPin.width;\n\n    // Wrap the partPin in an InBus when the part side is dimensioned\n    if (to.start > 0 || to.width !== chipPin.width) {\n      partPin = new InSubBus(partPin, to.start, to.width);\n    }\n\n    // Wrap the partPin in an OutBus when the chip side is dimensioned\n    if (![\"true\", \"false\"].includes(chipPin.name)) {\n      if (from.start > 0 || from.width !== chipPin.width) {\n        partPin = new OutSubBus(partPin, from.start, from.width);\n      }\n    }\n    chipPin.connect(partPin);\n  }\n\n  eval() {\n    for (const chip of this.parts) {\n      // TODO topological sort\n      // eval chip input busses\n      chip.eval();\n      // eval output busses\n    }\n  }\n\n  tick() {\n    this.eval();\n  }\n\n  tock() {\n    this.eval();\n  }\n\n  remove() {\n    for (const part of this.parts) {\n      part.remove();\n    }\n  }\n\n  // For the ROM32K builtin to load from a file system\n  async load(fs: FileSystem, path: string) {\n    for (const part of this.parts) {\n      if (part.name === \"ROM32K\") {\n        await part.load(fs, path);\n      }\n    }\n  }\n}\n\nexport class Low extends Chip {\n  constructor() {\n    super([], []);\n    this.outs.insert(FALSE_BUS);\n  }\n}\n\nexport class High extends Chip {\n  constructor() {\n    super([], []);\n    this.outs.insert(TRUE_BUS);\n  }\n}\n\nexport class ClockedChip extends Chip {\n  override get clocked(): boolean {\n    return true;\n  }\n\n  #subscription = Clock.get().$.subscribe(({ level }) => {\n    if (level === LOW) {\n      this.tock();\n    } else {\n      this.tick();\n    }\n  });\n\n  override remove() {\n    this.#subscription.unsubscribe();\n    super.remove();\n  }\n}\n\nexport interface PinSide {\n  name: string;\n  start: number;\n  width?: number;\n}\n\nexport interface Connection {\n  // To is the part side\n  to: PinSide;\n  // From is the chip side\n  from: PinSide;\n}\n\nexport type Pinout = Record<string, string>;\nexport interface SerializedChip {\n  id: number;\n  name: string;\n  ins: Pinout;\n  outs: Pinout;\n  pins: Pinout;\n  children: SerializedChip[];\n}\n\nfunction mask(width: number) {\n  return Math.pow(2, width) - 1;\n}\n\nfunction setBus(busses: Pinout, pin: Pin) {\n  busses[pin.name] = bin(\n    (pin.busVoltage & mask(pin.width)) <<\n      (pin as unknown as { start: number }).start ?? 0\n  );\n  return busses;\n}\n\nexport function printChip(chip: Chip): SerializedChip {\n  return {\n    id: chip.id,\n    name: chip.name ?? chip.constructor.name,\n    ins: [...chip.ins.entries()].reduce(setBus, {} as Pinout),\n    outs: [...chip.outs.entries()].reduce(setBus, {} as Pinout),\n    pins: [...chip.pins.entries()].reduce(setBus, {} as Pinout),\n    children: [...chip.parts.values()].map(printChip),\n  };\n}\n\nexport const BUILTIN_NAMES = [\n  \"Register\",\n  \"ARegister\",\n  \"DRegister\",\n  \"PC\",\n  \"RAM8\",\n  \"RAM64\",\n  \"RAM512\",\n  \"RAM4K\",\n  \"RAM16K\",\n  \"ROM32K\",\n  \"Screen\",\n  \"Keyboard\",\n  \"Memory\",\n];\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function and(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 && b === 1 ? HIGH : LOW];\n}\n\nexport function and16(a: number, b: number): [number] {\n  return [a & b & 0xffff];\n}\n\nexport class And extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [n] = and(a, b);\n    this.out().pull(n);\n  }\n}\n\nexport class And16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [n] = and16(a, b);\n    this.out().busVoltage = n;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function dmux(inn: Voltage, sel: Voltage): [Voltage, Voltage] {\n  const a = sel === LOW && inn === HIGH ? HIGH : LOW;\n  const b = sel === HIGH && inn === HIGH ? HIGH : LOW;\n  return [a, b];\n}\n\nexport function dmux4way(\n  inn: Voltage,\n  sel: number\n): [Voltage, Voltage, Voltage, Voltage] {\n  const a = sel === 0b00 && inn === HIGH ? HIGH : LOW;\n  const b = sel === 0b01 && inn === HIGH ? HIGH : LOW;\n  const c = sel === 0b10 && inn === HIGH ? HIGH : LOW;\n  const d = sel === 0b11 && inn === HIGH ? HIGH : LOW;\n  return [a, b, c, d];\n}\n\nexport function dmux8way(\n  inn: Voltage,\n  sel: number\n): [Voltage, Voltage, Voltage, Voltage, Voltage, Voltage, Voltage, Voltage] {\n  const a = sel === 0b000 && inn === HIGH ? HIGH : LOW;\n  const b = sel === 0b001 && inn === HIGH ? HIGH : LOW;\n  const c = sel === 0b010 && inn === HIGH ? HIGH : LOW;\n  const d = sel === 0b011 && inn === HIGH ? HIGH : LOW;\n  const e = sel === 0b100 && inn === HIGH ? HIGH : LOW;\n  const f = sel === 0b101 && inn === HIGH ? HIGH : LOW;\n  const g = sel === 0b110 && inn === HIGH ? HIGH : LOW;\n  const h = sel === 0b111 && inn === HIGH ? HIGH : LOW;\n  return [a, b, c, d, e, f, g, h];\n}\n\nexport class DMux extends Chip {\n  constructor() {\n    super([\"in\", \"sel\"], [\"a\", \"b\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").voltage();\n\n    const [a, b] = dmux(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n  }\n}\n\nexport class DMux4Way extends Chip {\n  constructor() {\n    super([\"in\", \"sel[2]\"], [\"a\", \"b\", \"c\", \"d\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").busVoltage;\n\n    const [a, b, c, d] = dmux4way(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n    this.out(\"c\").pull(c);\n    this.out(\"d\").pull(d);\n  }\n}\n\nexport class DMux8Way extends Chip {\n  constructor() {\n    super([\"in\", \"sel[3]\"], [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").busVoltage;\n\n    const [a, b, c, d, e, f, g, h] = dmux8way(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n    this.out(\"c\").pull(c);\n    this.out(\"d\").pull(d);\n    this.out(\"e\").pull(e);\n    this.out(\"f\").pull(f);\n    this.out(\"g\").pull(g);\n    this.out(\"h\").pull(h);\n  }\n}\n","import { Chip, LOW, Voltage } from \"../../chip\";\n\nexport function mux(a: Voltage, b: Voltage, sel: Voltage): [Voltage] {\n  return [sel === LOW ? a : b];\n}\n\nexport function mux16(a: number, b: number, sel: Voltage): [number] {\n  return [sel === LOW ? a : b];\n}\n\nexport function mux16_4(\n  a: number,\n  b: number,\n  c: number,\n  d: number,\n  sel: number\n): [number] {\n  const s2 = (sel & 0b01) as Voltage;\n  return (sel & 0b10) === 0b00 ? mux16(a, b, s2) : mux16(c, d, s2);\n}\n\nexport function mux16_8(\n  a: number,\n  b: number,\n  c: number,\n  d: number,\n  e: number,\n  f: number,\n  g: number,\n  h: number,\n  sel: number\n): [number] {\n  const s2 = (sel & 0b11) as Voltage;\n  return (sel & 0b100) === 0b000\n    ? mux16_4(a, b, c, d, s2)\n    : mux16_4(e, f, g, h, s2);\n}\n\nexport class Mux extends Chip {\n  constructor() {\n    super([\"a\", \"b\", \"sel\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const sel = this.in(\"sel\").voltage();\n\n    const [set] = mux(a, b, sel);\n    this.out().pull(set);\n  }\n}\n\nexport class Mux16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\", \"sel\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const sel = this.in(\"sel\").voltage();\n    const [out] = mux16(a, b, sel);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Mux4Way16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\", \"c[16]\", \"d[16]\", \"sel[2]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const c = this.in(\"c\").busVoltage;\n    const d = this.in(\"d\").busVoltage;\n    const sel = this.in(\"sel\").busVoltage;\n    const [out] = mux16_4(a, b, c, d, sel);\n\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Mux8Way16 extends Chip {\n  constructor() {\n    super(\n      [\n        \"a[16]\",\n        \"b[16]\",\n        \"c[16]\",\n        \"d[16]\",\n        \"e[16]\",\n        \"f[16]\",\n        \"g[16]\",\n        \"h[16]\",\n        \"sel[3]\",\n      ],\n      [\"out[16]\"]\n    );\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const c = this.in(\"c\").busVoltage;\n    const d = this.in(\"d\").busVoltage;\n    const e = this.in(\"e\").busVoltage;\n    const f = this.in(\"f\").busVoltage;\n    const g = this.in(\"g\").busVoltage;\n    const h = this.in(\"h\").busVoltage;\n    const sel = this.in(\"sel\").busVoltage;\n    const [out] = mux16_8(a, b, c, d, e, f, g, h, sel);\n\n    this.out().busVoltage = out;\n  }\n}\n","import { nand16 } from \"../../../../util/twos\";\nimport { HIGH, LOW, Chip, Voltage } from \"../../chip\";\n\nexport function nand(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 && b === 1 ? LOW : HIGH];\n}\n\nexport class Nand extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = nand(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Nand16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    this.out().busVoltage = nand16(a, b);\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function not(inn: Voltage): [Voltage] {\n  return [inn === LOW ? HIGH : LOW];\n}\n\nexport function not16(inn: number): [number] {\n  return [~inn & 0xffff];\n}\n\nexport class Not extends Chip {\n  constructor() {\n    super([\"in\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"in\").voltage();\n    const [out] = not(a);\n    this.out().pull(out);\n  }\n}\n\nexport class Not16 extends Chip {\n  constructor() {\n    super([\"in[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const [n] = not16(this.in().busVoltage);\n    this.out().busVoltage = n;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function or(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 || b === 1 ? HIGH : LOW];\n}\n\nexport function or16(a: number, b: number): [number] {\n  return [(a | b) & 0xffff];\n}\n\nexport function or8way(a: number): [Voltage] {\n  return [(a & 0xff) === 0 ? LOW : HIGH];\n}\n\nexport class Or extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = or(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Or16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = or16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Or8way extends Chip {\n  constructor() {\n    super([\"in[8]\"], [\"out\"], \"Or8way\");\n  }\n\n  override eval() {\n    const inn = this.in().busVoltage;\n    const [out] = or8way(inn);\n    this.out().pull(out);\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function xor(a: Voltage, b: Voltage): [Voltage] {\n  return [(a === HIGH && b === LOW) || (a === LOW && b === HIGH) ? HIGH : LOW];\n}\n\nexport function xor16(a: number, b: number): [number] {\n  return [(a ^ b) & 0xffff];\n}\n\nexport class Xor extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = xor(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Xor16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = xor16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n","import { Chip } from \"../../chip\";\n\nexport function add16(a: number, b: number): [number] {\n  return [(a + b) & 0xffff];\n}\n\nexport class Add16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"], \"Add16\");\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = add16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n","import { COMMANDS, COMMANDS_OP, Flags } from \"../../simulator/cpu/alu\";\nimport { bin } from \"../../util/twos\";\n\nexport const ALUComponent = ({\n  A,\n  op,\n  D,\n  out,\n  flag,\n}: {\n  A: number;\n  op: COMMANDS_OP;\n  D: number;\n  out: number;\n  flag: keyof typeof Flags;\n}) => (\n  <div>\n    <span>ALU</span>\n    <dl>\n      <dt>A</dt> <dd>{bin(A)}</dd>\n      <dt>op</dt> <dd>{COMMANDS.op[op] ?? \"(??)\"}</dd>\n      <dt>D</dt> <dd>{bin(D)}</dd>\n      <dt>=</dt> <dd>{bin(out)}</dd>\n      <dd>{Flags[flag as keyof typeof Flags]}</dd>\n    </dl>\n  </div>\n);\n","import { ALUComponent } from \"../../../../components/chips/alu\";\nimport { alu, COMMANDS_OP, Flags } from \"../../../cpu/alu\";\nimport { Chip, HIGH, LOW } from \"../../chip\";\n\nexport class ALUNoStat extends Chip {\n  constructor() {\n    super(\n      [\n        \"x[16]\",\n        \"y[16]\", // 16-bit inputs\n        \"zx\", // zero the x input?\n        \"nx\", // negate the x input?\n        \"zy\", // zero the y input?\n        \"ny\", // negate the y input?\n        \"f\", // compute out = x + y (if 1) or x & y (if 0)\n        \"no\", // negate the out output?\n      ],\n      [\n        \"out[16]\", // 16-bit output\n      ],\n      \"ALU\"\n    );\n  }\n\n  override eval() {\n    const x = this.in(\"x\").busVoltage;\n    const y = this.in(\"y\").busVoltage;\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    const [out] = alu(op, x, y);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class ALU extends Chip {\n  constructor() {\n    super(\n      [\n        \"x[16]\",\n        \"y[16]\", // 16-bit inputs\n        \"zx\", // zero the x input?\n        \"nx\", // negate the x input?\n        \"zy\", // zero the y input?\n        \"ny\", // negate the y input?\n        \"f\", // compute out = x + y (if 1) or x & y (if 0)\n        \"no\", // negate the out output?\n      ],\n      [\n        \"out[16]\", // 16-bit output\n        \"zr\", // 1 if (out === 0), 0 otherwise\n        \"ng\", // 1 if (out < 0),  0 otherwise\n      ],\n      \"ALU\"\n    );\n  }\n\n  override render() {\n    return [\n      <ALUComponent\n        A={this.in(\"x\").busVoltage}\n        op={this.op()}\n        D={this.in(\"y\").busVoltage}\n        out={this.out().busVoltage}\n        flag={\n          (this.out(\"zr\").voltage() === HIGH\n            ? Flags.Zero\n            : this.out(\"ng\").voltage() === HIGH\n            ? Flags.Negative\n            : Flags.Positive) as keyof typeof Flags\n        }\n      />,\n    ];\n  }\n\n  override eval() {\n    const x = this.in(\"x\").busVoltage;\n    const y = this.in(\"y\").busVoltage;\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    const [out, flags] = alu(op, x, y);\n    const ng = flags === Flags.Negative ? HIGH : LOW;\n    const zr = flags === Flags.Zero ? HIGH : LOW;\n    this.out(\"out\").busVoltage = out;\n    this.out(\"ng\").pull(ng);\n    this.out(\"zr\").pull(zr);\n  }\n\n  op(): COMMANDS_OP {\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    return op as COMMANDS_OP;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function halfAdder(a: Voltage, b: Voltage): [Voltage, Voltage] {\n  const sum = (a === 1 && b === 0) || (a === 0 && b === 1) ? HIGH : LOW;\n  const car = a === 1 && b === 1 ? HIGH : LOW;\n\n  return [sum, car];\n}\n\nexport class HalfAdder extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"sum\", \"carry\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [sum, carry] = halfAdder(a, b);\n    this.out(\"sum\").pull(sum);\n    this.out(\"carry\").pull(carry);\n  }\n}\n","import { Chip, Voltage } from \"../../chip\";\nimport { or } from \"../logic/or\";\nimport { halfAdder } from \"./half_adder\";\n\nexport function fullAdder(\n  a: Voltage,\n  b: Voltage,\n  c: Voltage\n): [Voltage, Voltage] {\n  const [s, ca] = halfAdder(a, b);\n  const [sum, cb] = halfAdder(s, c);\n  const [carry] = or(ca, cb);\n\n  return [sum, carry];\n}\n\nexport class FullAdder extends Chip {\n  constructor() {\n    super([\"a\", \"b\", \"c\"], [\"sum\", \"carry\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const c = this.in(\"c\").voltage();\n    const [sum, carry] = fullAdder(a, b, c);\n    this.out(\"sum\").pull(sum);\n    this.out(\"carry\").pull(carry);\n  }\n}\n","import { Chip } from \"../../chip\";\nimport { add16 } from \"./add_16\";\n\nexport function inc16(n: number): [number] {\n  return add16(n, 1);\n}\n\nexport class Inc16 extends Chip {\n  constructor() {\n    super([\"in[16]\"], [\"out[16]\"], \"Inc16\");\n  }\n\n  override eval() {\n    const a = this.in().busVoltage;\n    const [out] = inc16(a);\n    this.out().busVoltage = out;\n  }\n}\n","import { dec } from \"../../util/twos\";\n\nexport const RegisterComponent = ({\n  name,\n  bits,\n}: {\n  name: string;\n  bits: number;\n}) => (\n  <div>\n    {name}: {dec(bits)}\n  </div>\n);\n","import { RegisterComponent } from \"../../../../components/chips/register\";\nimport { ClockedChip, HIGH, LOW, Pin, Voltage } from \"../../chip\";\n\nexport class Bit extends ClockedChip {\n  bit: Voltage = LOW;\n\n  constructor(name?: string) {\n    super([\"in\", \"load\"], [\"out\"], name);\n  }\n\n  override tick() {\n    if (this.in(\"load\").voltage() === HIGH) {\n      this.bit = this.in().voltage();\n    }\n  }\n\n  override tock() {\n    this.out().pull(this.bit ?? 0);\n  }\n}\n\nexport class Register extends ClockedChip {\n  bits: number = 0x00;\n\n  constructor(name?: string) {\n    super([\"in[16]\", \"load\"], [\"out[16]\"], name);\n  }\n\n  override tick() {\n    if (this.in(\"load\").voltage() === HIGH) {\n      this.bits = this.in().busVoltage & 0xffff;\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.bits & 0xffff;\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    return name === this.name ? this.out() : super.get(name, offset);\n  }\n}\n\nexport class VRegister extends Register {\n  override render() {\n    return [\n      <RegisterComponent\n        name={this.name ?? `Chip ${this.id}`}\n        bits={this.bits}\n      />,\n    ];\n  }\n}\n\nexport class PC extends ClockedChip {\n  bits: number = 0x00;\n\n  constructor(name?: string) {\n    super([\"in[16]\", \"load\", \"inc\", \"reset\"], [\"out[16]\"], name);\n  }\n\n  override render() {\n    return [<RegisterComponent name=\"PC\" bits={this.bits} />];\n  }\n\n  override tick() {\n    if (this.in(\"reset\").voltage() === HIGH) {\n      this.bits = 0;\n    } else if (this.in(\"load\").voltage() === HIGH) {\n      this.bits = this.in().busVoltage & 0xffff;\n    } else if (this.in(\"inc\").voltage() === HIGH) {\n      this.bits += 1;\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.bits & 0xffff;\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    return name === this.name ? this.out() : super.get(name, offset);\n  }\n}\n","import { ClockedChip } from \"../../chip\";\n\nexport class DFF extends ClockedChip {\n  constructor(name?: string) {\n    super([\"in\"], [\"out\"], name, [\"t\"]);\n  }\n\n  override tick() {\n    // Read in into t\n    let t = this.in().voltage();\n    this.pin(\"t\").pull(t);\n  }\n\n  override tock() {\n    // write t into out\n    let t = this.pin(\"t\").voltage();\n    this.out().pull(t);\n  }\n}\n","import { assertExists } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport ohm from \"ohm-js\";\nimport raw from \"raw.macro\";\nimport {\n  ASSIGN,\n  ASSIGN_ASM,\n  ASSIGN_OP,\n  COMMANDS,\n  COMMANDS_ASM,\n  COMMANDS_OP,\n  JUMP,\n  JUMP_ASM,\n  JUMP_OP,\n} from \"../simulator/cpu/alu\";\nimport { KEYBOARD, SCREEN } from \"../simulator/cpu/memory\";\nimport { makeC } from \"../util/asm\";\nimport { grammars, makeParser, baseSemantics } from \"./base\";\n\nexport const asmGrammar = raw(\"./grammars/asm.ohm\");\nexport const grammar = ohm.grammar(asmGrammar, grammars);\nexport const asmSemantics = grammar.extendSemantics(baseSemantics);\n\n// reload ...\n\nexport interface Asm {\n  instructions: AsmInstruction[];\n}\n\nexport type AsmInstruction =\n  | AsmAInstruction\n  | AsmCInstruction\n  | AsmLabelInstruction;\n\nexport type AsmAInstruction = AsmALabelInstruction | AsmAValueInstruction;\nexport interface AsmALabelInstruction {\n  type: \"A\";\n  label: string;\n}\n\nexport interface AsmAValueInstruction {\n  type: \"A\";\n  value: number;\n}\n\nfunction isALabelInstruction(\n  inst: AsmAInstruction\n): inst is AsmALabelInstruction {\n  return (inst as AsmALabelInstruction).label !== undefined;\n}\n\nexport interface AsmCInstruction {\n  type: \"C\";\n  op: COMMANDS_OP;\n  isM: boolean;\n  store?: ASSIGN_OP;\n  jump?: JUMP_OP;\n}\n\nexport interface AsmLabelInstruction {\n  type: \"L\";\n  label: string;\n}\n\nasmSemantics.addAttribute<Asm>(\"asm\", {\n  Root(asm) {\n    return {\n      instructions: asm\n        .child(0)\n        .children.map(({ instruction }) => instruction as AsmInstruction),\n    };\n  },\n});\n\nasmSemantics.addAttribute<AsmInstruction>(\"instruction\", {\n  AInstruction(_at, val): AsmAInstruction {\n    try {\n      return {\n        type: \"A\",\n        value: val.value,\n      };\n    } catch (e) {}\n    try {\n      return {\n        type: \"A\",\n        label: val.name,\n      };\n    } catch (e) {}\n\n    throw new Error(`AsmAInstruction must have either a name or a value`);\n  },\n  CInstruction(assignN, opN, jmpN): AsmCInstruction {\n    const assign = assignN.child(0)?.child(0)?.sourceString as ASSIGN_ASM;\n    const op = opN.sourceString as COMMANDS_ASM;\n    const jmp = jmpN.child(0)?.child(1)?.sourceString as JUMP_ASM;\n    const isM =\n      assignN.sourceString.includes(\"M\") || opN.sourceString.includes(\"M\");\n    const inst: AsmCInstruction = {\n      type: \"C\",\n      op: COMMANDS.asm[op],\n      isM,\n    };\n    if (jmp) inst.jump = JUMP.asm[jmp];\n    if (assign) inst.store = ASSIGN.asm[assign];\n    return inst;\n  },\n  Label(_o, { name }, _c): AsmLabelInstruction {\n    return {\n      type: \"L\",\n      label: name,\n    };\n  },\n});\n\nexport function fillLabel(asm: Asm) {\n  const symbols = new Map<string, number>([\n    [\"R0\", 0],\n    [\"R1\", 1],\n    [\"R2\", 2],\n    [\"R3\", 3],\n    [\"R4\", 4],\n    [\"R5\", 5],\n    [\"R6\", 6],\n    [\"R7\", 7],\n    [\"R8\", 8],\n    [\"R9\", 9],\n    [\"R10\", 10],\n    [\"R11\", 11],\n    [\"R12\", 12],\n    [\"R13\", 13],\n    [\"R14\", 14],\n    [\"R15\", 15],\n    [\"SP\", 0],\n    [\"LCL\", 1],\n    [\"ARG\", 2],\n    [\"THIS\", 3],\n    [\"THAT\", 4],\n    [\"SCREEN\", SCREEN],\n    [\"KBD\", KEYBOARD],\n  ]);\n\n  function transmuteAInstruction(instruction: AsmALabelInstruction) {\n    const value = assertExists(symbols.get(instruction.label));\n    (instruction as unknown as AsmAValueInstruction).value = value;\n    delete (instruction as unknown as { label: undefined }).label;\n  }\n\n  let unfilled: AsmALabelInstruction[] = [];\n  let line = 0;\n  for (const instruction of asm.instructions) {\n    if (instruction.type === \"L\") {\n      if (symbols.has(instruction.label)) {\n        throw new Error(`ASM Duplicate label ${instruction.label}`);\n      } else {\n        symbols.set(instruction.label, line);\n      }\n      continue;\n    }\n\n    line += 1;\n\n    if (instruction.type === \"A\") {\n      if (isALabelInstruction(instruction)) {\n        unfilled.push(instruction);\n      }\n    }\n  }\n\n  unfilled.forEach(transmuteAInstruction);\n}\n\nexport function emit(asm: Asm): number[] {\n  return asm.instructions\n    .map((inst) => {\n      if (inst.type === \"A\") {\n        if (isALabelInstruction(inst)) {\n          throw new Error(`ASM Emitting unfilled A instruction`);\n        }\n        return inst.value;\n      }\n      if (inst.type === \"C\") {\n        return makeC(inst.isM, inst.op, inst.store, inst.jump);\n      }\n      return undefined;\n    })\n    .filter((op): op is number => op !== undefined);\n}\n\nexport const ASM = {\n  grammar: asmGrammar,\n  semantics: asmSemantics,\n  parser: grammar,\n  parse: makeParser<Asm>(grammar, asmSemantics),\n  passes: {\n    fillLabel,\n    emit,\n  },\n};\n","import { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { ASM } from \"../languages/asm\";\nimport { int2 } from \"../util/twos\";\n\nexport async function load(fs: FileSystem, path: string): Promise<number[]> {\n  if (path.endsWith(\".hack\")) {\n    return loadHack(fs, path);\n  }\n\n  if (path.endsWith(\".asm\")) {\n    return loadAsm(fs, path);\n  }\n\n  throw new Error(`Cannot load file without hack or asm extension ${path}`);\n}\n\nexport async function loadAsm(fs: FileSystem, path: string): Promise<number[]> {\n  const source = await fs.readFile(path);\n  const parsed = ASM.parse(source);\n  if (isErr(parsed)) {\n    throw Err(parsed);\n  }\n\n  const asm = Ok(parsed);\n  ASM.passes.fillLabel(asm);\n  return ASM.passes.emit(asm);\n}\n\nexport async function loadHack(\n  fs: FileSystem,\n  path: string\n): Promise<number[]> {\n  return (await fs.readFile(path))\n    .split(\"\\n\")\n    .filter((line) => line.trim() !== \"\")\n    .map(int2);\n}\n","import { assert } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { op } from \"../../util/asm\";\nimport { int10, int16, int2 } from \"../../util/twos\";\nimport { load } from \"../fs\";\n\nexport const FORMATS = [\"bin\", \"dec\", \"hex\", \"asm\"];\nexport type Format = typeof FORMATS[number];\n\nexport const SCREEN = 0x4000;\nexport const SCREEN_ROWS = 512;\nexport const SCREEN_COLS = 256;\nexport const KEYBOARD = 0x6000;\n\nexport class Memory {\n  #memory: Int16Array;\n\n  get size(): number {\n    return this.#memory.length;\n  }\n\n  constructor(memory: ArrayBuffer | number) {\n    if (typeof memory === \"number\") {\n      this.#memory = new Int16Array(memory);\n    } else {\n      this.#memory = new Int16Array(memory);\n    }\n  }\n\n  get(index: number): number {\n    if (index < 0 || index >= this.size) {\n      return 0xffff;\n    }\n    return this.#memory[index] ?? 0;\n  }\n\n  set(index: number, value: number): void {\n    if (index >= 0 && index < this.size) {\n      this.#memory[index] = value & 0xffff;\n    }\n  }\n\n  update(cell: number, value: string, format: Format) {\n    let current: number;\n    switch (format) {\n      case \"asm\":\n        current = op(value);\n        break;\n      case \"bin\":\n        current = int2(value);\n        break;\n      case \"hex\":\n        current = int16(value);\n        break;\n      case \"dec\":\n      default:\n        current = int10(value);\n        break;\n    }\n\n    if (isFinite(current) && current <= 0xffff) {\n      this.set(cell, current);\n    }\n  }\n\n  async load(fs: FileSystem, path: string) {\n    try {\n      (await load(fs, path)).map((v, i) => this.set(i, v));\n    } catch (cause) {\n      // throw new Error(`ROM32K Failed to load file ${path}`, { cause });\n      throw new Error(`Memory Failed to load file ${path}`);\n    }\n  }\n\n  range(start = 0, end = this.size): number[] {\n    return [...this.#memory.slice(start, end)];\n  }\n\n  *map<T>(\n    fn: (index: number, value: number) => T,\n    start = 0,\n    end = this.size\n  ): Iterable<T> {\n    assert(start < end);\n    for (let i = start; i < end; i++) {\n      yield fn(i, this.get(i));\n    }\n  }\n}\n","import produce from \"immer\";\nimport { Dispatch, useEffect, useReducer, useState } from \"react\";\n\nexport function useImmerReducer<T, Reducers extends Record<string, Function>>(\n  reducers: Reducers,\n  initialState: T\n) {\n  return useReducer(\n    (\n      state: T,\n      command: {\n        action: keyof Reducers;\n        payload?: {};\n      }\n    ) =>\n      produce(state, (draft: T) => {\n        reducers[command.action](draft, command.payload as any);\n      }),\n    initialState\n  );\n}\n\nexport function useStateInitializer<T>(init: T): [T, Dispatch<T>] {\n  const [state, setState] = useState<T>(init);\n  useEffect(() => {\n    setState(init);\n  }, [init]);\n  return [state, setState];\n}\n","import { width } from \"@davidsouther/jiffies/lib/esm/dom/css/sizing\";\nimport { useCallback, useState } from \"react\";\nimport { useStateInitializer } from \"../../util/react\";\n\nconst Mode = { VIEW: 0, EDIT: 1 };\n\nexport const InlineEdit = (props: {\n  mode?: keyof typeof Mode;\n  value: string;\n  onChange: (value: string) => void;\n}) => {\n  const [mode, setMode] = useState(props.mode ?? Mode.VIEW);\n  const [value, setValue] = useStateInitializer(props.value);\n\n  const render = () => {\n    switch (mode) {\n      case Mode.EDIT:\n        return edit();\n      case Mode.VIEW:\n        return view();\n      default:\n        return <span />;\n    }\n  };\n\n  const view = () => (\n    <span\n      style={{ cursor: \"text\", ...width(\"full\", \"inline\") }}\n      onClick={() => {\n        setMode(Mode.EDIT);\n      }}\n    >\n      {value}\n    </span>\n  );\n\n  const doSelect = useCallback(\n    (ref: HTMLInputElement | null) => ref?.select(),\n    []\n  );\n  const doChange = useCallback(\n    (target: EventTarget & HTMLInputElement) => {\n      setMode(Mode.VIEW);\n      setValue(target.value ?? \"\");\n      props.onChange(target.value ?? \"\");\n    },\n    [props, setMode, setValue]\n  );\n  const edit = () => {\n    const edit = (\n      <span style={{ display: \"block\", position: \"relative\" }}>\n        <input\n          ref={doSelect}\n          style={{\n            zIndex: \"10\",\n            position: \"absolute\",\n            left: \"0\",\n            marginTop: \"-0.375rem\",\n          }}\n          onBlur={({ target }) => doChange(target)}\n          onKeyPress={({ key, target }) => {\n            if (key === \"Enter\") {\n              doChange(target);\n            }\n          }}\n          type=\"text\"\n          defaultValue={value}\n        />\n      </span>\n    );\n    return edit;\n  };\n\n  return render();\n};\n\nexport default InlineEdit;\n","import {\n  Key,\n  MutableRefObject,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n} from \"react\";\n\nexport interface VirtualScrollSettings {\n  /**Minimum offset into the adapter. Default is 0.  */\n  minIndex: number;\n  /** Maximum offset into the adapter. Default is Number.MAX_SAFE_INTEGER.  */\n  maxIndex: number;\n  /** Initial index to start rendering from. Default is minIndex.  */\n  startIndex: number;\n  /**\n   * Number of items to render in visible area. Default is entire range from\n   * minIndex to maxIndex.\n   */\n  count: number;\n  /**\n   * Maximum number of items to render on either side of the visible area.\n   * Default is `count`.\n   */\n  tolerance: number;\n  /** Height of each item, in pixels. Default is 20px. */\n  itemHeight: number;\n}\n\nexport interface VirtualScrollDataAdapter<T> {\n  (offset: number, limit: number): Iterable<T>;\n}\n\nexport function arrayAdapter<T>(data: T[]): VirtualScrollDataAdapter<T> {\n  return (offset, limit) => data.slice(offset, offset + limit);\n}\n\nexport interface VirtualScrollProps<T, U extends ReactNode> {\n  settings?: Partial<VirtualScrollSettings>;\n  get: VirtualScrollDataAdapter<T>;\n  row: (t: T) => U;\n  rowKey: (t: T) => Key;\n}\n\nexport function fillVirtualScrollSettings(\n  settings: Partial<VirtualScrollSettings>\n): VirtualScrollSettings {\n  const {\n    minIndex = 0,\n    maxIndex = Number.MAX_SAFE_INTEGER,\n    startIndex = 0,\n    itemHeight = 20,\n    count = maxIndex - minIndex + 1,\n    tolerance = count,\n  } = settings;\n\n  return { minIndex, maxIndex, startIndex, itemHeight, count, tolerance };\n}\n\nexport function initialState<T>(\n  settings: VirtualScrollSettings,\n  adapter: VirtualScrollDataAdapter<T>,\n  ref: MutableRefObject<HTMLDivElement | null>\n): VirtualScrollState<T> {\n  // From Denis Hilt, https://blog.logrocket.com/virtual-scrolling-core-principles-and-basic-implementation-in-react/\n  const { minIndex, maxIndex, startIndex, itemHeight, count, tolerance } =\n    settings;\n  const bufferedItems = count + 2 * tolerance;\n  const itemsAbove = Math.max(0, startIndex - tolerance - minIndex);\n\n  const viewportHeight = count * itemHeight;\n  const totalHeight = (maxIndex - minIndex + 1) * itemHeight;\n  const toleranceHeight = tolerance * itemHeight;\n  const bufferHeight = viewportHeight + 2 * toleranceHeight;\n  const topPaddingHeight = itemsAbove * itemHeight;\n  const bottomPaddingHeight = totalHeight - (topPaddingHeight + bufferHeight);\n\n  const state: VirtualScrollState<T> = {\n    scrollTop: 0,\n    settings,\n    viewportHeight,\n    totalHeight,\n    toleranceHeight,\n    bufferedItems,\n    topPaddingHeight,\n    bottomPaddingHeight,\n    data: [],\n  };\n\n  return {\n    ...state,\n    ...doScroll(topPaddingHeight + toleranceHeight, state, adapter),\n  };\n}\n\nexport function getData<T>(\n  minIndex: number,\n  maxIndex: number,\n  offset: number,\n  limit: number,\n  get: VirtualScrollDataAdapter<T>\n): T[] {\n  const start = Math.max(0, minIndex, offset);\n  const end = Math.min(maxIndex, offset + limit - 1);\n  const data = get(start, end - start);\n  return [...data];\n}\n\ninterface ScrollUpdate<T> {\n  scrollTop: number;\n  topPaddingHeight: number;\n  bottomPaddingHeight: number;\n  data: T[];\n}\n\nexport function doScroll<T>(\n  scrollTop: number,\n  state: VirtualScrollState<T>,\n  get: VirtualScrollDataAdapter<T>\n): ScrollUpdate<T> {\n  const {\n    totalHeight,\n    toleranceHeight,\n    bufferedItems,\n    settings: { itemHeight, minIndex, maxIndex },\n  } = state;\n  const index =\n    minIndex + Math.floor((scrollTop - toleranceHeight) / itemHeight);\n  const data = getData(minIndex, maxIndex, index, bufferedItems, get);\n  const topPaddingHeight = Math.max((index - minIndex) * itemHeight, 0);\n  const bottomPaddingHeight = Math.max(\n    totalHeight - (topPaddingHeight + data.length * itemHeight),\n    0\n  );\n\n  return { scrollTop, topPaddingHeight, bottomPaddingHeight, data };\n}\n\ninterface VirtualScrollState<T> {\n  settings: VirtualScrollSettings;\n  scrollTop: number; // px\n  bufferedItems: number; // count\n  totalHeight: number; // px\n  viewportHeight: number; // px\n  topPaddingHeight: number; // px\n  bottomPaddingHeight: number; // px\n  toleranceHeight: number; // px\n  data: T[];\n}\n\nconst scrollReducer =\n  <T extends {}>(get: VirtualScrollDataAdapter<T>) =>\n  (state: VirtualScrollState<T>, scrollTop: number) => ({\n    ...state,\n    ...doScroll(scrollTop, state, get),\n  });\n\nexport const VirtualScroll = <T extends {}, U extends ReactNode = ReactNode>(\n  props: VirtualScrollProps<T, U> & { className?: string }\n) => {\n  const viewportRef = useRef<HTMLDivElement | null>(null);\n\n  const { settings, startState, reducer } = useMemo(() => {\n    const settings = fillVirtualScrollSettings(props.settings ?? {});\n    const startState = initialState<T>(settings, props.get, viewportRef);\n    const reducer = scrollReducer(props.get);\n    return { settings, reducer, startState };\n  }, [props.settings, props.get]);\n\n  const [state, dispatchScroll] = useReducer(reducer, startState);\n\n  useEffect(() => {\n    if (viewportRef.current !== null) {\n      dispatchScroll(viewportRef.current.scrollTop);\n    }\n  }, [settings, props.row]);\n\n  const initialScroll = useCallback(\n    (div: HTMLDivElement | null) => {\n      if (div) {\n        div.scrollTop = viewportRef.current\n          ? viewportRef.current.scrollTop\n          : settings.startIndex * settings.itemHeight;\n      }\n      viewportRef.current = div;\n    },\n    [viewportRef, settings.startIndex, settings.itemHeight]\n  );\n\n  const rows = state.data.map((d) => (\n    <div key={props.rowKey(d)} style={{ height: `${settings.itemHeight}px` }}>\n      {props.row(d)}\n    </div>\n  ));\n\n  return (\n    <div\n      ref={initialScroll}\n      style={{\n        height: `${state.viewportHeight}px`,\n        overflowY: \"scroll\",\n        overflowAnchor: \"none\",\n      }}\n      className={props.className ?? \"\"}\n      onScroll={(e) => dispatchScroll((e.target as HTMLDivElement).scrollTop)}\n    >\n      <div style={{ height: `${state.topPaddingHeight}px` }} />\n      {rows}\n      <div style={{ height: `${state.bottomPaddingHeight}px` }} />\n    </div>\n  );\n};\n\nexport default VirtualScroll;\n","import { ReactNode, useCallback, useContext, useMemo, useState } from \"react\";\nimport { rounded } from \"@davidsouther/jiffies/lib/esm/dom/css/border\";\n\nimport {\n  Format,\n  FORMATS,\n  Memory as MemoryChip,\n} from \"../../simulator/cpu/memory\";\nimport { asm } from \"../../util/asm\";\nimport { bin, dec, hex } from \"../../util/twos\";\nimport InlineEdit from \"../pico/inline_edit\";\nimport VirtualScroll, { VirtualScrollSettings } from \"../pico/virtual_scroll\";\nimport { Icon } from \"../pico/icon\";\nimport { AppContext } from \"../../App.context\";\nimport { t } from \"@lingui/macro\";\n\nconst ITEM_HEIGHT = 34;\n\nexport const MemoryBlock = ({\n  memory,\n  jmp = { value: 0 },\n  highlight = -1,\n  editable = false,\n  format = dec,\n  onChange = () => {},\n}: {\n  jmp?: { value: number };\n  memory: MemoryChip;\n  highlight?: number;\n  editable?: boolean;\n  format?: (v: number) => string;\n  onChange?: (i: number, value: string, previous: number) => void;\n}) => {\n  const settings = useMemo<Partial<VirtualScrollSettings>>(\n    () => ({\n      count: 20,\n      maxIndex: memory.size,\n      itemHeight: ITEM_HEIGHT,\n      startIndex: jmp.value,\n    }),\n    [memory.size, jmp]\n  );\n  const get = useCallback(\n    (offset: number, count: number) =>\n      memory\n        .range(offset, offset + count)\n        .map((v, i) => [i + offset, v] as [number, number]),\n    [memory]\n  );\n  const row = useCallback(\n    ([i, v]: [number, number]) => (\n      <MemoryCell\n        index={i}\n        value={format(v)}\n        editable={editable}\n        highlight={i === highlight}\n        onChange={onChange}\n      />\n    ),\n    [format, editable, highlight, onChange]\n  );\n\n  return (\n    <VirtualScroll<[number, number], ReactNode>\n      settings={settings}\n      get={get}\n      row={row}\n      rowKey={([i]) => i}\n    />\n  );\n};\n\nexport const MemoryCell = ({\n  index,\n  value,\n  highlight = false,\n  editable = false,\n  onChange = () => {},\n}: {\n  index: number;\n  value: string;\n  highlight?: boolean;\n  editable?: boolean;\n  onChange?: (i: number, value: string, previous: number) => void;\n}) => (\n  <div style={{ display: \"flex\", height: \"100%\" }}>\n    <code\n      style={{\n        ...rounded(\"none\"),\n        ...(highlight\n          ? { background: \"var(--code-kbd-background-color)\" }\n          : {}),\n      }}\n    >\n      {hex(index)}\n    </code>\n    <code\n      style={{\n        flex: \"1\",\n        textAlign: \"right\",\n        ...rounded(\"none\"),\n        ...(highlight\n          ? { background: \"var(--code-kbd-background-color)\" }\n          : {}),\n      }}\n    >\n      {editable ? (\n        <InlineEdit\n          value={value}\n          onChange={(newValue: string) =>\n            onChange(index, newValue, Number(value))\n          }\n        />\n      ) : (\n        <span>{value}</span>\n      )}\n    </code>\n  </div>\n);\n\nexport const Memory = ({\n  name = \"Memory\",\n  highlight = -1,\n  editable = true,\n  memory,\n  format = \"dec\",\n}: {\n  name?: string;\n  editable?: boolean;\n  highlight?: number;\n  memory: MemoryChip;\n  format: Format;\n}) => {\n  const [fmt, setFormat] = useState(format);\n  const [jmp, setJmp] = useState(\"0\");\n  const [goto, setGoto] = useState({ value: 0 });\n\n  const jumpTo = () => {\n    setGoto({ value: Number(jmp) });\n  };\n\n  const { filePicker, fs, setStatus } = useContext(AppContext);\n  const doLoad = useCallback(async () => {\n    try {\n      const file = await filePicker.select();\n      await memory.load(fs, file);\n    } catch (e) {\n      console.error(e);\n      setStatus(`Failed to load into memory`);\n    }\n  }, [fs, filePicker, memory, setStatus]);\n\n  return (\n    <article className=\"panel\">\n      <header>\n        <div>{name}</div>\n        <fieldset role=\"group\">\n          <button onClick={doLoad} className=\"flex-0\">\n            <Icon name=\"upload_file\" />\n          </button>\n          <input\n            style={{ width: \"4em\", height: \"100%\" }}\n            placeholder={t`Goto`}\n            onKeyDown={({ key }) => key === \"Enter\" && jumpTo()}\n            onChange={({ target: { value } }) => setJmp(value ?? \"0\")}\n          />\n          <button onClick={jumpTo} className=\"flex-0\">\n            <Icon name=\"move_down\" />\n          </button>\n          {FORMATS.map((option) => (\n            <label\n              className=\"flex-0\"\n              key={option}\n              role=\"button\"\n              aria-current={option === fmt}\n            >\n              <input\n                type=\"radio\"\n                name={name}\n                value={option}\n                checked={option === fmt}\n                onChange={() => setFormat(option)}\n              />\n              {option}\n            </label>\n          ))}\n        </fieldset>\n      </header>\n      <MemoryBlock\n        jmp={goto}\n        memory={memory}\n        highlight={highlight}\n        editable={editable}\n        format={(v: number) => doFormat(fmt, v)}\n        onChange={(i: number, v: string) => memory.update(i, v, fmt ?? \"dec\")}\n      />\n    </article>\n  );\n};\n\nexport default Memory;\n\nfunction doFormat(format: Format, v: number): string {\n  switch (format) {\n    case \"bin\":\n      return bin(v);\n    case \"hex\":\n      return hex(v);\n    case \"asm\":\n      return asm(v);\n    case \"dec\":\n    default:\n      return dec(v);\n  }\n}\n","import { Bus, ClockedChip, Pin } from \"../../chip\";\nimport { assert } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { Memory as MemoryComponent } from \"../../../../components/chips/memory\";\nimport { Memory, Memory as MemoryChip } from \"../../../cpu/memory\";\n\nexport class RAM extends ClockedChip {\n  protected memory: MemoryChip;\n  private nextData: number = 0;\n  private address: number = 0;\n\n  constructor(protected readonly width: number, name?: string) {\n    super([\"in[16]\", \"load\", `address[${width}]`], [`out[16]`], name);\n    this.memory = new MemoryChip(Math.pow(2, this.width));\n  }\n\n  override tick() {\n    const load = this.in(\"load\").voltage();\n    this.address = this.in(\"address\").busVoltage;\n    if (load) {\n      this.nextData = this.in().busVoltage;\n      this.memory.set(this.address, this.nextData);\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.memory?.get(this.address) ?? 0;\n  }\n\n  override eval() {\n    const address = this.in(\"address\").busVoltage;\n    this.out().busVoltage = this.memory?.get(address) ?? 0;\n  }\n\n  at(idx: number): Pin {\n    assert(\n      idx < this.memory.size,\n      () => `Request out of bounds (${idx} >= ${this.memory.size})`\n    );\n    return new RamBus(`${this.name}[${idx}]`, idx, this.memory);\n  }\n\n  override render() {\n    return [\n      <MemoryComponent name={this.name} memory={this.memory} format=\"dec\" />,\n    ];\n  }\n}\n\nexport class RamBus extends Bus {\n  constructor(\n    name: string,\n    private readonly index: number,\n    private ram: Memory\n  ) {\n    super(name);\n  }\n\n  override get busVoltage(): number {\n    return this.ram.get(this.index);\n  }\n\n  override set busVoltage(num: number) {\n    this.ram.set(this.index, num);\n  }\n}\n\nexport class RAM8 extends RAM {\n  constructor(name?: string) {\n    super(3, name);\n  }\n\n  override render() {\n    return [<span>RAM {this.width}</span>];\n  }\n}\n\nexport class RAM64 extends RAM {\n  constructor(name?: string) {\n    super(6, name);\n  }\n}\n\nexport class RAM512 extends RAM {\n  constructor(name?: string) {\n    super(9, name);\n  }\n}\n\nexport class RAM4K extends RAM {\n  constructor(name?: string) {\n    super(12, name);\n  }\n}\n\nexport class RAM16K extends RAM {\n  constructor(name?: string) {\n    super(14, name);\n  }\n}\n","import { CSSProperties, ReactNode } from \"react\";\n\nexport const Panel = (props: {\n  children: ReactNode;\n  header?: ReactNode;\n  footer?: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n}) => {\n  return (\n    <article className={[\"panel\", props.className ?? \"\"].join(\" \")}>\n      {props.header && <header>{props.header}</header>}\n      <main>{props.children}</main>\n      {props.footer && <footer>{props.footer}</footer>}\n    </article>\n  );\n};\n\nexport const Accordian = (props: {\n  children: ReactNode;\n  summary: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  open?: boolean;\n}) => {\n  return (\n    <details\n      className={props.className ?? \"\"}\n      open={props.open}\n      style={props.style}\n    >\n      <summary>\n        <div className=\"flex row align-baseline\">{props.summary}</div>\n      </summary>\n      {props.children}\n    </details>\n  );\n};\n","import { assertExists } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { Trans } from \"@lingui/macro\";\nimport { useEffect, useRef } from \"react\";\nimport { Memory, SCREEN } from \"../../simulator/cpu/memory\";\nimport { Panel } from \"../shell/panel\";\n\nconst WHITE = \"white\";\nconst BLACK = \"black\";\ntype COLOR = typeof WHITE | typeof BLACK;\n\nfunction get(mem: Memory, x: number, y: number): COLOR {\n  const byte = mem.get(SCREEN + 32 * y + ((x / 16) | 0));\n  const bit = byte & (1 << x % 16);\n  return bit === 0 ? WHITE : BLACK;\n}\n\nfunction set(data: Uint8ClampedArray, x: number, y: number, value: COLOR) {\n  const pixel = (y * 512 + x) * 4;\n  const color = value === WHITE ? 255 : 0;\n  data[pixel] = color;\n  data[pixel + 1] = color;\n  data[pixel + 2] = color;\n  data[pixel + 3] = 255;\n}\n\nexport const Screen = ({ memory }: { memory: Memory }) => {\n  let canvas = useRef<HTMLCanvasElement>();\n  useEffect(() => {\n    const ctx = canvas.current?.getContext(\"2d\") ?? undefined;\n\n    if (ctx) {\n      const image = assertExists(\n        ctx.getImageData(0, 0, 512, 256),\n        \"Failed to create Context2d\"\n      );\n      for (let col = 0; col < 512; col++) {\n        for (let row = 0; row < 256; row++) {\n          const color = get(memory, col, row);\n          set(image.data, col, row, color);\n        }\n      }\n      ctx.putImageData(image, 0, 0);\n    }\n  }, [memory]);\n\n  return (\n    <Panel header={<Trans>Screen</Trans>}>\n      <figure\n        style={{\n          width: \"100%\",\n          maxWidth: \"512px\",\n          boxSizing: \"content-box\",\n          marginInline: \"auto\",\n          margin: \"0\",\n          borderTop: \"2px solid gray\",\n          borderLeft: \"2px solid gray\",\n          borderBottom: \"2px solid lightgray\",\n          borderRight: \"2px solid lightgray\",\n        }}\n      >\n        <canvas\n          ref={(ref) => (canvas.current = ref ?? undefined)}\n          width={512}\n          height={256}\n        ></canvas>\n      </figure>\n    </Panel>\n  );\n};\n","import { KeyboardEvent, useCallback, useState } from \"react\";\nimport { Keyboard as KeyboardChip } from \"../../simulator/chip/builtins/computer/computer\";\nimport { Icon } from \"../pico/icon\";\nimport { RegisterComponent } from \"./register\";\n\nconst KeyMap: Record<string, number | undefined> = {\n  // Delete: 127,\n  Enter: 128,\n  Backspace: 129,\n  ArrowLeft: 130,\n  ArrowUp: 131,\n  ArrowRight: 132,\n  ArrowDown: 133,\n  Home: 134,\n  End: 135,\n  PageUp: 136,\n  PageDown: 137,\n  Insert: 138,\n  Delete: 139,\n  Escape: 140,\n  F1: 141,\n  F2: 142,\n  F3: 143,\n  F4: 144,\n  F5: 145,\n  F6: 146,\n  F7: 147,\n  F8: 148,\n  F9: 149,\n  F10: 150,\n  F11: 151,\n  F12: 152,\n};\n\nfunction keyPressToHackCharacter(keypress: KeyboardEvent): number {\n  if (KeyMap[keypress.key]) {\n    return KeyMap[keypress.key]!;\n  }\n  if (keypress.key.length === 1) {\n    const code = keypress.key.charCodeAt(0);\n    if (code >= 32 && code <= 126) {\n      return code;\n    }\n  }\n\n  return 0;\n}\n\nexport const Keyboard = ({ keyboard }: { keyboard: KeyboardChip }) => {\n  const [showPicker, setShowPicker] = useState(false);\n  const [bits, setBits] = useState(keyboard.out().busVoltage);\n\n  const setKey = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      const key = keyPressToHackCharacter(event);\n      if (key === 0) {\n        return;\n      }\n      event.preventDefault();\n      keyboard.setKey(key);\n      setBits(keyboard.out().busVoltage);\n      setShowPicker(false);\n    },\n    [keyboard, setShowPicker, setBits]\n  );\n\n  const changeKey = useCallback(() => {\n    setShowPicker(true);\n  }, []);\n\n  return (\n    <div className=\"flex row align-baseline\">\n      <div className=\"flex-1\">\n        <RegisterComponent name=\"Keyboard\" bits={bits} />\n      </div>\n      <div className=\"flex-1\">\n        {showPicker ? (\n          <input ref={(e) => e?.focus()} type=\"text\" onKeyDown={setKey} />\n        ) : (\n          <button onClick={changeKey}>\n            <Icon name=\"keyboard\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { alu, COMMANDS_OP, Flags } from \"./alu\";\nimport { Memory } from \"./memory\";\n\nexport interface CPUInput {\n  inM: number;\n  instruction: number;\n  reset: boolean;\n}\n\nexport interface CPUOutput {\n  outM: number;\n  writeM: boolean;\n  addressM: number;\n}\n\nexport interface CPUState {\n  A: number;\n  D: number;\n  PC: number;\n  ALU: number;\n  flag: number;\n}\n\nexport function emptyState(): CPUState {\n  return { A: 0, D: 0, PC: 0, ALU: 0, flag: Flags.Zero };\n}\n\nconst BITS = {\n  c: 0b1000_0000_0000_0000,\n  x1: 0b1001_0000_0000_0000,\n  x2: 0b1001_0000_0000_0000,\n  am: 0b1001_0000_0000_0000,\n  op: 0b0000_1111_1100_0000,\n  d1: 0b1000_0000_0010_0000,\n  d2: 0b1000_0000_0001_0000,\n  d3: 0b1000_0000_0000_1000,\n  j1: 0b1000_0000_0000_0001,\n  j2: 0b1000_0000_0000_0010,\n  j3: 0b1000_0000_0000_0100,\n};\n\nexport function decode(instruction: number) {\n  function bit(bit: number): boolean {\n    return (instruction & bit) === bit;\n  }\n  const bits = {\n    c: bit(BITS.c),\n    x1: bit(BITS.x1),\n    x2: bit(BITS.x2),\n    am: bit(BITS.am),\n    op: ((instruction & BITS.op) >> 6) as COMMANDS_OP,\n    d1: bit(BITS.d1),\n    d2: bit(BITS.d2),\n    d3: bit(BITS.d3),\n    j1: bit(BITS.j1),\n    j2: bit(BITS.j2),\n    j3: bit(BITS.j3),\n  };\n\n  return bits;\n}\n\nexport function cpuTick(\n  { inM, instruction }: CPUInput,\n  { A, D, PC }: CPUState\n): [CPUState, boolean] {\n  const bits = decode(instruction);\n  const a = bits.am ? inM : A;\n  const [ALU, flag] = alu(bits.op, D, a);\n\n  return [{ A, D, PC: PC + 1, ALU, flag }, bits.d3];\n}\n\nexport function cpuTock(\n  { inM, instruction, reset }: CPUInput,\n  { A, D, PC, ALU, flag }: CPUState\n): [CPUOutput, CPUState] {\n  const bits = decode(instruction);\n\n  const j1 = bits.j1 && flag === Flags.Positive;\n  const j2 = bits.j2 && flag === Flags.Zero;\n  const j3 = bits.j3 && flag === Flags.Negative;\n  const jmp = j1 || j2 || j3;\n\n  PC = reset ? 0 : jmp ? A : PC;\n\n  if (bits.d2) {\n    D = ALU;\n  }\n\n  if (!bits.c) {\n    A = instruction & 0x7fff;\n  } else if (bits.d1) {\n    A = ALU;\n  }\n\n  const a = bits.am ? inM : A;\n  const alu2 = alu(bits.op, D, a);\n\n  ALU = alu2[0];\n  flag = alu2[1];\n\n  const output: CPUOutput = {\n    addressM: A,\n    outM: ALU,\n    writeM: bits.d3,\n  };\n\n  const state: CPUState = {\n    A,\n    D,\n    ALU,\n    flag,\n    PC,\n  };\n\n  return [output, state];\n}\n\nexport function cpu(input: CPUInput, state: CPUState): [CPUOutput, CPUState] {\n  const [tickState, _writeM] = cpuTick(input, state);\n  return cpuTock(input, tickState);\n}\n\nexport class CPU {\n  RAM: Memory;\n  ROM: Memory;\n\n  #pc = 0;\n  #a = 0;\n  #d = 0;\n\n  #tickState: CPUState = {\n    A: 0,\n    D: 0,\n    PC: 0,\n    ALU: 0,\n    flag: Flags.Zero,\n  };\n\n  get PC() {\n    return this.#pc;\n  }\n\n  get A() {\n    return this.#a;\n  }\n\n  get D() {\n    return this.#d;\n  }\n\n  constructor({\n    RAM = new Memory(0x7fff),\n    ROM,\n  }: {\n    RAM?: Memory;\n    ROM: Memory;\n  }) {\n    this.RAM = RAM;\n    this.ROM = ROM;\n  }\n\n  reset() {\n    this.#pc = 0;\n    this.#a = 0;\n    this.#d = 0;\n  }\n\n  tick() {\n    const [{ addressM, outM, writeM }, { A, D, PC }] = cpu(\n      {\n        inM: this.RAM.get(this.#a),\n        instruction: this.ROM.get(this.#pc),\n        reset: false,\n      },\n      {\n        A: this.#a,\n        D: this.#d,\n        PC: this.#pc,\n        ALU: this.#d,\n        flag: Flags.Zero,\n      }\n    );\n\n    this.#a = A;\n    this.#d = D;\n    this.#pc = PC;\n\n    if (writeM) {\n      this.RAM.set(addressM, outM);\n    }\n  }\n}\n","import { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Screen as ScreenComponent } from \"../../../../components/chips/screen\";\nimport { Keyboard as KeyboardComponent } from \"../../../../components/chips/keyboard\";\nimport { Chip, ClockedChip, ConstantBus, HIGH, LOW, Pin } from \"../../chip\";\nimport { RAM, RAM16K } from \"../sequential/ram\";\nimport {\n  CPUInput,\n  CPUState,\n  cpuTick,\n  cpuTock,\n  decode,\n  emptyState,\n} from \"../../../cpu/cpu\";\nimport { int10 } from \"../../../../util/twos\";\nimport { loadHack } from \"../../../fs\";\nimport { Flags } from \"../../../cpu/alu\";\nimport { RegisterComponent } from \"../../../../components/chips/register\";\nimport { ALUComponent } from \"../../../../components/chips/alu\";\nimport { KEYBOARD, SCREEN } from \"../../../cpu/memory\";\n\nexport class ROM32K extends RAM {\n  constructor() {\n    super(16, \"ROM\");\n  }\n\n  override async load(fs: FileSystem, path: string) {\n    try {\n      (await loadHack(fs, path)).map((v, i) => (this.at(i).busVoltage = v));\n    } catch (cause) {\n      // throw new Error(`ROM32K Failed to load file ${path}`, { cause });\n      throw new Error(`ROM32K Failed to load file ${path}`);\n    }\n  }\n}\n\nexport class Screen extends RAM {\n  static readonly OFFSET = SCREEN;\n\n  constructor() {\n    super(13, \"Screen\");\n  }\n\n  override render() {\n    return [<ScreenComponent memory={this.memory} />];\n  }\n}\n\nexport class Keyboard extends Chip {\n  static readonly OFFSET = KEYBOARD;\n\n  constructor() {\n    super([], [\"out[16]\"], \"Keyboard\");\n  }\n\n  setKey(key: number) {\n    this.out().busVoltage = key & 0xffff;\n  }\n\n  clearKey() {\n    this.out().busVoltage = 0;\n  }\n\n  override render() {\n    return [<KeyboardComponent keyboard={this} />];\n  }\n}\n\nexport class Memory extends ClockedChip {\n  private ram = new RAM16K();\n  private screen = new Screen();\n  private keyboard = new Keyboard();\n  private address = 0;\n\n  constructor() {\n    super([\"in[16]\", \"load\", \"address[15])\"], [\"out[16]\"], \"Memory\");\n    this.parts.add(this.keyboard);\n    this.parts.add(this.screen);\n    this.parts.add(this.ram);\n  }\n\n  override tick() {\n    const load = this.in(\"load\").voltage();\n    this.address = this.in(\"address\").busVoltage;\n    if (load) {\n      const inn = this.in().busVoltage;\n      if (this.address >= Keyboard.OFFSET) {\n        // Keyboard, do nothing\n      } else if (this.address >= Screen.OFFSET) {\n        this.screen.at(this.address - Screen.OFFSET).busVoltage = inn;\n      } else {\n        this.ram.at(this.address).busVoltage = inn;\n      }\n    }\n  }\n\n  override tock() {\n    this.eval();\n  }\n\n  override eval() {\n    if (!this.ram) return;\n    this.address = this.in(\"address\").busVoltage;\n    let out = 0;\n    if (this.address >= Keyboard.OFFSET) {\n      // Keyboard, do nothing\n      out = this.keyboard?.out().busVoltage ?? 0;\n    } else if (this.address >= Screen.OFFSET) {\n      out = this.screen?.at(this.address - Screen.OFFSET).busVoltage ?? 0;\n    } else {\n      out = this.ram?.at(this.address).busVoltage ?? 0;\n    }\n    this.out().busVoltage = out;\n  }\n\n  override in(pin?: string): Pin {\n    if (pin?.startsWith(\"RAM16K\")) {\n      const idx = int10(pin.match(/\\[(?<idx>\\d+)]/)?.groups?.idx ?? \"0\");\n      return this.ram.at(idx);\n    }\n    if (pin?.startsWith(\"Screen\")) {\n      const idx = int10(pin.match(/\\[(?<idx>\\d+)]/)?.groups?.idx ?? \"0\");\n      return this.screen.at(idx);\n    }\n    return super.in(pin);\n  }\n\n  override get(name: string, offset = 0): Pin | undefined {\n    if (name.startsWith(\"RAM16K\")) {\n      return this.at(offset & 0x3fff);\n    }\n    if (name.startsWith(\"Screen\")) {\n      return this.at(offset & (0x1fff + Screen.OFFSET));\n    }\n    if (name.startsWith(\"Keyboard\")) {\n      return this.at(Keyboard.OFFSET);\n    }\n    if (name.startsWith(\"Memory\")) {\n      return this.at(offset);\n    }\n    return super.get(name, offset);\n  }\n\n  at(offset: number): Pin {\n    if (offset >= Keyboard.OFFSET) {\n      return this.keyboard.out();\n    }\n    if (offset >= Screen.OFFSET) {\n      return this.screen.at(offset - Screen.OFFSET);\n    } else {\n      return this.ram.at(offset);\n    }\n  }\n}\n\nexport class CPU extends ClockedChip {\n  private state: CPUState = emptyState();\n\n  constructor() {\n    super(\n      [\"inM[16]\", \"instruction[16]\", \"reset\"],\n      [\"outM[16]\", \"writeM\", \"addressM[15]\", \"pc[15]\"]\n    );\n  }\n\n  override tick(): void {\n    const [state, writeM] = cpuTick(this.cpuInput(), this.state);\n    this.state = state;\n    this.out(\"writeM\").pull(writeM ? HIGH : LOW);\n    this.out(\"outM\").busVoltage = this.state.ALU ?? 0;\n  }\n\n  override tock(): void {\n    if (!this.state) return; // Skip initial tock\n    const [output, state] = cpuTock(this.cpuInput(), this.state);\n    this.state = state;\n\n    this.out(\"addressM\").busVoltage = output.addressM ?? 0;\n    this.out(\"outM\").busVoltage = output.outM ?? 0;\n    this.out(\"writeM\").pull(output.writeM ? HIGH : LOW);\n    this.out(\"pc\").busVoltage = this.state?.PC ?? 0;\n  }\n\n  private cpuInput(): CPUInput {\n    const inM = this.in(\"inM\").busVoltage;\n    const instruction = this.in(\"instruction\").busVoltage;\n    const reset = this.in(\"reset\").busVoltage === 1;\n    return { inM, instruction, reset };\n  }\n\n  override get(pin: string, offset?: number): Pin | undefined {\n    if (pin?.startsWith(\"ARegister\")) {\n      return new ConstantBus(\"ARegister\", this.state.A);\n    }\n    if (pin?.startsWith(\"DRegister\")) {\n      return new ConstantBus(\"DRegister\", this.state.D);\n    }\n    if (pin?.startsWith(\"PC\")) {\n      return new ConstantBus(\"PC\", this.state.PC);\n    }\n    return super.get(pin, offset);\n  }\n\n  override render() {\n    const bits = decode(this.in(\"instruction\").busVoltage);\n    return [\n      <RegisterComponent name={\"A\"} bits={this.state.A} />,\n      <RegisterComponent name={\"D\"} bits={this.state.D} />,\n      <RegisterComponent name={\"PC\"} bits={this.state.PC} />,\n      <ALUComponent\n        A={bits.am ? this.in(\"inM\").busVoltage : this.state.A}\n        D={this.state.D}\n        out={this.state.ALU}\n        op={bits.op}\n        flag={this.state.flag as keyof typeof Flags}\n      />,\n    ];\n  }\n}\n\nexport class Computer extends Chip {\n  #ram = new Memory();\n  #rom = new ROM32K();\n  #cpu = new CPU();\n\n  constructor() {\n    super([\"reset\"], []);\n\n    this.wire(this.#cpu, [\n      { from: { name: \"reset\", start: 0 }, to: { name: \"reset\", start: 0 } },\n      {\n        from: { name: \"instruction\", start: 0 },\n        to: { name: \"instruction\", start: 0 },\n      },\n      { from: { name: \"outM\", start: 0 }, to: { name: \"inM\", start: 0 } },\n      { from: { name: \"writeM\", start: 0 }, to: { name: \"writeM\", start: 0 } },\n      {\n        from: { name: \"addressM\", start: 0 },\n        to: { name: \"addressM\", start: 0 },\n      },\n    ]);\n\n    this.wire(this.#rom, [\n      { from: { name: \"pc\", start: 0 }, to: { name: \"address\", start: 0 } },\n      {\n        from: { name: \"instruction\", start: 0 },\n        to: { name: \"out\", start: 0 },\n      },\n    ]);\n\n    this.wire(this.#ram, [\n      { from: { name: \"inM\", start: 0 }, to: { name: \"in\", start: 0 } },\n      { from: { name: \"writeM\", start: 0 }, to: { name: \"load\", start: 0 } },\n      {\n        from: { name: \"addressM\", start: 0 },\n        to: { name: \"address\", start: 0 },\n      },\n      { from: { name: \"outM\", start: 0 }, to: { name: \"out\", start: 0 } },\n    ]);\n  }\n\n  override eval() {\n    super.eval();\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    if (\n      name.startsWith(\"PC\") ||\n      name.startsWith(\"ARegister\") ||\n      name.startsWith(\"DRegister\")\n    ) {\n      return this.#cpu.get(name);\n    }\n    if (name.startsWith(\"RAM16K\")) {\n      return this.#ram.get(name, offset);\n    }\n    return super.get(name, offset);\n  }\n\n  override load(fs: FileSystem, path: string): Promise<void> {\n    return this.#rom.load(fs, path);\n  }\n}\n","import { Err, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { Chip } from \"../chip\";\n\nimport { And, And16 } from \"./logic/and\";\nimport { DMux, DMux4Way, DMux8Way } from \"./logic/dmux\";\nimport { Mux, Mux16, Mux4Way16, Mux8Way16 } from \"./logic/mux\";\nimport { Nand, Nand16 } from \"./logic/nand\";\nimport { Not, Not16 } from \"./logic/not\";\nimport { Or, Or16, Or8way } from \"./logic/or\";\nimport { Xor, Xor16 } from \"./logic/xor\";\n\nimport { Add16 } from \"./arithmetic/add_16\";\nimport { ALU, ALUNoStat } from \"./arithmetic/alu\";\nimport { FullAdder } from \"./arithmetic/full_adder\";\nimport { HalfAdder } from \"./arithmetic/half_adder\";\nimport { Inc16 } from \"./arithmetic/inc16\";\n\nimport { Bit, PC, Register, VRegister } from \"./sequential/bit\";\nimport { DFF } from \"./sequential/dff\";\nimport { RAM16K, RAM4K, RAM512, RAM64, RAM8 } from \"./sequential/ram\";\nimport {\n  Computer,\n  CPU,\n  Keyboard,\n  Memory,\n  ROM32K,\n  Screen,\n} from \"./computer/computer\";\n\nexport {\n  And,\n  And16,\n  DMux,\n  Mux,\n  Mux16,\n  Mux4Way16,\n  Mux8Way16,\n  Nand,\n  Nand16,\n  Not,\n  Not16,\n  Or,\n  Or16,\n  Or8way,\n  Xor,\n  Xor16,\n  HalfAdder,\n  FullAdder,\n  Add16,\n  Inc16,\n  ALU,\n  Bit,\n  Register,\n  VRegister as ARegister,\n  VRegister as DRegister,\n  DFF,\n  RAM8,\n  RAM64,\n  RAM512,\n  RAM4K,\n  RAM16K,\n};\n\nexport const REGISTRY = new Map<string, () => Chip>(\n  (\n    [\n      [\"Nand\", Nand],\n      [\"Nand16\", Nand16],\n      [\"Not\", Not],\n      [\"Not16\", Not16],\n      [\"And\", And],\n      [\"And16\", And16],\n      [\"Or\", Or],\n      [\"Or16\", Or16],\n      [\"Or8Way\", Or8way],\n      [\"XOr\", Xor],\n      [\"XOr16\", Xor16],\n      [\"Xor\", Xor],\n      [\"Xor16\", Xor16],\n      [\"Mux\", Mux],\n      [\"Mux16\", Mux16],\n      [\"Mux4Way16\", Mux4Way16],\n      [\"Mux8Way16\", Mux8Way16],\n      [\"DMux\", DMux],\n      [\"DMux4Way\", DMux4Way],\n      [\"DMux8Way\", DMux8Way],\n      [\"HalfAdder\", HalfAdder],\n      [\"FullAdder\", FullAdder],\n      [\"Add16\", Add16],\n      [\"Inc16\", Inc16],\n      [\"ALU\", ALU],\n      [\"ALUNoStat\", ALUNoStat],\n      [\"DFF\", DFF],\n      [\"Bit\", Bit],\n      [\"Register\", Register],\n      [\"ARegister\", Register],\n      [\"DRegister\", Register],\n      [\"PC\", PC],\n      [\"RAM8\", RAM8],\n      [\"RAM64\", RAM64],\n      [\"RAM512\", RAM512],\n      [\"RAM4K\", RAM4K],\n      [\"RAM16K\", RAM16K],\n      [\"ROM32K\", ROM32K],\n      [\"Screen\", Screen],\n      [\"Keyboard\", Keyboard],\n      [\"CPU\", CPU],\n      [\"Computer\", Computer],\n      [\"Memory\", Memory],\n      [\"ARegister\", VRegister],\n      [\"DRegister\", VRegister],\n    ] as [string, { new (): Chip }][]\n  ).map(([name, ChipCtor]) => [\n    name,\n    () => {\n      const chip = new ChipCtor();\n      chip.name = name;\n      return chip;\n    },\n  ])\n);\n\nexport function getBuiltinChip(name: string): Result<Chip> {\n  const chip = REGISTRY.get(name);\n  return chip\n    ? Ok(chip())\n    : Err(new Error(`Chip ${name} not in builtin registry`));\n}\n","import { Err, isErr, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { HDL, HdlParse } from \"../../languages/hdl\";\nimport { getBuiltinChip } from \"./builtins/index\";\nimport { Chip, Connection } from \"./chip\";\n\nfunction pinWidth(start: number, end: number | undefined): number | undefined {\n  if (end === undefined) {\n    return undefined;\n  }\n  if (end >= start) {\n    return end - start + 1;\n  }\n  if (start > 0 && end === 0) {\n    return 1;\n  }\n  throw new Error(`Bus specification has start > end (${start} > ${end})`);\n}\n\nexport function parse(\n  code: string\n): Result<Chip, Error | { message: string; shortMessage: string }> {\n  const parsed = HDL.parse(code.toString());\n  if (isErr(parsed)) return parsed;\n  return build(Ok(parsed));\n}\n\nexport function build(parts: HdlParse): Result<Chip, Error> {\n  if (parts.parts === \"BUILTIN\") {\n    return getBuiltinChip(parts.name.toString());\n  }\n\n  const buildChip = new Chip(\n    parts.ins.map(({ pin, width }) => ({ pin: pin.toString(), width })),\n    parts.outs.map(({ pin, width }) => ({ pin: pin.toString(), width })),\n    parts.name.toString(),\n    [],\n    parts.clocked\n  );\n\n  for (const part of parts.parts) {\n    const builtin = getBuiltinChip(part.name.toString());\n    if (isErr(builtin)) return builtin;\n    const partChip = Ok(builtin);\n\n    const wires = part.wires.map<Connection>(({ lhs, rhs }) => ({\n      to: {\n        name: lhs.pin.toString(),\n        start: lhs.start ?? 0,\n        width: pinWidth(lhs.start ?? 0, lhs.end),\n      },\n      from: {\n        name: rhs.pin.toString(),\n        start: rhs.start ?? 0,\n        width: pinWidth(rhs.start ?? 0, rhs.end),\n      },\n    }));\n\n    try {\n      buildChip.wire(partChip, wires);\n    } catch (e) {\n      return Err(e as Error);\n    }\n  }\n\n  return Ok(buildChip);\n}\n","import { assert } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { bin, dec, hex } from \"../util/twos\";\nimport { Test } from \"./tst\";\n\nexport class Output {\n  private readonly fmt: \"B\" | \"X\" | \"D\" | \"S\";\n  private readonly lPad: number;\n  private readonly rPad: number;\n  private readonly len: number;\n  private readonly index: number;\n  private readonly builtin: boolean;\n\n  // new Output(inst.id, inst.style, inst.width, inst.lpad, inst.rpad)\n  constructor(\n    private variable: string,\n    format = \"%B1.1.1\",\n    len?: number,\n    lPad?: number,\n    rPad?: number,\n    builtin?: boolean,\n    index?: number\n  ) {\n    if (\n      format.startsWith(\"%\") &&\n      len === undefined &&\n      lPad === undefined &&\n      rPad === undefined\n    ) {\n      const { fmt, lPad, rPad, len } = format.match(\n        /^%(?<fmt>[BDXS])(?<lPad>\\d+)\\.(?<len>\\d+)\\.(?<rPad>\\d+)$/\n      )?.groups as {\n        fmt: \"B\" | \"X\" | \"D\" | \"S\";\n        lPad: string;\n        rPad: string;\n        len: string;\n      };\n      this.fmt = fmt;\n      this.lPad = parseInt(lPad);\n      this.rPad = parseInt(rPad);\n      this.len = parseInt(len);\n      this.builtin = false;\n      this.index = -1;\n    } else {\n      assert([\"B\", \"X\", \"D\", \"S\"].includes(format[0]));\n      this.fmt = format[0] as \"B\" | \"X\" | \"D\" | \"S\";\n      this.len = len ?? 3;\n      this.lPad = lPad ?? 1;\n      this.rPad = rPad ?? 1;\n      this.builtin = builtin ?? false;\n      this.index = index ?? -1;\n    }\n  }\n\n  header(test: Test) {\n    let variable = `${this.variable}`;\n    if (this.builtin) {\n      const index = this.index >= 0 ? this.index : \"\";\n      variable = `${variable}[${index}]`;\n    }\n    if (variable.length > this.len + this.lPad + this.rPad) {\n      return variable.substring(0, this.len + this.lPad + this.rPad);\n    }\n    return this.padCenter(variable);\n  }\n\n  print(test: Test) {\n    const val = test.getVar(this.variable, this.index);\n    if (this.fmt === \"S\") {\n      return this.padLeft(val as string);\n    }\n\n    const fmt = { B: bin, D: dec, X: hex }[this.fmt];\n    let value = fmt(val as number);\n    if (this.fmt === \"D\") {\n      return this.padRight(value);\n    } else {\n      return this.padCenter(value.slice(value.length - this.len));\n    }\n  }\n\n  private padCenter(value: string) {\n    const space = this.lPad + this.len + this.rPad;\n    const leftSpace = Math.floor((space - value.length) / 2);\n    const rightSpace = space - leftSpace - value.length;\n    const padLeft = leftSpace + value.length;\n    const padRight = padLeft + rightSpace;\n    value = value.padStart(padLeft);\n    value = value.padEnd(padRight);\n    return value;\n  }\n\n  private padLeft(value: string) {\n    value = value.substring(0, this.len);\n    const padRight = this.rPad + this.len;\n    const padLeft = this.lPad + padRight;\n    value = value.padEnd(padRight);\n    value = value.padStart(padLeft);\n    return value;\n  }\n\n  private padRight(value: string) {\n    value = value.substring(0, this.len);\n    const padLeft = this.lPad + this.len;\n    const padRight = this.rPad + padLeft;\n    value = value.padStart(padLeft);\n    value = value.padEnd(padRight);\n    return value;\n  }\n}\n","import { checkExhaustive } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Span } from \"../languages/base\";\nimport {\n  Tst,\n  TstLineStatement,\n  TstOperation,\n  TstOutputSpec,\n  TstStatement,\n} from \"../languages/tst\";\nimport { Bus, Chip, HIGH, Low, LOW } from \"./chip/chip\";\nimport { Clock } from \"./chip/clock\";\nimport { Output } from \"./output\";\n\nexport abstract class Test<IS extends TestInstruction = TestInstruction> {\n  protected readonly instructions: (IS | TestInstruction)[] = [];\n  protected _outputList: Output[] = [];\n  protected _log: string = \"\";\n  fs: FileSystem = new FileSystem();\n\n  setFileSystem(fs: FileSystem) {\n    this.fs = fs;\n  }\n\n  async load(filename: string) {}\n  async compareTo(filename: string) {}\n  outputFile(filename: string): void {}\n  outputList(outputs: Output[]): void {\n    this._outputList = outputs;\n  }\n\n  addInstruction(instruction: IS | TestInstruction) {\n    this.instructions.push(instruction);\n  }\n\n  reset() {\n    this._steps = this.instructions[Symbol.iterator]();\n    this._log = \"\";\n  }\n\n  _steps: IterableIterator<IS | TestInstruction> | undefined;\n  _step: IteratorResult<IS | TestInstruction, IS | TestInstruction> | undefined;\n\n  get steps(): Iterator<IS | TestInstruction> {\n    if (this._steps === undefined) {\n      this.reset();\n    }\n    return this._steps!;\n  }\n\n  get currentStep(): IS | TestInstruction | undefined {\n    return this._step?.value;\n  }\n\n  async step() {\n    this._step = this.steps.next();\n    if (!this._step.done) {\n      await this._step.value.do(this);\n      return true;\n    }\n    return false;\n  }\n\n  async run() {\n    while (await this.step());\n  }\n\n  echo(content: string) {}\n\n  clearEcho() {}\n\n  protected readonly breakpoints: Map<string, number> = new Map();\n  addBreakpoint(variable: string, value: number) {\n    this.breakpoints.set(variable, value);\n  }\n  clearBreakpoints() {\n    this.breakpoints.clear();\n  }\n\n  output() {\n    const values = this._outputList.map((output) => output.print(this));\n    this._log += `|${values.join(\"|\")}|\\n`;\n  }\n\n  header() {\n    const values = this._outputList.map((output) => output.header(this));\n    this._log += `|${values.join(\"|\")}|\\n`;\n  }\n\n  log() {\n    return this._log;\n  }\n\n  abstract hasVar(variable: string | number): boolean;\n  abstract getVar(variable: string | number, offset?: number): number | string;\n  abstract setVar(variable: string, value: number, offset?: number): void;\n}\n\nfunction isTstLineStatment(line: TstStatement): line is TstLineStatement {\n  return (line as TstLineStatement).ops !== undefined;\n}\n\nexport class ChipTest extends Test<ChipTestInstruction> {\n  private chip: Chip = new Low();\n  private clock = Clock.get();\n\n  static from(tst: Tst): ChipTest {\n    const test = new ChipTest();\n\n    for (const line of tst.lines) {\n      if (isTstLineStatment(line)) {\n        test.addInstruction(ChipTest.makeLineStatement(line));\n      } else {\n        const repeat = new TestRepeatInstruction(line.count);\n        test.addInstruction(repeat);\n        for (const statement of line.statements) {\n          repeat.addInstruction(ChipTest.makeLineStatement(statement));\n        }\n      }\n    }\n\n    return test;\n  }\n\n  private static makeLineStatement(line: TstLineStatement) {\n    const statement = new TestCompoundInstruction();\n    statement.span = line.span;\n    for (const op of line.ops) {\n      statement.addInstruction(ChipTest.makeInstruction(op));\n    }\n    return statement;\n  }\n\n  private static makeInstruction(inst: TstOperation) {\n    const { op } = inst;\n    switch (op) {\n      case \"tick\":\n        return new TestTickInstruction();\n      case \"tock\":\n        return new TestTockInstruction();\n      case \"eval\":\n        return new TestEvalInstruction();\n      case \"output\":\n        return new TestOutputInstruction();\n      case \"set\":\n        return new TestSetInstruction(inst.id, inst.value, inst.index);\n      case \"output-list\":\n        return new TestOutputListInstruction(inst.spec);\n      case \"echo\":\n        return new TestEchoInstruction(inst.message);\n      case \"clear-echo\":\n        return new TestClearEchoInstruction();\n      case \"load\":\n        return new TestLoadROMInstruction(inst.file);\n      default:\n        checkExhaustive(op, `Unknown tst operation ${op}`);\n    }\n  }\n\n  with(chip: Chip): this {\n    this.chip = chip;\n    return this;\n  }\n\n  hasVar(variable: string | number): boolean {\n    if (variable === \"time\") {\n      return true;\n    }\n    variable = `${variable}`;\n    // Look up built-in chip state variables\n    return (\n      this.chip.in(variable) !== undefined ||\n      this.chip.out(variable) !== undefined\n    );\n  }\n\n  getVar(variable: string | number, offset?: number): number | string {\n    variable = `${variable}`;\n    if (variable === \"time\") {\n      return this.clock.toString();\n    }\n    const pin = this.chip.get(variable, offset);\n    if (!pin) return 0;\n    return pin instanceof Bus ? pin.busVoltage : pin.voltage();\n  }\n\n  setVar(variable: string, value: number, offset?: number): void {\n    // Look up built-in chip state variables\n    const pinOrBus = this.chip.get(variable, offset);\n    if (pinOrBus instanceof Bus) {\n      pinOrBus.busVoltage = value;\n    } else {\n      pinOrBus?.pull(value === 0 ? LOW : HIGH);\n    }\n  }\n\n  eval(): void {\n    this.chip.eval();\n  }\n\n  tick(): void {\n    this.chip.eval();\n    this.clock.tick();\n  }\n\n  tock(): void {\n    this.chip.eval();\n    this.clock.tock();\n  }\n\n  override async load(filename: string) {\n    await this.chip.load(this.fs, filename);\n  }\n\n  override async run() {\n    this.clock.reset();\n    await super.run();\n  }\n}\n\nexport class CPUTest extends Test<CPUTestInstruction> {\n  hasVar(_variable: string | number): boolean {\n    return false;\n  }\n  getVar(_variable: string | number): number {\n    return 0;\n  }\n  setVar(_variable: string, _value: number): void {}\n  ticktock(): void {}\n}\n\nexport class VMTest extends Test<VMTestInstruction> {\n  hasVar(_variable: string | number): boolean {\n    return false;\n  }\n  getVar(_variable: string | number): number {\n    return 0;\n  }\n  setVar(_variable: string, _value: number): void {}\n  vmstep(): void {}\n}\n\nexport interface TestInstruction {\n  span?: Span;\n  do(test: Test): Promise<void> | void;\n}\n\nexport class TestSetInstruction implements TestInstruction {\n  constructor(\n    private variable: string,\n    private value: number,\n    private index?: number | undefined\n  ) {}\n\n  do(test: Test): void {\n    test.setVar(this.variable, this.value, this.index);\n  }\n}\n\nexport class TestOutputInstruction implements TestInstruction {\n  do(test: Test) {\n    test.output();\n  }\n}\n\nexport class TestOutputListInstruction implements TestInstruction {\n  private outputs: Output[] = [];\n\n  constructor(specs: TstOutputSpec[] = []) {\n    for (const spec of specs) {\n      this.addOutput(spec);\n    }\n  }\n\n  addOutput(inst: TstOutputSpec) {\n    this.outputs.push(\n      new Output(\n        inst.id,\n        inst.style,\n        inst.width,\n        inst.lpad,\n        inst.rpad,\n        inst.builtin,\n        inst.address\n      )\n    );\n  }\n\n  do(test: Test) {\n    test.outputList(this.outputs);\n    test.header();\n  }\n}\n\nexport class TestCompoundInstruction implements TestInstruction {\n  protected readonly instructions: TestInstruction[] = [];\n  span?: Span;\n\n  addInstruction(instruction: TestInstruction) {\n    this.instructions.push(instruction);\n  }\n\n  async do(test: Test) {\n    for (const instruction of this.instructions) {\n      await instruction.do(test);\n    }\n  }\n}\n\nexport class TestRepeatInstruction extends TestCompoundInstruction {\n  constructor(public readonly repeat: number) {\n    super();\n  }\n\n  override async do(test: Test) {\n    for (let i = 0; i < this.repeat; i++) {\n      await super.do(test);\n    }\n  }\n}\n\nexport class Condition {\n  constructor(\n    public readonly x: string | number,\n    public readonly y: string | number,\n    public readonly op: \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"<>\"\n  ) {}\n\n  check(test: Test): boolean {\n    const x = test.hasVar(this.x) ? test.getVar(this.x) : this.x;\n    const y = test.hasVar(this.y) ? test.getVar(this.y) : this.y;\n\n    if (typeof x === \"string\" || typeof y === \"string\") {\n      switch (this.op) {\n        case \"=\":\n          return `${x}` === `${y}`;\n        case \"<>\":\n          return `${x}` !== `${y}`;\n      }\n    } else {\n      switch (this.op) {\n        case \"<\":\n          return x < y;\n        case \"<=\":\n          return x <= y;\n        case \">\":\n          return x > y;\n        case \">=\":\n          return x >= y;\n        case \"=\":\n          return x === y;\n        case \"<>\":\n          return x !== y;\n      }\n    }\n    return false;\n  }\n}\n\nexport class TestWhileInstruction extends TestCompoundInstruction {\n  constructor(public readonly condition: Condition) {\n    super();\n  }\n\n  override async do(test: Test) {\n    while (this.condition.check(test)) {\n      for (const instruction of this.instructions) {\n        await instruction.do(test);\n      }\n    }\n  }\n}\n\nexport class TestEchoInstruction implements TestInstruction {\n  constructor(public readonly content: string) {}\n  do(test: Test) {\n    test.echo(this.content);\n  }\n}\n\nexport class TestClearEchoInstruction implements TestInstruction {\n  do(test: Test) {\n    test.clearEcho();\n  }\n}\n\nexport class TestLoadROMInstruction implements TestInstruction {\n  constructor(readonly file: string) {}\n  async do(test: Test) {\n    await test.load(this.file);\n  }\n}\n\nexport class TestBreakpointInstruction implements TestInstruction {\n  constructor(readonly variable: string, readonly value: number) {}\n\n  do(test: Test) {\n    test.addBreakpoint(this.variable, this.value);\n  }\n}\n\nexport class TestClearBreakpointsInstruction implements TestInstruction {\n  do(test: Test) {\n    test.clearBreakpoints();\n  }\n}\n\nexport interface ChipTestInstruction extends TestInstruction {\n  _chipTestInstruction_: true;\n  do(test: ChipTest): Promise<void> | void;\n}\n\nexport class TestEvalInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.eval();\n  }\n}\n\nexport class TestTickInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.tick();\n  }\n}\n\nexport class TestTockInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.tock();\n  }\n}\n\nexport interface CPUTestInstruction extends TestInstruction {\n  _cpuTestInstruction_: true;\n  do(test: CPUTest): Promise<void> | void;\n}\n\nexport class TestTickTockInstruction implements CPUTestInstruction {\n  readonly _cpuTestInstruction_ = true;\n  do(test: CPUTest) {\n    test.ticktock();\n  }\n}\n\nexport interface VMTestInstruction extends TestInstruction {\n  _vmTestInstruction_: true;\n  do(test: VMTest): Promise<void> | void;\n}\n\nexport class TestVMStepInstruction implements VMTestInstruction {\n  readonly _vmTestInstruction_ = true;\n  do(test: VMTest) {\n    test.vmstep();\n  }\n}\n","import {\n  FileSystem,\n  LocalStorageFileSystemAdapter,\n} from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { createContext } from \"react\";\n\nexport const StorageContext = createContext(\n  new FileSystem(new LocalStorageFileSystemAdapter())\n);\n","import { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { display } from \"@davidsouther/jiffies/lib/esm/display\";\nimport { t } from \"@lingui/macro\";\nimport { Dispatch, MutableRefObject, useContext, useMemo, useRef } from \"react\";\n\nimport { HDL } from \"../languages/hdl\";\nimport { TST } from \"../languages/tst\";\nimport { build as buildChip } from \"../simulator/chip/builder\";\nimport { getBuiltinChip } from \"../simulator/chip/builtins/index\";\nimport { Low, Pin, Chip as SimChip, Chip } from \"../simulator/chip/chip\";\nimport { Clock } from \"../simulator/chip/clock\";\nimport { ChipTest } from \"../simulator/tst\";\nimport { StorageContext } from \"../util/storage\";\nimport { AppContext } from \"../App.context\";\nimport { ImmPin, reducePins } from \"../components/pinout\";\nimport { REGISTRY } from \"../simulator/chip/builtins\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Span } from \"../languages/base\";\nimport { useImmerReducer } from \"../util/react\";\n\nexport const PROJECT_NAMES = [\n  [\"01\", t`Project 1`],\n  [\"02\", t`Project 2`],\n  [\"03\", t`Project 3`],\n  [\"05\", t`Project 5`],\n];\n\nexport const PROJECTS: Record<\"01\" | \"02\" | \"03\" | \"05\", string[]> = {\n  \"01\": [\n    \"Not\",\n    \"And\",\n    \"Or\",\n    \"XOr\",\n    \"Mux\",\n    \"DMux\",\n    \"Not16\",\n    \"And16\",\n    \"Or16\",\n    \"Mux16\",\n    \"Mux4Way16\",\n    \"Mux8Way16\",\n    \"DMux4Way\",\n    \"DMux8Way\",\n    \"Or8Way\",\n  ],\n  \"02\": [\"HalfAdder\", \"FullAdder\", \"Add16\", \"Inc16\", \"AluNoStat\", \"ALU\"],\n  \"03\": [\"Bit\", \"Register\", \"PC\", \"RAM8\", \"RAM64\", \"RAM512\", \"RAM4k\", \"RAM16k\"],\n  \"05\": [\"Memory\", \"CPU\", \"Computer\"],\n};\n\nfunction dropdowns(storage: Record<string, string>) {\n  const project = (storage[\"/chip/project\"] as keyof typeof PROJECTS) ?? \"01\";\n  const chips = PROJECTS[project];\n  const chipName = storage[\"/chip/chip\"] ?? chips[0];\n  return { project, chips, chipName };\n}\n\nfunction makeHdl(name: string) {\n  return `CHIP ${name} {\n    IN in;\n    OUT out;\n    PARTS:\n  }`;\n}\n\nfunction makeTst() {\n  return `repeat 10 {\n      tick,\n      tock;\n    }`;\n}\n\nfunction makeCmp() {\n  return `| in|out|`;\n}\n\ninterface ChipPageState {\n  files: Files;\n  sim: ChipSim;\n  controls: ControlsState;\n}\n\ninterface ChipSim {\n  clocked: boolean;\n  inPins: ImmPin[];\n  outPins: ImmPin[];\n  internalPins: ImmPin[];\n  parts: Set<Chip>;\n}\n\ninterface Files {\n  hdl: string;\n  cmp: string;\n  tst: string;\n  out: string;\n}\n\ninterface ControlsState {\n  project: keyof typeof PROJECTS;\n  chips: string[];\n  chipName: string;\n  hasBuiltin: boolean;\n  runningTest: boolean;\n  span?: Span;\n}\n\nfunction reduceChip(chip: SimChip): ChipSim {\n  return {\n    clocked: chip.clocked,\n    inPins: reducePins(chip.ins),\n    outPins: reducePins(chip.outs),\n    internalPins: reducePins(chip.pins),\n    parts: new Set(chip.parts),\n  };\n}\n\nconst clock = Clock.get();\n\nexport type ChipStoreDispatch = Dispatch<{\n  action: keyof ReturnType<typeof makeChipStore>[\"reducers\"];\n  payload?: {};\n}>;\n\nexport function makeChipStore(\n  fs: FileSystem,\n  setStatus: (status: string) => void,\n  storage: Record<string, string>,\n  dispatch: MutableRefObject<ChipStoreDispatch>\n) {\n  let { project, chips, chipName } = dropdowns(storage);\n  let chip = new Low();\n  let test = new ChipTest();\n\n  const initialState: ChipPageState = (() => {\n    const controls: ControlsState = {\n      project,\n      chips,\n      chipName,\n      hasBuiltin: REGISTRY.has(chipName),\n      runningTest: false,\n    };\n\n    let maybeChip = getBuiltinChip(controls.chipName);\n    if (isErr(maybeChip)) {\n      setStatus(display(Err(maybeChip)));\n    } else {\n      chip = Ok(maybeChip);\n    }\n\n    const sim = reduceChip(chip);\n\n    setTimeout(() => {\n      actions.reloadChip();\n    });\n\n    return {\n      controls,\n      files: {\n        hdl: \"\",\n        cmp: \"\",\n        tst: \"\",\n        out: \"\",\n      },\n      sim,\n    };\n  })();\n\n  const reducers = {\n    setFiles(\n      state: ChipPageState,\n      {\n        hdl = state.files.hdl,\n        tst = state.files.tst,\n        cmp = state.files.cmp,\n        out = \"\",\n      }: {\n        hdl?: string;\n        tst?: string;\n        cmp?: string;\n        out?: string;\n      }\n    ) {\n      state.files.hdl = hdl;\n      state.files.tst = tst;\n      state.files.cmp = cmp;\n      state.files.out = out;\n    },\n\n    updateChip(state: ChipPageState) {\n      state.sim = reduceChip(chip);\n      state.controls.chips = PROJECTS[state.controls.project];\n      state.controls.chipName = chip.name ?? chipName;\n      if (!state.controls.chips.includes(state.controls.chipName)) {\n        state.controls.chips = [\n          ...state.controls.chips,\n          state.controls.chipName,\n        ];\n      }\n    },\n\n    setProject(state: ChipPageState, project: keyof typeof PROJECTS) {\n      const chips = PROJECTS[project];\n      const chipName =\n        state.controls.chipName && chips.includes(state.controls.chipName)\n          ? state.controls.chipName\n          : chips[0];\n      state.controls.project = project;\n      state.controls.chips = chips;\n      this.setChip(state, chipName);\n    },\n\n    setChip(state: ChipPageState, chipName: string) {\n      state.controls.chipName = chipName;\n      state.controls.hasBuiltin = REGISTRY.has(chipName);\n    },\n\n    testRunning(state: ChipPageState) {\n      state.controls.runningTest = true;\n    },\n    testFinished(state: ChipPageState) {\n      state.controls.runningTest = false;\n    },\n    updateTestStep(state: ChipPageState) {\n      state.files.out = test?.log() ?? \"\";\n      state.controls.span = test?.currentStep?.span;\n      this.updateChip(state);\n    },\n  };\n\n  const actions = {\n    setProject(p: keyof typeof PROJECTS) {\n      project = storage[\"/chip/project\"] = p;\n      dispatch.current({ action: \"setProject\", payload: project });\n      this.setChip(PROJECTS[project][0]);\n    },\n\n    setChip(chip: string, project = storage[\"/chip/project\"]) {\n      chipName = storage[\"/chip/chip\"] = chip;\n      dispatch.current({ action: \"setChip\", payload: chipName });\n      this.loadChip(project, chipName);\n    },\n\n    reset() {\n      Clock.get().reset();\n      chip.reset();\n      test.reset();\n      dispatch.current({ action: \"setFiles\", payload: {} });\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    updateFiles({ hdl, tst, cmp }: { hdl: string; tst: string; cmp: string }) {\n      dispatch.current({ action: \"setFiles\", payload: { hdl, tst, cmp } });\n      try {\n        this.compileChip(hdl);\n        this.compileTest(tst);\n      } catch (e) {\n        setStatus(display(e));\n      }\n    },\n\n    compileChip(hdl: string) {\n      chip.remove();\n      const maybeParsed = HDL.parse(hdl);\n      if (isErr(maybeParsed)) {\n        setStatus(\"Failed to parse chip\");\n        dispatch.current({ action: \"updateChip\" });\n        return;\n      }\n      const maybeChip = buildChip(Ok(maybeParsed));\n      if (isErr(maybeChip)) {\n        setStatus(display(Err(maybeChip)));\n        dispatch.current({ action: \"updateChip\" });\n        return;\n      }\n      setStatus(t`Compiled ${chip.name}`);\n      this.replaceChip(Ok(maybeChip));\n    },\n\n    replaceChip(nextChip: SimChip) {\n      // Store current inPins\n      const inPins = chip.ins;\n      for (const [pin, { busVoltage }] of inPins) {\n        if (nextChip.ins.has(pin)) {\n          nextChip.ins.get(pin)!.busVoltage = busVoltage;\n        }\n      }\n      nextChip.eval();\n      chip = nextChip;\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    async loadChip(project: string, name: string) {\n      storage[\"/chip/chip\"] = name;\n      const fsName = (ext: string) =>\n        `/projects/${project}/${name}/${name}.${ext}`;\n\n      const [hdl, tst, cmp] = await Promise.all([\n        fs.readFile(fsName(\"hdl\")).catch(() => makeHdl(name)),\n        fs.readFile(fsName(\"tst\")).catch(() => makeTst()),\n        fs.readFile(fsName(\"cmp\")).catch(() => makeCmp()),\n      ]);\n\n      dispatch.current({ action: \"setFiles\", payload: { hdl, tst, cmp } });\n      this.compileChip(hdl);\n      this.compileTest(tst);\n    },\n\n    async saveChip(hdl: string, prj = project, name = chipName) {\n      dispatch.current({ action: \"setFiles\", payload: { hdl } });\n      const path = `/projects/${prj}/${name}/${name}.hdl`;\n      await fs.writeFile(path, hdl);\n      setStatus(`Saved ${path}`);\n    },\n\n    toggle(pin: Pin, i: number | undefined) {\n      if (i !== undefined) {\n        pin.busVoltage = pin.busVoltage ^ (1 << i);\n      } else {\n        if (pin.width === 1) {\n          pin.toggle();\n        } else {\n          pin.busVoltage += 1;\n        }\n      }\n      chip.eval();\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    clock() {\n      clock.toggle();\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    useBuiltin() {\n      const nextChip = getBuiltinChip(chipName);\n      if (isErr(nextChip)) {\n        setStatus(\n          `Failed to load builtin ${chipName}: ${display(Err(nextChip))}`\n        );\n        return;\n      }\n      this.replaceChip(Ok(nextChip));\n    },\n\n    reloadChip() {\n      this.loadChip(project, chipName);\n    },\n\n    compileTest(file: string) {\n      dispatch.current({ action: \"setFiles\", payload: { tst: file } });\n      const tst = TST.parse(file);\n\n      if (isErr(tst)) {\n        setStatus(t`Failed to parse test`);\n        return false;\n      }\n      setStatus(t`Parsed tst`);\n\n      test = ChipTest.from(Ok(tst)).with(chip);\n      test.setFileSystem(fs);\n      dispatch.current({ action: \"updateTestStep\" });\n      return true;\n    },\n\n    async runTest(file: string) {\n      if (!this.compileTest(file)) {\n        return;\n      }\n      dispatch.current({ action: \"testRunning\" });\n\n      fs.pushd(\"/samples\");\n      await test.run();\n      fs.popd();\n\n      dispatch.current({ action: \"updateTestStep\" });\n    },\n\n    async tick() {\n      await test.step();\n    },\n  };\n\n  return { initialState, reducers, actions };\n}\n\nexport function useChipPageStore() {\n  const fs = useContext(StorageContext);\n  const { setStatus } = useContext(AppContext);\n  const storage: Record<string, string> = useMemo(() => localStorage, []);\n\n  const dispatch = useRef<ChipStoreDispatch>(() => {});\n\n  const { initialState, reducers, actions } = useMemo(\n    () => makeChipStore(fs, setStatus, storage, dispatch),\n    [fs, setStatus, storage, dispatch]\n  );\n\n  const [state, dispatcher] = useImmerReducer(reducers, initialState);\n  dispatch.current = dispatcher;\n\n  return { state, dispatch, actions };\n}\n","import ohm from \"ohm-js\";\nimport raw from \"raw.macro\";\nimport { grammars, makeParser, baseSemantics } from \"./base\";\n\nexport type Cell = string;\nexport type Line = Cell[];\nexport type Cmp = Line[];\n\nexport const cmpGrammar = raw(\"./grammars/cmp.ohm\");\nexport const grammar = ohm.grammar(cmpGrammar, grammars);\nexport const cmpSemantics = grammar.extendSemantics(baseSemantics);\n\ncmpSemantics.addAttribute<Cell>(\"cell\", {\n  cell(value, _) {\n    return value.sourceString;\n  },\n});\n\ncmpSemantics.addAttribute<Line>(\"line\", {\n  line(_a, cells, _b) {\n    return cells.children.map((c) => c.cell);\n  },\n});\n\ncmpSemantics.addAttribute<Cmp>(\"root\", {\n  Root(lines) {\n    return lines.children.map((c) => c.line);\n  },\n});\n\nexport const CMP = {\n  grammar: cmpGrammar,\n  semantics: cmpSemantics,\n  parser: grammar,\n  parse: makeParser<Cmp>(grammar, cmpSemantics),\n};\n","import { Plural, Trans } from \"@lingui/macro\";\nimport { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { display } from \"@davidsouther/jiffies/lib/esm/display\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range\";\nimport { CMP } from \"../languages/cmp\";\n\nexport const DiffTable = ({\n  className = \"\",\n  out,\n  cmp,\n}: {\n  out: string;\n  cmp: string;\n  className?: string;\n}) => {\n  const output = CMP.parse(out);\n  const compare = CMP.parse(cmp);\n\n  if (isErr(output)) {\n    return (\n      <details>\n        <summary>\n          <Trans>Failed to parse output</Trans>\n        </summary>\n        <pre>{display(Err(output))}</pre>\n        <code>\n          <pre>{out}</pre>\n        </code>\n      </details>\n    );\n  }\n\n  if (isErr(compare)) {\n    return (\n      <details>\n        <summary>\n          <Trans>Failed to parse compare</Trans>\n        </summary>\n        <code>\n          <pre>{display(Err(compare))}</pre>\n          <pre>{cmp}</pre>\n        </code>\n      </details>\n    );\n  }\n\n  const cmpData = Ok(compare);\n  const outData = Ok(output);\n  let failures = 0;\n  const table = range(0, Math.max(cmpData.length, outData.length)).map((i) => {\n    const cmpI = cmpData[i] ?? [];\n    const outI = outData[i] ?? [];\n    return range(0, Math.max(cmpI.length, outI.length))\n      .map((_, j) => [cmpI[j] ?? \"\", outI[j] ?? \"\"])\n      .map(([cmp, out]) => {\n        const cell = {\n          cmp: cmp ?? '\"',\n          out: out ?? '\"',\n          pass:\n            cmp?.trim().match(/^\\*+$/) !== null || out?.trim() === cmp?.trim(),\n        };\n        if (!cell.pass) {\n          failures += 1;\n        }\n        return cell;\n      });\n  });\n\n  return (\n    <div className={\"scroll-x \" + className}>\n      <p>\n        <Plural\n          value={failures}\n          one={`${failures} failure`}\n          other={`${failures} failures`}\n        />\n      </p>\n      <table\n        style={{\n          fontFamily: \"var(--font-family-monospace)\",\n          marginBottom: \"none\",\n        }}\n      >\n        <tbody>\n          {table.map((row, i) => (\n            <tr key={i}>\n              {row.map(({ cmp, out, pass }, i) => (\n                <DiffCell cmp={cmp} out={out} pass={pass} key={i} />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst DiffCell = ({\n  cmp,\n  out,\n  pass,\n}: {\n  cmp: string;\n  out: string;\n  pass: boolean;\n}) => {\n  return pass ? (\n    <>\n      <td>{cmp}</td>\n      <td></td>\n    </>\n  ) : (\n    <>\n      <td>\n        <ins>{cmp}</ins>\n      </td>\n      <td>\n        <del>{out}</del>\n      </td>\n    </>\n  );\n};\n","import { debounce } from \"@davidsouther/jiffies/lib/esm/debounce\";\nimport { Trans } from \"@lingui/macro\";\nimport MonacoEditor, { useMonaco } from \"@monaco-editor/react\";\nimport * as monacoT from \"monaco-editor/esm/vs/editor/editor.api\";\nimport { OnMount } from \"@monaco-editor/react\";\nimport ohm from \"ohm-js\";\nimport {\n  CSSProperties,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { AppContext } from \"../App.context\";\n\nimport { Span, UNKNOWN_PARSE_ERROR } from \"../languages/base\";\n\nimport \"./editor.scss\";\n\nexport const ErrorPanel = ({ error }: { error?: ohm.MatchResult }) => {\n  return error?.failed() ? (\n    <details className=\"ErrorPanel\" open>\n      <summary role=\"button\" className=\"secondary\">\n        <Trans>Parse Error</Trans>\n      </summary>\n      <pre>\n        <code>\n          {error?.message ?? error?.shortMessage ?? UNKNOWN_PARSE_ERROR}\n        </code>\n      </pre>\n    </details>\n  ) : (\n    <></>\n  );\n};\n\nconst Textarea = ({\n  value,\n  onChange,\n  language,\n  disabled = false,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n  language: string;\n  disabled?: boolean;\n}) => {\n  const [text, setText] = useState(value);\n  return (\n    <textarea\n      data-testid={`editor-${language}`}\n      disabled={disabled}\n      value={text}\n      onChange={(e) => {\n        const value = e.target?.value;\n        setText(value);\n        onChange(value);\n      }}\n    />\n  );\n};\n\nconst Monaco = ({\n  value,\n  onChange,\n  language,\n  error,\n  disabled = false,\n  highlight,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n  language: string;\n  error?: ohm.MatchResult | undefined;\n  disabled?: boolean;\n  highlight?: Span;\n}) => {\n  const { theme } = useContext(AppContext);\n  const monaco = useMonaco();\n\n  const editor = useRef<monacoT.editor.IStandaloneCodeEditor>();\n  const decorations = useRef<string[]>([]);\n\n  // Set options when mounting\n  const onMount: OnMount = useCallback((ed) => {\n    editor.current = ed;\n    editor.current?.updateOptions({\n      fontFamily: `\"JetBrains Mono\", source-code-pro, Menlo, Monaco,\n      Consolas, \"Roboto Mono\", \"Ubuntu Monospace\", \"Noto Mono\", \"Oxygen Mono\",\n      \"Liberation Mono\", monospace, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\", \"Noto Color Emoji\"`,\n      fontSize: 16,\n      minimap: {\n        enabled: false,\n      },\n    });\n  }, []);\n\n  // Mark and center highlighted spans\n  useEffect(() => {\n    if (!editor.current) return;\n    const model = editor.current.getModel();\n    const nextDecoration: monacoT.editor.IModelDeltaDecoration[] = [];\n    if (model && highlight) {\n      const start = model.getPositionAt(highlight.start);\n      const end = model.getPositionAt(highlight.end);\n      const range = monaco?.Range.fromPositions(start, end);\n      if (range) {\n        nextDecoration.push({\n          range,\n          options: { inlineClassName: \"highlight\" },\n        });\n        editor.current.revealRangeInCenter(range);\n      }\n    }\n    decorations.current = editor.current.deltaDecorations(\n      decorations.current,\n      nextDecoration\n    );\n  }, [editor, highlight, monaco]);\n\n  // Set themes\n  useEffect(() => {\n    const isDark =\n      theme === \"system\"\n        ? window.matchMedia(\"prefers-color-scheme: dark\").matches\n        : theme === \"dark\";\n    editor.current?.updateOptions({\n      theme: isDark ? \"vs-dark\" : \"vs\",\n    });\n  }, [editor, theme]);\n\n  // Prevent editing disabled editors\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    editor.current.updateOptions({ readOnly: disabled });\n  }, [editor, disabled]);\n\n  // Add error markers on parse failure\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    if (monaco === null) return;\n    const model = editor.current.getModel();\n    if (model === null) return;\n    if (error === undefined || error.succeeded()) {\n      monaco.editor.setModelMarkers(model, language, []);\n      return;\n    }\n    // Line 7, col 5:\n    const { line, column, message } =\n      /Line (?<line>\\d+), col (?<column>\\d+): (?<message>.*)/.exec(\n        error.shortMessage ?? \"\"\n      )?.groups ?? { line: 1, column: 1, message: \"could not parse error\" };\n    const startLineNumber = Number(line);\n    const endLineNumber = startLineNumber;\n    const startColumn = Number(column);\n    const restOfLine = model\n      .getLineContent(startLineNumber)\n      .substring(startColumn - 1);\n    let endColumn =\n      startColumn + (restOfLine.match(/([^\\s]+)/)?.[0].length ?? 1);\n    if (endColumn <= startColumn) {\n      endColumn = startColumn + 1;\n    }\n\n    monaco.editor.setModelMarkers(model, language, [\n      {\n        message,\n        startColumn,\n        startLineNumber,\n        endColumn,\n        endLineNumber,\n        severity: monacoT.MarkerSeverity.Error,\n      },\n    ]);\n  }, [error, editor, monaco, language]);\n\n  return (\n    <>\n      <MonacoEditor\n        value={value}\n        onChange={(v = \"\") => onChange(v)}\n        language={language}\n        onMount={onMount}\n      />\n      {disabled && <div className=\"overlay\" />}\n    </>\n  );\n};\n\nexport const Editor = ({\n  className = \"\",\n  style = {},\n  disabled = false,\n  value,\n  onChange,\n  grammar,\n  language,\n  highlight,\n}: {\n  className?: string;\n  style?: CSSProperties;\n  disabled?: boolean;\n  value: string;\n  onChange: (source: string) => void;\n  grammar: ohm.Grammar;\n  language: string;\n  highlight?: Span;\n}) => {\n  const [error, setError] = useState<ohm.MatchResult>();\n  const { monaco } = useContext(AppContext);\n\n  const parse = useCallback(\n    (text: string = \"\") => {\n      const parsed = grammar.match(text);\n      setError(parsed.failed() ? parsed : undefined);\n    },\n    [setError, grammar]\n  );\n\n  useEffect(() => parse(value), [parse, value]);\n  const doParse = useMemo(() => debounce(parse, 500), [parse]);\n\n  const onChangeCB = useCallback(\n    (text: string = \"\") => {\n      onChange(text);\n      doParse(text);\n    },\n    [doParse, onChange]\n  );\n\n  return (\n    <div className={`Editor ${className}`} style={style}>\n      {monaco.canUse && monaco.wants ? (\n        <Monaco\n          value={value}\n          onChange={onChangeCB}\n          language={language}\n          error={error}\n          disabled={disabled}\n          highlight={highlight}\n        />\n      ) : (\n        <>\n          <Textarea\n            value={value}\n            onChange={onChangeCB}\n            language={language}\n            disabled={disabled}\n          />\n          <ErrorPanel error={error} />\n        </>\n      )}\n    </div>\n  );\n};\n","import { display } from \"@davidsouther/jiffies/lib/esm/display\";\nimport { Trans } from \"@lingui/macro\";\nimport { useEffect, useState } from \"react\";\nimport { Clock } from \"../simulator/chip/clock\";\n\nconst clock = Clock.get();\n\nexport const Clockface = () => {\n  const [clockface, setClockface] = useState(display(clock));\n\n  useEffect(() => {\n    const subscription = clock.$.subscribe(() => {\n      setClockface(display(clock));\n    });\n    return () => subscription.unsubscribe();\n  });\n\n  return (\n    <>\n      <Trans>Clock:</Trans> {display(clockface)}\n    </>\n  );\n};\n","import { Trans } from \"@lingui/macro\";\nimport { ReactNode } from \"react\";\nimport { Chip } from \"../../simulator/chip/chip\";\n\nexport const Visualizations = ({ parts }: { parts: Set<Chip> }) => {\n  const visualizations: [string, ReactNode][] = [...parts].flatMap((part) =>\n    part.render().map((v, i) => [`${part.id}_${i}`, v] as [string, ReactNode])\n  );\n\n  if (visualizations.length === 0) {\n    return <Trans>None</Trans>;\n  }\n\n  return (\n    <>\n      {visualizations.map(([p, v]) => (\n        <div key={p}>{v}</div>\n      ))}\n    </>\n  );\n};\n","import { Dispatch, MutableRefObject, useMemo, useRef } from \"react\";\nimport { useImmerReducer } from \"../util/react\";\n\nexport const MAX_STEPS = 1000;\n\nexport abstract class Timer {\n  frame() {\n    this.tick();\n    this.finishFrame();\n  }\n\n  abstract tick(): void;\n\n  abstract finishFrame(): void;\n\n  abstract reset(): void;\n\n  abstract toggle(): void;\n\n  steps = 1; // How many steps to take per update\n  speed = 1000; // how often to update, in ms\n  get running() {\n    return this.#running;\n  }\n\n  #running = false;\n  #sinceLastFrame = 0;\n  #lastUpdate = 0;\n  #run = () => {\n    if (!this.#running) {\n      return;\n    }\n    const now = Date.now();\n    const delta = now - this.#lastUpdate;\n    this.#lastUpdate = now;\n    this.#sinceLastFrame += delta;\n    if (this.#sinceLastFrame > this.speed) {\n      for (let i = 0; i < Math.min(this.steps, MAX_STEPS); i++) {\n        this.tick();\n      }\n      this.finishFrame();\n      this.#sinceLastFrame -= this.speed;\n    }\n    requestAnimationFrame(this.#run);\n  };\n\n  start() {\n    this.#running = true;\n    this.#lastUpdate = Date.now() - this.speed;\n    this.#run();\n    this.toggle();\n  }\n\n  stop() {\n    this.#running = false;\n    this.toggle();\n  }\n}\n\nexport interface TimerStoreState {\n  steps: number;\n  speed: number;\n  running: boolean;\n}\n\nexport type TimerStoreDispatch = Dispatch<{\n  action: keyof ReturnType<typeof makeTimerStore>[\"reducers\"];\n  payload?: {};\n}>;\n\nconst makeTimerStore = (\n  timer: Timer,\n  dispatch: MutableRefObject<TimerStoreDispatch>\n) => {\n  const initialState: TimerStoreState = {\n    running: timer.running,\n    speed: timer.speed,\n    steps: timer.steps,\n  };\n\n  const finishFrame = timer.finishFrame.bind(timer);\n  timer.finishFrame = function () {\n    finishFrame();\n    dispatch.current({ action: \"update\" });\n  };\n\n  const reducers = {\n    update(state: TimerStoreState) {\n      state.running = timer.running;\n      state.speed = timer.speed;\n      state.steps = timer.steps;\n    },\n    setSteps(state: TimerStoreState, steps: number) {\n      state.steps = steps;\n    },\n    setSpeed(state: TimerStoreState, speed: number) {\n      state.speed = speed;\n    },\n  };\n\n  const actions = {\n    frame() {\n      timer.frame();\n    },\n    start() {\n      timer.start();\n      dispatch.current({ action: \"update\" });\n    },\n    stop() {\n      timer.stop();\n      dispatch.current({ action: \"update\" });\n    },\n    reset() {\n      timer.reset();\n      dispatch.current({ action: \"update\" });\n    },\n  };\n\n  return { initialState, reducers, actions };\n};\n\nexport function useTimer(timer: Timer) {\n  const dispatch = useRef<TimerStoreDispatch>(() => {});\n\n  const { initialState, reducers, actions } = useMemo(\n    () => makeTimerStore(timer, dispatch),\n    [timer, dispatch]\n  );\n\n  const [state, dispatcher] = useImmerReducer(reducers, initialState);\n\n  dispatch.current = dispatcher;\n\n  return { state, dispatch: dispatch.current, actions };\n}\n","import { ReactNode } from \"react\";\nimport { t } from \"@lingui/macro\";\nimport { Timer, useTimer } from \"../simulator/timer\";\nimport { Icon } from \"./pico/icon\";\n\nexport const Runbar = (props: { runner: Timer; children?: ReactNode }) => {\n  const runner = useTimer(props.runner);\n  return (\n    <fieldset role=\"group\">\n      <button\n        className=\"flex-0\"\n        onClick={() => runner.actions.frame()}\n        data-tooltip={t`Next`}\n      >\n        <Icon name=\"skip_next\"></Icon>\n      </button>\n      <button\n        className=\"flex-0\"\n        onClick={() => runner.actions.reset()}\n        data-tooltip={t`Reset`}\n      >\n        <Icon name=\"first_page\"></Icon>\n      </button>\n      <button\n        className=\"flex-0\"\n        onClick={() =>\n          runner.state.running ? runner.actions.stop() : runner.actions.start()\n        }\n        data-tooltip={runner.state.running ? t`Stop` : t`Run`}\n      >\n        <Icon name={runner.state.running ? \"pause\" : \"play_arrow\"}></Icon>\n      </button>\n      <select\n        className=\"flex-1\"\n        name=\"speed\"\n        value={runner.state.speed}\n        onChange={(e) => {\n          runner.dispatch({\n            action: \"setSpeed\",\n            payload: Number(e.target?.value ?? runner.state.speed),\n          });\n        }}\n        disabled={runner.state.running}\n      >\n        {[\n          [16, t`60FPS`],\n          [500, t`Fast`],\n          [1000, t`Normal`],\n          [2000, t`Slow`],\n        ].map(([speed, label]) => (\n          <option key={speed} value={speed}>\n            {label}\n          </option>\n        ))}\n      </select>\n      <select\n        className=\"flex-1\"\n        name=\"steps\"\n        value={runner.state.steps}\n        onChange={(e) => {\n          runner.dispatch({\n            action: \"setSteps\",\n            payload: Number(e.target?.value ?? runner.state.steps),\n          });\n        }}\n        disabled={runner.state.running}\n      >\n        {[\n          [1, t`1 Step`],\n          [500, \"500\"],\n          [1000, \"1000\"],\n          [2000, \"2000\"],\n        ].map(([steps, label]) => (\n          <option key={steps} value={steps}>\n            {label}\n          </option>\n        ))}\n      </select>\n      {props.children}\n    </fieldset>\n  );\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport { Trans } from \"@lingui/macro\";\n\nimport \"./chip.scss\";\n\nimport { FullPinout } from \"../components/pinout\";\nimport { PROJECTS, PROJECT_NAMES, useChipPageStore } from \"./chip.store\";\nimport { DiffTable } from \"../components/difftable\";\nimport { Editor } from \"../components/editor\";\nimport { HDL } from \"../languages/hdl\";\nimport { TST } from \"../languages/tst\";\nimport { CMP } from \"../languages/cmp\";\nimport { Clockface } from \"../components/clockface\";\nimport { Visualizations } from \"../components/chips/visualizations\";\nimport { Accordian, Panel } from \"../components/shell/panel\";\nimport { Runbar } from \"../components/runbar\";\nimport { Timer } from \"../simulator/timer\";\nimport { useStateInitializer } from \"../util/react\";\n\nexport const Chip = () => {\n  const { state, actions, dispatch } = useChipPageStore();\n\n  const [hdl, setHdl] = useStateInitializer(state.files.hdl);\n  const [tst, setTst] = useStateInitializer(state.files.tst);\n  const [cmp, setCmp] = useStateInitializer(state.files.cmp);\n  const [out] = useStateInitializer(state.files.out);\n\n  const saveChip = () => {\n    actions.saveChip(hdl);\n  };\n\n  const compile = useRef<() => void>();\n  compile.current = async () => {\n    await actions.updateFiles({ hdl, tst, cmp });\n  };\n\n  const runner = useRef<Timer>();\n  useEffect(() => {\n    runner.current = new (class ChipTimer extends Timer {\n      async reset(): Promise<void> {\n        await compile.current?.();\n        await actions.reset();\n      }\n\n      finishFrame(): void {\n        dispatch.current({ action: \"updateTestStep\" });\n      }\n\n      async tick(): Promise<void> {\n        actions.tick();\n      }\n\n      toggle(): void {\n        dispatch.current({ action: \"updateTestStep\" });\n      }\n    })();\n\n    return () => {\n      runner.current?.stop();\n    };\n  }, [compile, actions, dispatch]);\n\n  const [useBuiltin, setUseBuiltin] = useState(false);\n  const toggleUseBuiltin = async () => {\n    if (useBuiltin) {\n      compile.current?.();\n      setUseBuiltin(false);\n    } else {\n      actions.useBuiltin();\n      setUseBuiltin(true);\n    }\n  };\n\n  const selectors = (\n    <>\n      <div>\n        <Trans>Chip</Trans>\n      </div>\n      <fieldset role=\"group\">\n        <select\n          value={state.controls.project}\n          onChange={({ target: { value } }) => {\n            actions.setProject(value as keyof typeof PROJECTS);\n          }}\n          data-testid=\"project-picker\"\n        >\n          {PROJECT_NAMES.map(([number, label]) => (\n            <option key={number} value={number}>\n              {label}\n            </option>\n          ))}\n        </select>\n        <select\n          value={state.controls.chipName}\n          onChange={({ target: { value } }) => {\n            actions.setChip(value);\n          }}\n          data-testid=\"chip-picker\"\n        >\n          {state.controls.chips.map((chip) => (\n            <option key={chip} value={chip}>\n              {chip}\n            </option>\n          ))}\n        </select>\n      </fieldset>\n    </>\n  );\n  const hdlPanel = (\n    <Panel\n      className=\"_hdl_panel\"\n      header={\n        <>\n          <div tabIndex={0}>HDL</div>\n          <fieldset>\n            {state.controls.hasBuiltin && (\n              <label>\n                <input\n                  type=\"checkbox\"\n                  role=\"switch\"\n                  checked={useBuiltin}\n                  onChange={toggleUseBuiltin}\n                />\n                <Trans>Builtin</Trans>\n              </label>\n            )}\n          </fieldset>\n          <fieldset role=\"group\">\n            <button\n              onClick={compile.current}\n              onKeyDown={compile.current}\n              disabled={useBuiltin}\n            >\n              <Trans>Eval</Trans>\n            </button>\n            <button onClick={saveChip} disabled={useBuiltin}>\n              <Trans>Save</Trans>\n            </button>\n            <button\n              style={{ whiteSpace: \"nowrap\" }}\n              onClick={() => {\n                actions.clock();\n              }}\n              disabled={!state.sim.clocked}\n              data-testid=\"clock\"\n            >\n              <Clockface />\n            </button>\n            <button\n              onClick={() => {\n                actions.reset();\n              }}\n              disabled={!state.sim.clocked}\n              data-testid=\"clock-reset\"\n            >\n              <Trans>Reset</Trans>\n            </button>\n          </fieldset>\n        </>\n      }\n    >\n      <Editor\n        className=\"flex-1\"\n        value={hdl}\n        onChange={setHdl}\n        grammar={HDL.parser}\n        language={\"hdl\"}\n        disabled={useBuiltin}\n      />\n    </Panel>\n  );\n\n  const pinsPanel = (\n    <Panel className=\"_parts_panel\" header={selectors}>\n      <FullPinout\n        ins={{\n          pins: state.sim.inPins,\n          toggle: (pin, i) => {\n            actions.toggle(pin, i);\n          },\n        }}\n        outs={{ pins: state.sim.outPins }}\n        internal={{ pins: state.sim.internalPins }}\n      />\n      <Accordian summary={<Trans>Visualizations</Trans>}>\n        <main>\n          <Visualizations parts={state.sim.parts} />\n        </main>\n      </Accordian>\n    </Panel>\n  );\n  const testPanel = (\n    <Panel className=\"_test_panel\">\n      <Accordian\n        summary={\n          <>\n            <div className=\"flex-1\">\n              <Trans>Test</Trans>\n            </div>\n            <div className=\"flex-2\">\n              {runner.current && <Runbar runner={runner.current} />}\n            </div>\n          </>\n        }\n        style={{ position: \"relative\" }}\n      >\n        <Editor\n          style={{\n            position: \"absolute\",\n            height: \"calc(100% - var(--line-height) * var(--font-size) * 2)\",\n          }}\n          value={tst}\n          onChange={setTst}\n          grammar={TST.parser}\n          language={\"tst\"}\n          highlight={state.controls.span}\n        />\n      </Accordian>\n      <Accordian\n        summary={<Trans>Comparison</Trans>}\n        style={{ position: \"relative\" }}\n      >\n        <Editor\n          style={{\n            position: \"absolute\",\n            height: \"calc(100% - var(--line-height) * var(--font-size) * 2)\",\n          }}\n          value={cmp}\n          onChange={setCmp}\n          grammar={CMP.parser}\n          language={\"cmp\"}\n        />\n      </Accordian>\n      <Accordian summary={<Trans>Diff</Trans>} open={true}>\n        <div style={{ paddingLeft: \"var(--block-spacing-horizontal)\" }}>\n          <DiffTable cmp={cmp} out={out} />\n        </div>\n      </Accordian>\n    </Panel>\n  );\n\n  return (\n    <div className=\"ChipPage grid\">\n      {hdlPanel}\n      {pinsPanel}\n      {testPanel}\n    </div>\n  );\n};\n\nexport default Chip;\n","export type COMMANDS_ASM =\n  | \"0\"\n  | \"1\"\n  | \"-1\"\n  | \"D\"\n  | \"A\"\n  | \"M\"\n  | \"!D\"\n  | \"!A\"\n  | \"-D\"\n  | \"-A\"\n  | \"D+1\"\n  | \"A+1\"\n  | \"D-1\"\n  | \"A-1\"\n  | \"D+A\"\n  | \"D-A\"\n  | \"D-M\"\n  | \"A-D\"\n  | \"D&A\"\n  | \"D&M\"\n  | \"D|A\"\n  | \"D|M\";\n\nexport type COMMANDS_OP =\n  | 0b101010\n  | 0b111111\n  | 0b111010\n  | 0b001100\n  | 0b110000\n  | 0b110000\n  | 0b001101\n  | 0b110001\n  | 0b001111\n  | 0b110011\n  | 0b011111\n  | 0b110111\n  | 0b001110\n  | 0b110010\n  | 0b000010\n  | 0b010011\n  | 0b010011\n  | 0b000111\n  | 0b000000\n  | 0b000000\n  | 0b010101\n  | 0b010101;\n\nexport const COMMANDS: {\n  asm: Record<COMMANDS_ASM, COMMANDS_OP>;\n  op: Record<COMMANDS_OP, COMMANDS_ASM>;\n} = {\n  asm: {\n    \"0\": 0b101010, // 42 0x2A\n    \"1\": 0b111111, // 63 0x3F\n    \"-1\": 0b111010, // 58 0x3A\n    D: 0b001100, // 12 0x0C\n    A: 0b110000, // 48 0x30\n    M: 0b110000, // 48 0x30\n    \"!D\": 0b001101, // 13 0x0D\n    \"!A\": 0b110001, // 49 0x31\n    \"-D\": 0b001111, // 15 0x0F\n    \"-A\": 0b110011, // 51 0x33\n    \"D+1\": 0b011111, // 31 0x1F\n    \"A+1\": 0b110111, // 55 0x37\n    \"D-1\": 0b001110, // 14 0x0E\n    \"A-1\": 0b110010, // 50 0x32\n    \"D+A\": 0b000010, //  2 0x02\n    \"D-A\": 0b010011, // 19 0x13\n    \"D-M\": 0b010011, // 19 0x13\n    \"A-D\": 0b000111, //  7 0x07\n    \"D&A\": 0b000000, //  0 0x00\n    \"D&M\": 0b000000, //  0 0x00\n    \"D|A\": 0b010101, // 21 0x15\n    \"D|M\": 0b010101, // 21 0x15\n  },\n  op: {\n    0x2a: \"0\",\n    0x3f: \"1\",\n    0x3a: \"-1\",\n    0x0c: \"D\",\n    0x30: \"A\",\n    0x0d: \"!D\",\n    0x31: \"!A\",\n    0x0f: \"-D\",\n    0x33: \"-A\",\n    0x1f: \"D+1\",\n    0x37: \"A+1\",\n    0x0e: \"D-1\",\n    0x32: \"A-1\",\n    0x02: \"D+A\",\n    0x13: \"D-A\",\n    0x07: \"A-D\",\n    0x00: \"D&A\",\n    0x15: \"D|A\",\n  },\n};\n\nexport type ASSIGN_ASM = \"\" | \"M\" | \"D\" | \"MD\" | \"A\" | \"AM\" | \"AD\" | \"AMD\";\nexport type ASSIGN_OP = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\nexport const ASSIGN: {\n  asm: Record<ASSIGN_ASM, ASSIGN_OP>;\n  op: Record<ASSIGN_OP, ASSIGN_ASM>;\n} = {\n  asm: {\n    \"\": 0x0,\n    M: 0b001,\n    D: 0b010,\n    MD: 0b011,\n    A: 0b100,\n    AM: 0b101,\n    AD: 0b110,\n    AMD: 0b111,\n  },\n  op: {\n    0x0: \"\",\n    0x1: \"M\",\n    0x2: \"D\",\n    0x3: \"MD\",\n    0x4: \"A\",\n    0x5: \"AM\",\n    0x6: \"AD\",\n    0x7: \"AMD\",\n  },\n};\n\nexport type JUMP_ASM =\n  | \"\"\n  | \"JGT\"\n  | \"JEQ\"\n  | \"JGE\"\n  | \"JLT\"\n  | \"JNE\"\n  | \"JLE\"\n  | \"JMP\";\nexport type JUMP_OP = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\nexport const JUMP: {\n  asm: Record<JUMP_ASM, JUMP_OP>;\n  op: Record<JUMP_OP, JUMP_ASM>;\n} = {\n  asm: {\n    \"\": 0b0,\n    JGT: 0b001,\n    JEQ: 0b010,\n    JGE: 0b011,\n    JLT: 0b100,\n    JNE: 0b101,\n    JLE: 0b110,\n    JMP: 0b111,\n  },\n  op: {\n    0x0: \"\",\n    0x1: \"JGT\",\n    0x2: \"JEQ\",\n    0x3: \"JGE\",\n    0x4: \"JLT\",\n    0x5: \"JNE\",\n    0x6: \"JLE\",\n    0x7: \"JMP\",\n  },\n};\n\nexport const Flags = {\n  0x01: \"Positive\",\n  0x00: \"Zero\",\n  0x0f: \"Negative\",\n  Positive: 0x01,\n  Zero: 0x00,\n  Negative: 0x0f,\n};\n\nexport function alu(op: number, d: number, a: number): [number, number] {\n  let o = 0;\n  switch (op) {\n    case 0x2a:\n      o = 0;\n      break;\n    case 0x3f:\n      o = 1;\n      break;\n    case 0x3a:\n      o = -1;\n      break;\n    case 0x0c:\n      o = d;\n      break;\n    case 0x30:\n      o = a;\n      break;\n    case 0x0d:\n      o = ~d;\n      break;\n    case 0x31:\n      o = ~a;\n      break;\n    case 0x0f:\n      o = -d;\n      break;\n    case 0x33:\n      o = -a;\n      break;\n    case 0x1f:\n      o = d + 1;\n      break;\n    case 0x37:\n      o = a + 1;\n      break;\n    case 0x0e:\n      o = d - 1;\n      break;\n    case 0x32:\n      o = a - 1;\n      break;\n    case 0x02:\n      o = d + a;\n      break;\n    case 0x13:\n      o = d - a;\n      break;\n    case 0x07:\n      o = a - d;\n      break;\n    case 0x00:\n      o = d & a;\n      break;\n    case 0x15:\n      o = d | a;\n      break;\n  }\n\n  o = o & 0xffff;\n  const flags =\n    o === 0 ? Flags.Zero : o & 0x8000 ? Flags.Negative : Flags.Positive;\n  return [o, flags];\n}\n","import {\n  ASSIGN,\n  ASSIGN_ASM,\n  ASSIGN_OP,\n  COMMANDS,\n  COMMANDS_ASM,\n  COMMANDS_OP,\n  JUMP,\n  JUMP_ASM,\n  JUMP_OP,\n} from \"../simulator/cpu/alu\";\n\nexport type CommandOps = keyof typeof COMMANDS.op;\nexport type JumpOps = keyof typeof JUMP.op;\nexport type StoreOps = keyof typeof ASSIGN.op;\n\nexport function asm(op: number): string {\n  if (op & 0x8000) {\n    return cInstruction(op);\n  }\n  return aInstruction(op);\n}\n\nfunction cInstruction(op: number): string {\n  op = op & 0xffff; // Clear high order bits\n  const mop = (op & 0x1000) >> 12;\n  let cop: CommandOps = ((op & 0b0000111111000000) >> 6) as CommandOps;\n  let sop: StoreOps = ((op & 0b0000000000111000) >> 3) as StoreOps;\n  let jop: JumpOps = (op & 0b0000000000000111) as JumpOps;\n\n  if (COMMANDS.op[cop] === undefined) {\n    // Invalid commend\n    return \"#ERR\";\n  }\n\n  let command = COMMANDS.op[cop];\n  if (mop) {\n    command = command.replace(/A/g, \"M\") as COMMANDS_ASM;\n  }\n\n  const store = ASSIGN.op[sop];\n  const jump = JUMP.op[jop];\n\n  let instruction: string = command;\n  if (store) {\n    instruction = `${store}=${instruction}`;\n  }\n  if (jump) {\n    instruction = `${instruction};${jump}`;\n  }\n\n  return instruction;\n}\n\nfunction aInstruction(op: number): string {\n  return \"@\" + (op & 0x7fff).toString(10);\n}\n\nexport function op(asm: string): number {\n  if (asm[0] === \"@\") {\n    return aop(asm);\n  } else {\n    return cop(asm);\n  }\n}\n\nfunction aop(asm: string): number {\n  return parseInt(asm.substring(1), 10);\n}\n\nfunction cop(asm: string): number {\n  let parts = asm.match(\n    /(?:(?<assign>[AMD]{1,3})=)?(?<operation>[-!01ADM&|]{1,3})(?:;(?<jump>JGT|JLT|JGE|JLE|JEQ|JMP))?/\n  );\n  const { assign, operation, jump } = parts?.groups ?? {};\n  const mode = operation.includes(\"M\") || assign.includes(\"M\");\n  const aop = ASSIGN.asm[(assign as ASSIGN_ASM) ?? \"\"];\n  const jop = JUMP.asm[(jump as JUMP_ASM) ?? \"\"];\n  const cop = COMMANDS.asm[(operation as COMMANDS_ASM) ?? \"\"];\n\n  return makeC(mode, cop, aop, jop);\n}\n\nexport function makeC(\n  isM: boolean,\n  op: COMMANDS_OP,\n  assign: ASSIGN_OP = 0,\n  jmp: JUMP_OP = 0\n): number {\n  const C = 0xe000;\n  const A = isM ? 0x1000 : 0;\n  const O = op << 6;\n  const D = (assign ?? 0) << 3;\n  const J = jmp ?? 0;\n  return C + A + O + D + J;\n}\n","const Hex = [\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n];\n\nexport function chars(i: number): string {\n  return Hex[i] ?? \"X\";\n}\n\nexport function bits(i: number): string {\n  switch (i) {\n    case 0x0:\n      return \"0000\";\n    case 0x1:\n      return \"0001\";\n    case 0x2:\n      return \"0010\";\n    case 0x3:\n      return \"0011\";\n    case 0x4:\n      return \"0100\";\n    case 0x5:\n      return \"0101\";\n    case 0x6:\n      return \"0110\";\n    case 0x7:\n      return \"0111\";\n    case 0x8:\n      return \"1000\";\n    case 0x9:\n      return \"1001\";\n    case 0xa:\n      return \"1010\";\n    case 0xb:\n      return \"1011\";\n    case 0xc:\n      return \"1100\";\n    case 0xd:\n      return \"1101\";\n    case 0xe:\n      return \"1110\";\n    case 0xf:\n      return \"1111\";\n    default:\n      return \"erro\";\n  }\n}\n\nexport function int(n: string, radix: number): number {\n  let i = parseInt(n.replace(/[^\\d+-.xa-fA-F]/g, \"\"), radix);\n  return i & 0xffff;\n}\n\nexport function int16(i: string): number {\n  return int(i, 16);\n}\n\nexport function int10(i: string): number {\n  return int(i, 10);\n}\n\nexport function int2(i: string): number {\n  return int(i, 2);\n}\n\nexport function hex(i: number): string {\n  const hu = chars((i & 0xf000) >> 12);\n  const hl = chars((i & 0x0f00) >> 8);\n  const lu = chars((i & 0x00f0) >> 4);\n  const ll = chars(i & 0x000f);\n\n  return `0x${hu}${hl}${lu}${ll}`;\n}\n\nexport function bin(i: number, precision = 16): string {\n  const hu = bits((i & 0xf000) >> 12);\n  const hl = bits((i & 0x0f00) >> 8);\n  const lu = bits((i & 0x00f0) >> 4);\n  const ll = bits(i & 0x000f);\n\n  // return `${hu} ${hl} ${lu} ${ll}`;\n  return `${hu}${hl}${lu}${ll}`.substring(16 - precision); // Match the book's formatting\n}\n\nexport function dec(i: number): string {\n  i = i & 0xffff;\n  if (i === 0x8000) {\n    return \"-32768\";\n  }\n  if (i & 0x8000) {\n    i = (~i + 1) & 0x7fff;\n    return `-${i}`;\n  }\n  return `${i}`;\n}\n\nexport function uns(i: number): string {\n  i = i & 0xffff;\n  return `${i}`;\n}\n\nexport function nand16(a: number, b: number): number {\n  a = a & 0xffff;\n  b = b & 0xffff;\n  let c = ~(a & b);\n  c = c & 0xffff;\n  return c;\n}\n"],"names":["reducePin","pin","bits","range","width","map","i","voltage","reverse","reducePins","pins","entries","FullPinout","props","inBlock","PinoutBlock","header","ins","length","outBlock","outs","internalBlock","internal","className","colSpan","immPin","name","Pin","toggle","role","style","v","onClick","disabled","undefined","UNKNOWN_PARSE_ERROR","grammars","Base","ohm","baseSemantics","createSemantics","makeParser","grammar","semantics","property","root","source","match","succeeded","parsed","parse","Ok","Err","message","shortMessage","e","extendOperation","List","list","_","asIteration","addAttribute","decNumber","digits","int10","sourceString","wholeDec","binNumber","int2","hexNumber","int16","Number","num","value","identifier","__","this","Name","child","String","_a","str","_b","hdlGrammar","hdlSemantics","extendSemantics","SubBus","startNode","endNode","start","end","WireSide","index","Wire","left","right","rhs","isTerminal","lhs","Wires","children","Part","_c","wires","Parts","parts","c","BuiltinPart","PartList","ClockedList","clocked","PinDecl","PinList","Chip","body","Clocked","Root","HDL","parser","n","tstGrammar","tstSemantics","extendAttribute","Index","idx","FileName","_dot","ext","_open","dec","_close","OutputFormat","id","lpad","rpad","builtin","address","TstEvalOperation","op","TstOutputOperation","TstOutputListOperation","formats","spec","format","TstSetOperation","setOp","TstEchoOperation","TstClearEchoOperation","TstLoadROMOperation","_r","_l","file","TstRepeat","_o","statements","count","statement","TstStatement","stmt","ops","operation","span","startIdx","endIdx","break","Tst","lines","tst","clock","TST","Clock","level","LOW","ticks","subject","BehaviorSubject","$","update","Subject","next","assert","HIGH","tock","tick","Bus","state","newWidth","push","busVoltage","bit","forEach","pull","reduce","b","nextVoltage","InSubBus","bus","connect","mask","high","low","mid","OutSubBus","ConstantBus","TRUE_BUS","FALSE_BUS","parsePinDecl","toPin","groups","w","Symbol","iterator","Pins","Map","has","set","minWidth","get","insert","values","internals","Set","clockedPins","inn","out","subscribe","eval","size","offset","getBuiltin","BUILTIN_NAMES","includes","part","connections","add","to","from","isOutPin","wireOutPin","wireInPin","render","filter","toLowerCase","emplace","partPin","assertExists","chipPin","findPin","isInternal","Error","ensureWidth","remove","fs","path","load","Low","ClockedChip","unsubscribe","Math","pow","And","a","and","in","And16","and16","DMux","sel","dmux","DMux4Way","dmux4way","d","DMux8Way","dmux8way","f","g","h","mux16","mux16_4","s2","Mux","mux","Mux16","Mux4Way16","Mux8Way16","mux16_8","Nand","nand","Nand16","nand16","Not","Not16","or","Or","Or16","or16","Or8way","Xor","xor","Xor16","xor16","add16","Add16","ALUComponent","A","D","flag","bin","COMMANDS","Flags","ALUNoStat","x","y","alu","ALU","flags","ng","zr","halfAdder","HalfAdder","sum","carry","FullAdder","s","ca","fullAdder","Inc16","RegisterComponent","Bit","Register","VRegister","PC","DFF","t","asmGrammar","asmSemantics","isALabelInstruction","inst","label","asm","instructions","instruction","AInstruction","_at","val","type","CInstruction","assignN","opN","jmpN","assign","jmp","isM","jump","JUMP","store","ASSIGN","Label","ASM","passes","fillLabel","symbols","SCREEN","KEYBOARD","unfilled","line","emit","makeC","endsWith","loadHack","loadAsm","readFile","isErr","split","trim","FORMATS","Memory","memory","Int16Array","cell","current","isFinite","slice","fn","useImmerReducer","reducers","initialState","useReducer","command","produce","draft","action","payload","useStateInitializer","init","useState","setState","useEffect","Mode","mode","setMode","setValue","view","cursor","doSelect","useCallback","ref","select","doChange","target","onChange","edit","display","position","zIndex","marginTop","onBlur","onKeyPress","key","defaultValue","doScroll","scrollTop","totalHeight","toleranceHeight","bufferedItems","settings","itemHeight","minIndex","maxIndex","floor","data","limit","max","min","getData","topPaddingHeight","bottomPaddingHeight","viewportRef","useRef","useMemo","MAX_SAFE_INTEGER","startIndex","tolerance","fillVirtualScrollSettings","startState","adapter","viewportHeight","reducer","scrollReducer","dispatchScroll","row","initialScroll","div","rows","height","rowKey","overflowY","overflowAnchor","onScroll","MemoryBlock","highlight","editable","MemoryCell","rounded","background","hex","flex","textAlign","newValue","fmt","setFormat","setJmp","goto","setGoto","jumpTo","useContext","AppContext","filePicker","setStatus","doLoad","console","error","placeholder","onKeyDown","option","checked","doFormat","RAM","nextData","MemoryChip","RamBus","ram","RAM8","RAM64","RAM512","RAM4K","RAM16K","Panel","join","footer","Accordian","open","summary","WHITE","pixel","color","Screen","canvas","ctx","getContext","image","getImageData","col","putImageData","maxWidth","boxSizing","marginInline","margin","borderTop","borderLeft","borderBottom","borderRight","KeyMap","Enter","Backspace","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Home","End","PageUp","PageDown","Insert","Delete","Escape","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","Keyboard","keyboard","showPicker","setShowPicker","setBits","setKey","event","keypress","code","charCodeAt","keyPressToHackCharacter","preventDefault","changeKey","focus","BITS","decode","x1","x2","am","d1","d2","d3","j1","j2","j3","cpuTick","inM","cpuTock","reset","alu2","addressM","outM","writeM","ROM32K","at","OFFSET","screen","startsWith","CPU","cpuInput","output","Computer","wire","REGISTRY","ChipCtor","chip","getBuiltinChip","pinWidth","build","toString","buildChip","partChip","Output","variable","len","lPad","rPad","parseInt","test","substring","padCenter","getVar","padLeft","B","X","padRight","space","leftSpace","rightSpace","padStart","padEnd","Test","_outputList","_log","FileSystem","_steps","_step","breakpoints","filename","outputs","steps","done","do","step","content","clear","print","isTstLineStatment","ChipTest","pinOrBus","addInstruction","makeLineStatement","repeat","TestRepeatInstruction","TestCompoundInstruction","makeInstruction","TestTickInstruction","TestTockInstruction","TestEvalInstruction","TestOutputInstruction","TestSetInstruction","TestOutputListInstruction","TestEchoInstruction","TestClearEchoInstruction","TestLoadROMInstruction","checkExhaustive","setVar","specs","addOutput","outputList","echo","clearEcho","_chipTestInstruction_","StorageContext","createContext","LocalStorageFileSystemAdapter","PROJECT_NAMES","PROJECTS","makeHdl","reduceChip","inPins","outPins","internalPins","makeChipStore","storage","dispatch","project","chips","chipName","dropdowns","controls","hasBuiltin","runningTest","maybeChip","sim","setTimeout","actions","reloadChip","files","hdl","cmp","setFiles","updateChip","setProject","setChip","testRunning","testFinished","updateTestStep","log","currentStep","p","loadChip","updateFiles","compileChip","compileTest","maybeParsed","replaceChip","nextChip","fsName","Promise","all","catch","saveChip","prj","writeFile","useBuiltin","with","setFileSystem","runTest","pushd","run","popd","cmpGrammar","cmpSemantics","cells","CMP","DiffTable","compare","cmpData","outData","failures","table","cmpI","outI","j","pass","fontFamily","marginBottom","DiffCell","ErrorPanel","failed","Textarea","language","text","setText","Monaco","theme","monaco","useMonaco","editor","decorations","onMount","ed","updateOptions","fontSize","minimap","enabled","model","getModel","nextDecoration","getPositionAt","Range","fromPositions","options","inlineClassName","revealRangeInCenter","deltaDecorations","isDark","window","matchMedia","matches","readOnly","setModelMarkers","exec","column","startLineNumber","endLineNumber","startColumn","endColumn","getLineContent","severity","monacoT","Editor","setError","doParse","debounce","onChangeCB","canUse","wants","Clockface","clockface","setClockface","subscription","Visualizations","visualizations","flatMap","Timer","speed","now","Date","delta","finishFrame","requestAnimationFrame","Runbar","runner","timer","running","bind","setSteps","setSpeed","frame","stop","makeTimerStore","dispatcher","useTimer","localStorage","useChipPageStore","setHdl","setTst","setCmp","compile","setUseBuiltin","toggleUseBuiltin","selectors","number","hdlPanel","tabIndex","whiteSpace","pinsPanel","testPanel","paddingLeft","M","MD","AM","AD","AMD","JGT","JEQ","JGE","JLT","JNE","JLE","JMP","Positive","Zero","Negative","o","mop","cop","sop","jop","replace","cInstruction","aInstruction","aop","C","O","J","Hex","chars","int","radix","hu","hl","lu","ll","precision","uns"],"sourceRoot":""}