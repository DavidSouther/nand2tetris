{"version":3,"file":"static/js/708.bdf0dec6.chunk.js","mappings":"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","sources":["app/components/pinout.tsx","languages/base.ts","languages/hdl.ts","languages/tst.ts","simulator/chip/clock.ts","simulator/chip/chip.tsx","simulator/chip/builtins/logic/and.ts","simulator/chip/builtins/logic/dmux.ts","simulator/chip/builtins/logic/mux.ts","simulator/chip/builtins/logic/nand.ts","simulator/chip/builtins/logic/not.ts","simulator/chip/builtins/logic/or.ts","simulator/chip/builtins/logic/xor.ts","simulator/chip/builtins/arithmetic/add_16.ts","app/components/chips/alu.tsx","simulator/chip/builtins/arithmetic/alu.tsx","simulator/chip/builtins/arithmetic/half_adder.ts","simulator/chip/builtins/arithmetic/full_adder.ts","simulator/chip/builtins/arithmetic/inc16.ts","app/components/chips/register.tsx","simulator/chip/builtins/sequential/bit.tsx","simulator/chip/builtins/sequential/dff.ts","languages/asm.ts","simulator/fs.ts","simulator/cpu/memory.ts","app/util/react.ts","app/components/pico/inline_edit.tsx","app/components/pico/virtual_scroll.tsx","app/components/chips/memory.tsx","simulator/chip/builtins/sequential/ram.tsx","app/components/shell/panel.tsx","app/components/chips/screen.tsx","app/components/chips/keyboard.tsx","simulator/cpu/cpu.ts","simulator/chip/builtins/computer/computer.tsx","simulator/chip/builtins/index.ts","simulator/chip/builder.ts","simulator/output.ts","simulator/tst.ts","app/util/storage.ts","app/pages/chip.store.ts","languages/cmp.ts","app/components/difftable.tsx","app/components/editor.tsx","simulator/timer.ts","app/components/runbar.tsx","app/components/clockface.tsx","app/pages/chip.tsx","simulator/cpu/alu.ts","util/asm.ts","util/twos.ts"],"sourcesContent":["import { plural, Trans } from \"@lingui/macro\";\nimport { Pin as ChipPin, Pins, Voltage } from \"../../simulator/chip/chip\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range\";\n\nimport \"./pinout.scss\";\nimport { ChipSim } from \"../pages/chip.store\";\n\nexport interface ImmPin {\n  bits: [number, Voltage][];\n  pin: ChipPin;\n}\n\nexport function reducePin(pin: ChipPin) {\n  return {\n    pin,\n    bits: range(0, pin.width)\n      .map((i) => [i, pin.voltage(i)] as [number, Voltage])\n      .reverse(),\n  };\n}\n\nexport function reducePins(pins: Pins): ImmPin[] {\n  return [...pins.entries()].map(reducePin);\n}\n\nexport interface PinoutPins {\n  pins: ImmPin[];\n  toggle?: (pin: ChipPin, bit?: number) => void;\n}\n\nexport const FullPinout = (props: {\n  sim: ChipSim;\n  toggle: (pin: ChipPin, i: number | undefined) => void;\n}) => {\n  const { inPins, outPins, internalPins } = props.sim;\n  return (\n    <table className=\"pinout\">\n      <tbody>\n        <PinoutBlock\n          pins={inPins}\n          header={plural(inPins.length, {\n            one: \"Input pin\",\n            other: \"Input pins\",\n          })}\n          toggle={props.toggle}\n        />\n        <PinoutBlock\n          pins={outPins}\n          header={plural(outPins.length, {\n            one: \"Output pin\",\n            other: \"Output pins\",\n          })}\n          disabled={props.sim.pending}\n        />\n        <PinoutBlock\n          pins={internalPins}\n          header={plural(internalPins.length, {\n            one: \"Internal pin\",\n            other: \"Internal pins\",\n          })}\n          disabled={props.sim.pending}\n        />\n      </tbody>\n    </table>\n  );\n};\n\nexport const PinoutBlock = (\n  props: PinoutPins & { header: string; disabled?: boolean }\n) => (\n  <>\n    {props.pins.length > 0 && (\n      <tr>\n        <th colSpan={2}>{props.header}</th>\n      </tr>\n    )}\n    {[...props.pins].map((immPin) => (\n      <tr key={immPin.pin.name}>\n        <td>{immPin.pin.name}</td>\n        <td>\n          <Pin pin={immPin} toggle={props.toggle} disabled={props.disabled} />\n        </td>\n      </tr>\n    ))}\n  </>\n);\n\nexport const Pinout = ({\n  pins,\n  toggle,\n}: {\n  pins: ImmPin[];\n  toggle?: (pin: ChipPin, bit?: number) => void;\n}) => {\n  if (pins.length === 0) {\n    return <Trans>None</Trans>;\n  }\n  return (\n    <table className=\"pinout\">\n      <thead>\n        <tr>\n          <th>\n            <Trans>Name</Trans>\n          </th>\n          <th>\n            <Trans>Value</Trans>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {[...pins].map((immPin) => (\n          <tr key={immPin.pin.name}>\n            <td>{immPin.pin.name}</td>\n            <td>\n              <Pin pin={immPin} toggle={toggle} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst Pin = ({\n  pin,\n  toggle,\n  disabled = false,\n}: {\n  pin: ImmPin;\n  toggle: ((pin: ChipPin, bit?: number) => void) | undefined;\n  disabled?: boolean;\n}) => {\n  return (\n    <fieldset role=\"group\" style={{ width: `${pin.bits.length}rem` }}>\n      {pin.bits.map(([i, v]) => (\n        <button\n          key={i}\n          onClick={() => toggle?.(pin.pin, i)}\n          disabled={disabled}\n          data-testid={`pin-${i}`}\n        >\n          {v}\n        </button>\n      ))}\n    </fieldset>\n  );\n};\n","import raw from \"raw.macro\";\nimport ohm from \"ohm-js\";\nimport { int10, int16, int2 } from \"../util/twos\";\nimport { t } from \"@lingui/macro\";\nimport { Err, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result\";\n\nexport const UNKNOWN_PARSE_ERROR = t`Unknown parse error`;\n\n// Reload .\n\nconst baseGrammar = raw(\"./grammars/base.ohm\");\nexport const grammars = {\n  Base: ohm.grammar(baseGrammar),\n};\n\nexport const baseSemantics = grammars.Base.createSemantics();\n\nbaseSemantics.extendOperation(\"asIteration\", {\n  List(list, _) {\n    return list.asIteration();\n  },\n});\n\nbaseSemantics.addAttribute(\"value\", {\n  decNumber(_, digits): number {\n    return int10(digits.sourceString);\n  },\n  wholeDec(_, digits): number {\n    return int10(digits.sourceString);\n  },\n  binNumber(_, digits) {\n    return int2(digits.sourceString);\n  },\n  hexNumber(_, digits) {\n    return int16(digits.sourceString);\n  },\n  Number(num) {\n    return num.value;\n  },\n  Name(ident) {\n    return ident.name;\n  },\n  identifier(_, __): string {\n    return this.sourceString;\n  },\n});\n\nbaseSemantics.addAttribute(\"name\", {\n  identifier(_, __): string {\n    return this.sourceString;\n  },\n  Name(_): string {\n    return this.child(0)?.name;\n  },\n});\n\nbaseSemantics.addAttribute(\"String\", {\n  String(_a, str, _b) {\n    return str.sourceString;\n  },\n});\n\nexport type ParseError = Error | { message: string; shortMessage: string };\n\nexport function makeParser<ResultType>(\n  grammar: ohm.Grammar,\n  semantics: ohm.Semantics,\n  property: (obj: ohm.Dict) => ResultType = ({ root }) => root\n): (source: string) => Result<ResultType, ParseError> {\n  return function parse(source) {\n    try {\n      const match = grammar.match(source);\n      if (match.succeeded()) {\n        const parsed = semantics(match);\n        const parse = property(parsed);\n        return Ok(parse);\n      } else {\n        return Err({\n          message: match.message ?? UNKNOWN_PARSE_ERROR,\n          shortMessage: match.shortMessage ?? UNKNOWN_PARSE_ERROR,\n        });\n      }\n    } catch (e) {\n      return Err(e as Error);\n    }\n  };\n}\n\nexport interface Span {\n  start: number;\n  end: number;\n}\n","/** Reads and parses HDL chip descriptions. */\nimport raw from \"raw.macro\";\nimport ohm from \"ohm-js\";\nimport { grammars, baseSemantics } from \"./base\";\nimport { makeParser } from \"./base\";\n\nexport interface PinIndex {\n  start?: number | undefined;\n  end?: number | undefined;\n}\n\nexport interface PinParts extends PinIndex {\n  pin: string;\n}\n\nexport interface PinDeclaration {\n  pin: string | string;\n  width: number;\n}\n\nexport interface Wire {\n  lhs: PinParts;\n  rhs: PinParts;\n}\n\nexport interface Part {\n  name: string;\n  wires: Wire[];\n}\n\nexport interface HdlParse {\n  name: string;\n  ins: PinDeclaration[];\n  outs: PinDeclaration[];\n  clocked: string[];\n  parts: \"BUILTIN\" | Part[];\n}\n\nconst hdlGrammar = raw(\"./grammars/hdl.ohm\");\nexport const grammar = ohm.grammar(hdlGrammar, grammars);\n\nexport const hdlSemantics = grammar.extendSemantics(baseSemantics);\n\nhdlSemantics.addAttribute<PinIndex>(\"SubBus\", {\n  SubBus(_a, startNode, endNode, _b) {\n    const start = startNode.value;\n    const end = endNode.child(0)?.child(1)?.value ?? start;\n    return { start, end };\n  },\n});\n\nhdlSemantics.addAttribute<PinParts>(\"WireSide\", {\n  WireSide({ name }, index) {\n    const { start, end } = (index.child(0)?.SubBus as PinIndex) ?? {\n      start: undefined,\n      end: undefined,\n    };\n    return { pin: name, start, end };\n  },\n});\n\nhdlSemantics.addAttribute<Wire>(\"Wire\", {\n  Wire(left, _, right) {\n    let rhs: PinParts = right.isTerminal()\n      ? { pin: right.sourceString }\n      : right.WireSide;\n    return { lhs: left.WireSide as PinParts, rhs };\n  },\n});\n\nhdlSemantics.addAttribute<Wire[]>(\"Wires\", {\n  Wires(list) {\n    return list.asIteration().children.map(({ Wire }: { Wire: Wire }) => Wire);\n  },\n});\n\nhdlSemantics.addAttribute<Part>(\"Part\", {\n  Part({ name }, _a, { Wires }, _b, _c) {\n    return { name: name as string, wires: Wires as Wire[] };\n  },\n});\n\nhdlSemantics.addAttribute<Part[] | \"BUILTIN\">(\"Parts\", {\n  Parts(_, parts) {\n    return parts.children.map((c) => c.Part);\n  },\n  BuiltinPart(_a, _b) {\n    return \"BUILTIN\";\n  },\n});\n\nhdlSemantics.addAttribute<\"BUILTIN\" | Part[]>(\"PartList\", {\n  PartList(list) {\n    return list.Parts;\n  },\n});\n\nhdlSemantics.addAttribute<string[]>(\"Clocked\", {\n  ClockedList(_a, clocked, _b) {\n    return (\n      clocked\n        .asIteration()\n        .children.map(\n          ({ sourceString }: { sourceString: string }) => sourceString\n        ) ?? []\n    );\n  },\n});\n\nhdlSemantics.addAttribute<PinDeclaration>(\"PinDecl\", {\n  PinDecl({ name }, width) {\n    return {\n      pin: name,\n      width: width.child(0)?.child(1)?.value ?? 1,\n    };\n  },\n});\n\nhdlSemantics.addAttribute<PinDeclaration[]>(\"PinList\", {\n  PinList(list) {\n    return list\n      .asIteration()\n      .children.map(({ PinDecl }: { PinDecl: PinDeclaration }) => PinDecl);\n  },\n});\n\nhdlSemantics.addAttribute<HdlParse>(\"Chip\", {\n  Chip(_a, { name }, _b, body, _c) {\n    return {\n      name,\n      ins: body.child(0).child(0)?.child(1)?.PinList ?? [],\n      outs: body.child(1).child(0)?.child(1)?.PinList ?? [],\n      parts: body.child(2).PartList ?? [],\n      clocked: body.child(3).child(0)?.Clocked,\n    };\n  },\n});\n\nhdlSemantics.addAttribute<HdlParse>(\"Root\", {\n  Root(root) {\n    return root.child(0)?.Chip;\n  },\n});\n\nexport const HDL = {\n  parser: grammar,\n  grammar: hdlGrammar,\n  semantics: hdlSemantics,\n  parse: makeParser<HdlParse>(grammar, hdlSemantics, (n) => n.Chip),\n};\n","/** Reads tst files to apply and perform test runs. */\n\nimport ohm from \"ohm-js\";\nimport raw from \"raw.macro\";\nimport { baseSemantics, grammars, makeParser, Span } from \"./base\";\n\nexport interface TstEchoOperation {\n  op: \"echo\";\n  message: string;\n}\n\nexport interface TstClearEchoOperation {\n  op: \"clear-echo\";\n}\n\nexport interface TstSetOperation {\n  op: \"set\";\n  id: string;\n  index?: number;\n  value: number;\n}\n\nexport interface TstEvalOperation {\n  op: \"eval\" | \"tick\" | \"tock\";\n}\n\nexport interface TstOutputOperation {\n  op: \"output\";\n}\n\nexport interface TstOutputSpec {\n  id: string;\n  builtin: boolean;\n  address: number;\n  style: \"D\" | \"X\" | \"B\" | \"S\";\n  width: number;\n  lpad: number;\n  rpad: number;\n}\n\nexport interface TstOutputListOperation {\n  op: \"output-list\";\n  spec: TstOutputSpec[];\n}\n\nexport interface TstLoadROMOperation {\n  op: \"load\";\n  file: string;\n}\n\nexport type TstOperation =\n  | TstEvalOperation\n  | TstEchoOperation\n  | TstClearEchoOperation\n  | TstOutputOperation\n  | TstSetOperation\n  | TstOutputListOperation\n  | TstLoadROMOperation;\n\nexport interface TstLineStatement {\n  ops: TstOperation[];\n  break?: true;\n  span: Span;\n}\n\nexport interface TstRepeat {\n  statements: TstLineStatement[];\n  count: number;\n  span: Span;\n}\n\nexport interface TstWhileCondition {\n  op: \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"<>\";\n  left: string | number;\n  right: string | number;\n}\n\nexport interface TstWhileStatement {\n  statements: TstLineStatement[];\n  condition: TstWhileCondition;\n  span: Span;\n}\n\nexport type TstStatement = TstLineStatement | TstRepeat | TstWhileStatement;\n\nexport interface Tst {\n  lines: TstStatement[];\n}\n\nexport const tstGrammar = raw(\"./grammars/tst.ohm\");\nexport const grammar = ohm.grammar(tstGrammar, grammars);\nexport const tstSemantics = grammar.extendSemantics(baseSemantics);\n\ntstSemantics.extendAttribute<number>(\"value\", {\n  Index(_a, idx, _b) {\n    return idx?.child(0)?.value ?? -1;\n  },\n});\n\ntstSemantics.extendAttribute<string>(\"name\", {\n  FileName({ name }) {\n    return name;\n  },\n});\n\ntstSemantics.addAttribute<number>(\"index\", {\n  Index(_open, dec, _close) {\n    return dec.child(0)?.value ?? 0;\n  },\n});\n\ntstSemantics.addAttribute<TstOutputSpec>(\"format\", {\n  OutputFormat(\n    { name: id },\n    index,\n    _a,\n    { sourceString: style },\n    { value: lpad },\n    _b,\n    { value: width },\n    _c,\n    { value: rpad }\n  ) {\n    return {\n      id,\n      builtin: index?.child(0) !== undefined,\n      address: index?.child(0)?.value ?? -1,\n      style: style as TstOutputSpec[\"style\"],\n      width,\n      lpad,\n      rpad,\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstOperation>(\"operation\", {\n  TstEvalOperation(op) {\n    return { op: op.sourceString as TstEvalOperation[\"op\"] };\n  },\n  TstOutputOperation(_) {\n    return { op: \"output\" };\n  },\n  TstOutputListOperation(_, formats) {\n    return {\n      op: \"output-list\",\n      spec: formats.children.map((n) => n.format),\n    };\n  },\n  TstSetOperation(op, { name }, index, { value }) {\n    const setOp: TstSetOperation = {\n      op: \"set\",\n      id: name,\n      value,\n    };\n    const child = index.child(0)?.child(1)?.child(0);\n    if (child) {\n      setOp.index = child.value;\n    }\n    return setOp;\n  },\n  TstEchoOperation(op, str) {\n    return {\n      op: \"echo\",\n      message: str.String as string,\n    };\n  },\n  TstClearEchoOperation(op) {\n    return {\n      op: \"clear-echo\",\n    };\n  },\n  TstLoadROMOperation(_r, _l, { name }) {\n    return {\n      op: \"load\",\n      file: name,\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstWhileCondition>(\"condition\", {\n  Condition({ value: left }, { sourceString: op }, { value: right }) {\n    return {\n      left,\n      right,\n      op: op as \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"<>\",\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstStatement>(\"statement\", {\n  TstWhile(op, cond, _o, statements, _c) {\n    return {\n      statements: statements.children.map(({ statement }) => statement),\n      condition: cond.condition,\n      span: {\n        start: op.source.startIdx,\n        end: cond.source.endIdx,\n      },\n    };\n  },\n  TstRepeat(op, count, _o, statements, _c) {\n    return {\n      statements: statements.children.map(({ statement }) => statement),\n      count: count.child(0)?.value ?? -1,\n      span: {\n        start: op.source.startIdx,\n        end: count.source.endIdx,\n      },\n    };\n  },\n  TstStatement(list, end) {\n    const stmt: TstStatement = {\n      ops: list\n        .asIteration()\n        .children.map(\n          ({ operation }: { operation: TstOperation }) => operation\n        ),\n      span: {\n        start: this.source.startIdx,\n        end: this.source.endIdx,\n      },\n    };\n    if (end.sourceString === \"!\") {\n      stmt.break = true;\n    }\n    return stmt;\n  },\n});\n\ntstSemantics.addAttribute<Tst>(\"tst\", {\n  Tst(lines) {\n    return {\n      lines: lines.children.map((n) => n.statement),\n    };\n  },\n});\n\ntstSemantics.addAttribute<Tst>(\"root\", {\n  Root({ tst }) {\n    return tst;\n  },\n});\n\nexport const TST = {\n  grammar: tstGrammar,\n  semantics: tstSemantics,\n  parser: grammar,\n  parse: makeParser<Tst>(grammar, tstSemantics),\n};\n","import { BehaviorSubject, Observable, Subject } from \"rxjs\";\nimport { assert } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { HIGH, LOW, Voltage } from \"./chip\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { display } from \"@davidsouther/jiffies/lib/esm/display\";\n\ninterface Tick {\n  readonly level: Voltage;\n  readonly ticks: number;\n}\n\nlet clock: Clock;\nexport class Clock {\n  private level: Voltage = LOW;\n  private ticks = 0;\n\n  static get() {\n    if (clock === undefined) {\n      clock = new Clock();\n    }\n    return clock;\n  }\n\n  get isHigh(): boolean {\n    return this.level === HIGH;\n  }\n\n  get isLow(): boolean {\n    return this.level === LOW;\n  }\n\n  private subject = new BehaviorSubject<Tick>({\n    level: this.level,\n    ticks: this.ticks,\n  });\n  readonly frameSubject = new Subject<void>();\n\n  readonly $: Observable<Tick> = this.subject;\n  readonly frame$: Observable<void> = this.frameSubject;\n\n  private next() {\n    this.subject.next({\n      level: this.level,\n      ticks: this.ticks,\n    });\n  }\n\n  private constructor() {}\n\n  reset() {\n    this.level = LOW;\n    this.ticks = 0;\n    this.next();\n  }\n\n  tick() {\n    assert(this.level === LOW, \"Can only tick up from LOW\");\n    this.level = HIGH;\n    this.next();\n  }\n\n  tock() {\n    assert(this.level === HIGH, \"Can only tock down from HIGH\");\n    this.level = LOW;\n    this.ticks += 1;\n    this.next();\n  }\n\n  toggle() {\n    this.level === HIGH ? this.tock() : this.tick();\n  }\n\n  eval() {\n    this.tick();\n    this.tock();\n  }\n\n  frame() {\n    this.frameSubject.next();\n  }\n\n  toString() {\n    return `${this.ticks}${this.level === HIGH ? \"+\" : \"\"}`;\n  }\n}\n\nexport function useClock(actions: {\n  tick?: () => void;\n  toggle?: () => void;\n  reset?: () => void;\n}) {\n  const clock = useMemo(() => Clock.get(), []);\n\n  useEffect(() => {\n    const subscription = clock.$.subscribe(() => {\n      actions.tick?.();\n    });\n    return () => subscription.unsubscribe();\n  }, [actions, clock.$]);\n\n  return {\n    toggle() {\n      clock.tick();\n      actions.toggle?.();\n    },\n\n    reset() {\n      clock.reset();\n      actions.reset?.();\n    },\n  };\n}\n\nexport function useClockFrame(frameFinished: () => void) {\n  useEffect(() => {\n    const subscription = clock.frame$.subscribe(() => {\n      frameFinished();\n    });\n    return () => subscription.unsubscribe();\n  }, [frameFinished]);\n}\n\nexport function useClockface() {\n  const [clockface, setClockface] = useState(display(clock));\n\n  useEffect(() => {\n    const subscription = clock.$.subscribe(() => {\n      setClockface(display(clock));\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n\n  return clockface;\n}\n","import { assert, assertExists } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range\";\nimport { ReactNode } from \"react\";\nimport { bin } from \"../../util/twos\";\nimport { Clock } from \"./clock\";\n\nexport const HIGH = 1;\nexport const LOW = 0;\nexport type Voltage = typeof HIGH | typeof LOW;\n\nexport interface Pin {\n  readonly name: string;\n  readonly width: number;\n  busVoltage: number;\n  pull(voltage: Voltage, bit?: number): void;\n  toggle(bit?: number): void;\n  voltage(bit?: number): Voltage;\n  connect(pin: Pin): void;\n}\n\nexport class Bus implements Pin {\n  state: Voltage[];\n  next: Pin[] = [];\n\n  constructor(readonly name: string, readonly width = 1) {\n    this.state = range(0, this.width).map(() => LOW);\n  }\n\n  ensureWidth(newWidth: number) {\n    assert(newWidth <= 16, `Cannot widen past 16 to ${newWidth} bits`);\n    if (this.width < newWidth) {\n      (this as { width: number }).width = newWidth;\n      this.state = [\n        ...this.state,\n        ...range(this.width, newWidth).map(() => LOW as Voltage),\n      ];\n    }\n  }\n\n  connect(next: Pin) {\n    this.next.push(next);\n    next.busVoltage = this.busVoltage;\n  }\n\n  pull(voltage: Voltage, bit = 0) {\n    assert(\n      bit >= 0 && bit < this.width,\n      `Bit out of bounds: ${this.name}@${bit}`\n    );\n    this.state[bit] = voltage;\n    this.next.forEach((n) => n.pull(voltage, bit));\n  }\n\n  voltage(bit = 0): Voltage {\n    assert(bit >= 0 && bit < this.width);\n    return this.state[bit];\n  }\n\n  set busVoltage(voltage: number) {\n    for (const i of range(0, this.width)) {\n      this.state[i] = ((voltage & (1 << i)) >> i) as Voltage;\n    }\n    this.next.forEach((n) => (n.busVoltage = this.busVoltage));\n  }\n\n  get busVoltage(): number {\n    return range(0, this.width).reduce((b, i) => b | (this.state[i] << i), 0);\n  }\n\n  toggle(bit = 0) {\n    const nextVoltage = this.voltage(bit) === LOW ? HIGH : LOW;\n    this.pull(nextVoltage, bit);\n  }\n}\n\nexport class InSubBus extends Bus {\n  constructor(\n    private bus: Pin,\n    private start: number,\n    override readonly width = 1\n  ) {\n    super(bus.name);\n    assert(\n      start >= 0 && start + width <= bus.width,\n      `Mismatched InSubBus dimensions on ${bus.name} (${width} + ${start} > ${bus.width})`\n    );\n    this.connect(bus);\n  }\n\n  override pull(voltage: Voltage, bit = 0) {\n    assert(bit >= 0 && bit < this.width);\n    this.bus.pull(voltage, this.start + bit);\n  }\n\n  override voltage(bit = 0): Voltage {\n    assert(bit >= 0 && bit < this.width);\n    return this.bus.voltage(this.start + bit);\n  }\n\n  override set busVoltage(voltage: number) {\n    const high = this.bus.busVoltage & ~mask(this.width + this.start);\n    const low = this.bus.busVoltage & mask(this.start);\n    const mid = (voltage & mask(this.width)) << this.start;\n    this.bus.busVoltage = high | mid | low;\n  }\n\n  override get busVoltage(): number {\n    return (this.bus.busVoltage >> this.start) & mask(this.width);\n  }\n\n  override connect(bus: Pin): void {\n    assert(\n      this.start + this.width <= bus.width,\n      `Mismatched InSubBus connection dimensions (From ${bus.name} to ${this.name})`\n    );\n    this.bus = bus;\n  }\n}\n\nexport class OutSubBus extends Bus {\n  constructor(\n    private bus: Pin,\n    private start: number,\n    override readonly width = 1\n  ) {\n    super(bus.name);\n    assert(start >= 0 && width <= bus.width, `Mismatched OutSubBus dimensions`);\n    this.connect(bus);\n  }\n\n  override set busVoltage(voltage: number) {\n    this.bus.busVoltage =\n      (voltage & mask(this.width + this.start)) >> this.start;\n  }\n\n  override get busVoltage(): number {\n    return this.bus.busVoltage & mask(this.width);\n  }\n\n  override connect(bus: Pin): void {\n    assert(\n      this.width <= bus.width,\n      `Mismatched OutSubBus connection dimensions`\n    );\n    this.bus = bus;\n  }\n}\n\nexport class ConstantBus extends Bus {\n  constructor(name: string, private readonly value: number) {\n    super(name, 16 /* TODO: get high bit index */);\n  }\n\n  pullHigh(_ = 0) {}\n  pullLow(_ = 0) {}\n  override voltage(_ = 0): Voltage {\n    return (this.busVoltage & 0x1) as Voltage;\n  }\n\n  override set busVoltage(voltage: number) {\n    // Noop\n  }\n  override get busVoltage(): number {\n    return this.value;\n  }\n}\n\nexport const TRUE_BUS = new ConstantBus(\"true\", 0xffff);\nexport const FALSE_BUS = new ConstantBus(\"false\", 0);\n\nexport function parsePinDecl(toPin: string): {\n  pin: string;\n  width: number;\n} {\n  const { pin, w } = toPin.match(/(?<pin>[a-zA-Z]+)(\\[(?<w>\\d+)\\])?/)\n    ?.groups as {\n    pin: string;\n    w?: string;\n  };\n  return {\n    pin,\n    width: w ? Number(w) : 1,\n  };\n}\n\nexport function parseToPin(toPin: string): {\n  pin: string;\n  start?: number;\n  end?: number;\n} {\n  const { pin, i, j } = toPin.match(\n    /(?<pin>[a-z]+)(\\[(?<i>\\d+)(\\.\\.(?<j>\\d+))?\\])?/\n  )?.groups as { pin: string; i?: string; j?: string };\n  return {\n    pin,\n    start: i ? Number(i) : undefined,\n    end: j ? Number(j) : undefined,\n  };\n}\n\nexport class Pins {\n  private readonly map = new Map<string, Pin>();\n\n  insert(pin: Pin) {\n    let { name } = pin;\n    assert(!this.map.has(name), `Pins already has ${name}!`);\n    this.map.set(name, pin);\n  }\n\n  emplace(name: string, minWidth?: number) {\n    if (this.has(name)) {\n      return this.get(name)!;\n    } else {\n      const pin = new Bus(name, minWidth);\n      this.insert(pin);\n      return pin;\n    }\n  }\n\n  has(pin: string): boolean {\n    return this.map.has(pin);\n  }\n\n  get(pin: string): Pin | undefined {\n    return this.map.get(pin);\n  }\n\n  entries(): Iterable<Pin> {\n    return this.map.values();\n  }\n\n  [Symbol.iterator]() {\n    return this.map[Symbol.iterator]();\n  }\n}\n\nlet id = 0;\nexport class Chip {\n  readonly id = id++;\n  ins = new Pins();\n  outs = new Pins();\n  pins = new Pins();\n  parts = new Set<Chip>();\n  clockedPins: Set<string>;\n\n  get clocked() {\n    if (this.clockedPins.size > 0) {\n      return true;\n    }\n    for (const part of this.parts) {\n      if (part.clocked) return true;\n    }\n    return false;\n  }\n\n  constructor(\n    ins: (string | { pin: string; width: number })[],\n    outs: (string | { pin: string; width: number })[],\n    public name?: string,\n    internals: (string | { pin: string; width: number })[] = [],\n    clocked: string[] = []\n  ) {\n    for (const inn of ins) {\n      const { pin, width = 1 } =\n        (inn as { pin: string }).pin !== undefined\n          ? (inn as { pin: string; width: number })\n          : parsePinDecl(inn as string);\n      this.ins.insert(new Bus(pin, width));\n    }\n\n    for (const out of outs) {\n      const { pin, width = 1 } =\n        (out as { pin: string }).pin !== undefined\n          ? (out as { pin: string; width: number })\n          : parsePinDecl(out as string);\n      this.outs.insert(new Bus(pin, width));\n    }\n\n    for (const internal of internals) {\n      const { pin, width = 1 } =\n        (internal as { pin: string }).pin !== undefined\n          ? (internal as { pin: string; width: number })\n          : parsePinDecl(internal as string);\n      this.pins.insert(new Bus(pin, width));\n    }\n\n    this.clockedPins = new Set(clocked);\n\n    Clock.get().$.subscribe(() => this.eval());\n  }\n\n  reset() {\n    for (const [_, pin] of this.ins) {\n      pin.busVoltage = 0;\n    }\n    for (const part of this.parts) {\n      part.reset();\n    }\n    this.eval();\n  }\n\n  in(pin = \"in\"): Pin {\n    assert(this.hasIn(pin), `No in pin ${pin}`);\n    return this.ins.get(pin)!;\n  }\n\n  out(pin = \"out\"): Pin {\n    assert(this.hasOut(pin), `No in pin ${pin}`);\n    return this.outs.get(pin)!;\n  }\n\n  hasIn(pin: string): boolean {\n    return this.ins.has(pin);\n  }\n\n  hasOut(pin: string): boolean {\n    return this.outs.has(pin);\n  }\n\n  pin(name: string): Pin {\n    assert(this.pins.has(name));\n    return this.pins.get(name)!;\n  }\n\n  get(name: string, offset?: number): Pin | undefined {\n    if (this.ins.has(name)) {\n      return this.ins.get(name)!;\n    }\n    if (this.outs.has(name)) {\n      return this.outs.get(name)!;\n    }\n    if (this.pins.has(name)) {\n      return this.pins.get(name)!;\n    }\n    return this.getBuiltin(name, offset);\n  }\n\n  private getBuiltin(name: string, offset = 0): Pin | undefined {\n    if (BUILTIN_NAMES.includes(name)) {\n      for (const part of this.parts) {\n        const pin = part.get(name, offset);\n        if (pin) {\n          return pin;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  isOutPin(pin: string): boolean {\n    return this.outs.has(pin);\n  }\n\n  wire(part: Chip, connections: Connection[]) {\n    this.parts.add(part);\n    for (const { to, from } of connections) {\n      if (part.isOutPin(to.name)) {\n        this.wireOutPin(part, to, from);\n      } else {\n        this.wireInPin(part, to, from);\n      }\n    }\n  }\n\n  render(): ReactNode[] {\n    return [...this.parts]\n      .map((part) => part.render())\n      .filter((v) => v !== undefined);\n  }\n\n  private findPin(from: string, minWidth?: number): Pin {\n    if (from.toLowerCase() === \"true\" || from === \"1\") {\n      return TRUE_BUS;\n    }\n    if (from.toLowerCase() === \"false\" || from === \"0\") {\n      return FALSE_BUS;\n    }\n    if (this.ins.has(from)) {\n      return this.ins.get(from)!;\n    }\n    if (this.outs.has(from)) {\n      return this.outs.get(from)!;\n    }\n    return this.pins.emplace(from, minWidth);\n  }\n\n  private wireOutPin(part: Chip, to: PinSide, from: PinSide) {\n    let partPin = assertExists(\n      part.outs.get(to.name),\n      () => `Cannot wire to missing pin ${to.name}`\n    );\n    to.width ??= partPin.width;\n\n    let chipPin = this.findPin(from.name, from.width ?? to.width);\n    const isInternal = this.pins.has(chipPin.name);\n\n    from.width ??= chipPin.width;\n\n    if (chipPin instanceof ConstantBus) {\n      throw new Error(`Cannot wire to constant bus`);\n    }\n\n    // Widen internal pins\n    if (isInternal && chipPin instanceof Bus) {\n      chipPin.ensureWidth(from.start + from.width);\n    }\n\n    // Wrap the chipPin in an InBus when the chip side is dimensioned\n    if (from.start > 0 || from.width !== chipPin.width) {\n      chipPin = new InSubBus(chipPin, from.start, from.width);\n    }\n\n    // Wrap the chipPin in an OutBus when the part side is dimensioned\n    if (to.start > 0 || to.width !== chipPin.width) {\n      chipPin = new OutSubBus(chipPin, to.start, to.width);\n    }\n\n    partPin.connect(chipPin);\n  }\n\n  private wireInPin(part: Chip, to: PinSide, from: PinSide) {\n    let partPin = assertExists(\n      part.ins.get(to.name),\n      () => `Cannot wire to missing pin ${to.name}`\n    );\n    to.width ??= partPin.width;\n\n    const chipPin = this.findPin(from.name, from.width ?? to.width);\n\n    from.width ??= chipPin.width;\n\n    // Wrap the partPin in an InBus when the part side is dimensioned\n    if (to.start > 0 || to.width !== chipPin.width) {\n      partPin = new InSubBus(partPin, to.start, to.width);\n    }\n\n    // Wrap the partPin in an OutBus when the chip side is dimensioned\n    if (![\"true\", \"false\"].includes(chipPin.name)) {\n      if (from.start > 0 || from.width !== chipPin.width) {\n        partPin = new OutSubBus(partPin, from.start, from.width);\n      }\n    }\n    chipPin.connect(partPin);\n  }\n\n  eval() {\n    for (const chip of this.parts) {\n      // TODO topological sort\n      // eval chip input busses\n      chip.eval();\n      // eval output busses\n    }\n  }\n\n  tick() {\n    this.eval();\n  }\n\n  tock() {\n    this.eval();\n  }\n\n  remove() {\n    for (const part of this.parts) {\n      part.remove();\n    }\n  }\n\n  // For the ROM32K builtin to load from a file system\n  async load(fs: FileSystem, path: string) {\n    for (const part of this.parts) {\n      if (part.name === \"ROM32K\") {\n        await part.load(fs, path);\n      }\n    }\n  }\n}\n\nexport class Low extends Chip {\n  constructor() {\n    super([], []);\n    this.outs.insert(FALSE_BUS);\n  }\n}\n\nexport class High extends Chip {\n  constructor() {\n    super([], []);\n    this.outs.insert(TRUE_BUS);\n  }\n}\n\nexport class ClockedChip extends Chip {\n  override get clocked(): boolean {\n    return true;\n  }\n\n  #subscription = Clock.get().$.subscribe(({ level }) => {\n    if (level === LOW) {\n      this.tock();\n    } else {\n      this.tick();\n    }\n  });\n\n  override remove() {\n    this.#subscription.unsubscribe();\n    super.remove();\n  }\n}\n\nexport interface PinSide {\n  name: string;\n  start: number;\n  width?: number;\n}\n\nexport interface Connection {\n  // To is the part side\n  to: PinSide;\n  // From is the chip side\n  from: PinSide;\n}\n\nexport type Pinout = Record<string, string>;\nexport interface SerializedChip {\n  id: number;\n  name: string;\n  ins: Pinout;\n  outs: Pinout;\n  pins: Pinout;\n  children: SerializedChip[];\n}\n\nfunction mask(width: number) {\n  return Math.pow(2, width) - 1;\n}\n\nfunction setBus(busses: Pinout, pin: Pin) {\n  busses[pin.name] = bin(\n    (pin.busVoltage & mask(pin.width)) <<\n      (pin as unknown as { start: number }).start ?? 0\n  );\n  return busses;\n}\n\nexport function printChip(chip: Chip): SerializedChip {\n  return {\n    id: chip.id,\n    name: chip.name ?? chip.constructor.name,\n    ins: [...chip.ins.entries()].reduce(setBus, {} as Pinout),\n    outs: [...chip.outs.entries()].reduce(setBus, {} as Pinout),\n    pins: [...chip.pins.entries()].reduce(setBus, {} as Pinout),\n    children: [...chip.parts.values()].map(printChip),\n  };\n}\n\nexport const BUILTIN_NAMES = [\n  \"Register\",\n  \"ARegister\",\n  \"DRegister\",\n  \"PC\",\n  \"RAM8\",\n  \"RAM64\",\n  \"RAM512\",\n  \"RAM4K\",\n  \"RAM16K\",\n  \"ROM32K\",\n  \"Screen\",\n  \"Keyboard\",\n  \"Memory\",\n];\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function and(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 && b === 1 ? HIGH : LOW];\n}\n\nexport function and16(a: number, b: number): [number] {\n  return [a & b & 0xffff];\n}\n\nexport class And extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [n] = and(a, b);\n    this.out().pull(n);\n  }\n}\n\nexport class And16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [n] = and16(a, b);\n    this.out().busVoltage = n;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function dmux(inn: Voltage, sel: Voltage): [Voltage, Voltage] {\n  const a = sel === LOW && inn === HIGH ? HIGH : LOW;\n  const b = sel === HIGH && inn === HIGH ? HIGH : LOW;\n  return [a, b];\n}\n\nexport function dmux4way(\n  inn: Voltage,\n  sel: number\n): [Voltage, Voltage, Voltage, Voltage] {\n  const a = sel === 0b00 && inn === HIGH ? HIGH : LOW;\n  const b = sel === 0b01 && inn === HIGH ? HIGH : LOW;\n  const c = sel === 0b10 && inn === HIGH ? HIGH : LOW;\n  const d = sel === 0b11 && inn === HIGH ? HIGH : LOW;\n  return [a, b, c, d];\n}\n\nexport function dmux8way(\n  inn: Voltage,\n  sel: number\n): [Voltage, Voltage, Voltage, Voltage, Voltage, Voltage, Voltage, Voltage] {\n  const a = sel === 0b000 && inn === HIGH ? HIGH : LOW;\n  const b = sel === 0b001 && inn === HIGH ? HIGH : LOW;\n  const c = sel === 0b010 && inn === HIGH ? HIGH : LOW;\n  const d = sel === 0b011 && inn === HIGH ? HIGH : LOW;\n  const e = sel === 0b100 && inn === HIGH ? HIGH : LOW;\n  const f = sel === 0b101 && inn === HIGH ? HIGH : LOW;\n  const g = sel === 0b110 && inn === HIGH ? HIGH : LOW;\n  const h = sel === 0b111 && inn === HIGH ? HIGH : LOW;\n  return [a, b, c, d, e, f, g, h];\n}\n\nexport class DMux extends Chip {\n  constructor() {\n    super([\"in\", \"sel\"], [\"a\", \"b\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").voltage();\n\n    const [a, b] = dmux(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n  }\n}\n\nexport class DMux4Way extends Chip {\n  constructor() {\n    super([\"in\", \"sel[2]\"], [\"a\", \"b\", \"c\", \"d\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").busVoltage;\n\n    const [a, b, c, d] = dmux4way(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n    this.out(\"c\").pull(c);\n    this.out(\"d\").pull(d);\n  }\n}\n\nexport class DMux8Way extends Chip {\n  constructor() {\n    super([\"in\", \"sel[3]\"], [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").busVoltage;\n\n    const [a, b, c, d, e, f, g, h] = dmux8way(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n    this.out(\"c\").pull(c);\n    this.out(\"d\").pull(d);\n    this.out(\"e\").pull(e);\n    this.out(\"f\").pull(f);\n    this.out(\"g\").pull(g);\n    this.out(\"h\").pull(h);\n  }\n}\n","import { Chip, LOW, Voltage } from \"../../chip\";\n\nexport function mux(a: Voltage, b: Voltage, sel: Voltage): [Voltage] {\n  return [sel === LOW ? a : b];\n}\n\nexport function mux16(a: number, b: number, sel: Voltage): [number] {\n  return [sel === LOW ? a : b];\n}\n\nexport function mux16_4(\n  a: number,\n  b: number,\n  c: number,\n  d: number,\n  sel: number\n): [number] {\n  const s2 = (sel & 0b01) as Voltage;\n  return (sel & 0b10) === 0b00 ? mux16(a, b, s2) : mux16(c, d, s2);\n}\n\nexport function mux16_8(\n  a: number,\n  b: number,\n  c: number,\n  d: number,\n  e: number,\n  f: number,\n  g: number,\n  h: number,\n  sel: number\n): [number] {\n  const s2 = (sel & 0b11) as Voltage;\n  return (sel & 0b100) === 0b000\n    ? mux16_4(a, b, c, d, s2)\n    : mux16_4(e, f, g, h, s2);\n}\n\nexport class Mux extends Chip {\n  constructor() {\n    super([\"a\", \"b\", \"sel\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const sel = this.in(\"sel\").voltage();\n\n    const [set] = mux(a, b, sel);\n    this.out().pull(set);\n  }\n}\n\nexport class Mux16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\", \"sel\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const sel = this.in(\"sel\").voltage();\n    const [out] = mux16(a, b, sel);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Mux4Way16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\", \"c[16]\", \"d[16]\", \"sel[2]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const c = this.in(\"c\").busVoltage;\n    const d = this.in(\"d\").busVoltage;\n    const sel = this.in(\"sel\").busVoltage;\n    const [out] = mux16_4(a, b, c, d, sel);\n\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Mux8Way16 extends Chip {\n  constructor() {\n    super(\n      [\n        \"a[16]\",\n        \"b[16]\",\n        \"c[16]\",\n        \"d[16]\",\n        \"e[16]\",\n        \"f[16]\",\n        \"g[16]\",\n        \"h[16]\",\n        \"sel[3]\",\n      ],\n      [\"out[16]\"]\n    );\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const c = this.in(\"c\").busVoltage;\n    const d = this.in(\"d\").busVoltage;\n    const e = this.in(\"e\").busVoltage;\n    const f = this.in(\"f\").busVoltage;\n    const g = this.in(\"g\").busVoltage;\n    const h = this.in(\"h\").busVoltage;\n    const sel = this.in(\"sel\").busVoltage;\n    const [out] = mux16_8(a, b, c, d, e, f, g, h, sel);\n\n    this.out().busVoltage = out;\n  }\n}\n","import { nand16 } from \"../../../../util/twos\";\nimport { HIGH, LOW, Chip, Voltage } from \"../../chip\";\n\nexport function nand(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 && b === 1 ? LOW : HIGH];\n}\n\nexport class Nand extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = nand(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Nand16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    this.out().busVoltage = nand16(a, b);\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function not(inn: Voltage): [Voltage] {\n  return [inn === LOW ? HIGH : LOW];\n}\n\nexport function not16(inn: number): [number] {\n  return [~inn & 0xffff];\n}\n\nexport class Not extends Chip {\n  constructor() {\n    super([\"in\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"in\").voltage();\n    const [out] = not(a);\n    this.out().pull(out);\n  }\n}\n\nexport class Not16 extends Chip {\n  constructor() {\n    super([\"in[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const [n] = not16(this.in().busVoltage);\n    this.out().busVoltage = n;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function or(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 || b === 1 ? HIGH : LOW];\n}\n\nexport function or16(a: number, b: number): [number] {\n  return [(a | b) & 0xffff];\n}\n\nexport function or8way(a: number): [Voltage] {\n  return [(a & 0xff) === 0 ? LOW : HIGH];\n}\n\nexport class Or extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = or(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Or16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = or16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Or8way extends Chip {\n  constructor() {\n    super([\"in[8]\"], [\"out\"], \"Or8way\");\n  }\n\n  override eval() {\n    const inn = this.in().busVoltage;\n    const [out] = or8way(inn);\n    this.out().pull(out);\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function xor(a: Voltage, b: Voltage): [Voltage] {\n  return [(a === HIGH && b === LOW) || (a === LOW && b === HIGH) ? HIGH : LOW];\n}\n\nexport function xor16(a: number, b: number): [number] {\n  return [(a ^ b) & 0xffff];\n}\n\nexport class Xor extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = xor(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Xor16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = xor16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n","import { Chip } from \"../../chip\";\n\nexport function add16(a: number, b: number): [number] {\n  return [(a + b) & 0xffff];\n}\n\nexport class Add16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"], \"Add16\");\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = add16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n","import { COMMANDS, COMMANDS_OP, Flags } from \"../../../simulator/cpu/alu\";\nimport { bin } from \"../../../util/twos\";\n\nexport const ALUComponent = ({\n  A,\n  op,\n  D,\n  out,\n  flag,\n}: {\n  A: number;\n  op: COMMANDS_OP;\n  D: number;\n  out: number;\n  flag: keyof typeof Flags;\n}) => (\n  <div>\n    <span>ALU</span>\n    <dl>\n      <dt>A</dt> <dd>{bin(A)}</dd>\n      <dt>op</dt> <dd>{COMMANDS.op[op] ?? \"(??)\"}</dd>\n      <dt>D</dt> <dd>{bin(D)}</dd>\n      <dt>=</dt> <dd>{bin(out)}</dd>\n      <dd>{Flags[flag as keyof typeof Flags]}</dd>\n    </dl>\n  </div>\n);\n","import { ALUComponent } from \"../../../../app/components/chips/alu\";\nimport { alu, COMMANDS_OP, Flags } from \"../../../cpu/alu\";\nimport { Chip, HIGH, LOW } from \"../../chip\";\n\nexport class ALUNoStat extends Chip {\n  constructor() {\n    super(\n      [\n        \"x[16]\",\n        \"y[16]\", // 16-bit inputs\n        \"zx\", // zero the x input?\n        \"nx\", // negate the x input?\n        \"zy\", // zero the y input?\n        \"ny\", // negate the y input?\n        \"f\", // compute out = x + y (if 1) or x & y (if 0)\n        \"no\", // negate the out output?\n      ],\n      [\n        \"out[16]\", // 16-bit output\n      ],\n      \"ALU\"\n    );\n  }\n\n  override eval() {\n    const x = this.in(\"x\").busVoltage;\n    const y = this.in(\"y\").busVoltage;\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    const [out] = alu(op, x, y);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class ALU extends Chip {\n  constructor() {\n    super(\n      [\n        \"x[16]\",\n        \"y[16]\", // 16-bit inputs\n        \"zx\", // zero the x input?\n        \"nx\", // negate the x input?\n        \"zy\", // zero the y input?\n        \"ny\", // negate the y input?\n        \"f\", // compute out = x + y (if 1) or x & y (if 0)\n        \"no\", // negate the out output?\n      ],\n      [\n        \"out[16]\", // 16-bit output\n        \"zr\", // 1 if (out === 0), 0 otherwise\n        \"ng\", // 1 if (out < 0),  0 otherwise\n      ],\n      \"ALU\"\n    );\n  }\n\n  override render() {\n    return [\n      <ALUComponent\n        A={this.in(\"x\").busVoltage}\n        op={this.op()}\n        D={this.in(\"y\").busVoltage}\n        out={this.out().busVoltage}\n        flag={\n          (this.out(\"zr\").voltage() === HIGH\n            ? Flags.Zero\n            : this.out(\"ng\").voltage() === HIGH\n            ? Flags.Negative\n            : Flags.Positive) as keyof typeof Flags\n        }\n      />,\n    ];\n  }\n\n  override eval() {\n    const x = this.in(\"x\").busVoltage;\n    const y = this.in(\"y\").busVoltage;\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    const [out, flags] = alu(op, x, y);\n    const ng = flags === Flags.Negative ? HIGH : LOW;\n    const zr = flags === Flags.Zero ? HIGH : LOW;\n    this.out(\"out\").busVoltage = out;\n    this.out(\"ng\").pull(ng);\n    this.out(\"zr\").pull(zr);\n  }\n\n  op(): COMMANDS_OP {\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    return op as COMMANDS_OP;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function halfAdder(a: Voltage, b: Voltage): [Voltage, Voltage] {\n  const sum = (a === 1 && b === 0) || (a === 0 && b === 1) ? HIGH : LOW;\n  const car = a === 1 && b === 1 ? HIGH : LOW;\n\n  return [sum, car];\n}\n\nexport class HalfAdder extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"sum\", \"carry\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [sum, carry] = halfAdder(a, b);\n    this.out(\"sum\").pull(sum);\n    this.out(\"carry\").pull(carry);\n  }\n}\n","import { Chip, Voltage } from \"../../chip\";\nimport { or } from \"../logic/or\";\nimport { halfAdder } from \"./half_adder\";\n\nexport function fullAdder(\n  a: Voltage,\n  b: Voltage,\n  c: Voltage\n): [Voltage, Voltage] {\n  const [s, ca] = halfAdder(a, b);\n  const [sum, cb] = halfAdder(s, c);\n  const [carry] = or(ca, cb);\n\n  return [sum, carry];\n}\n\nexport class FullAdder extends Chip {\n  constructor() {\n    super([\"a\", \"b\", \"c\"], [\"sum\", \"carry\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const c = this.in(\"c\").voltage();\n    const [sum, carry] = fullAdder(a, b, c);\n    this.out(\"sum\").pull(sum);\n    this.out(\"carry\").pull(carry);\n  }\n}\n","import { Chip } from \"../../chip\";\nimport { add16 } from \"./add_16\";\n\nexport function inc16(n: number): [number] {\n  return add16(n, 1);\n}\n\nexport class Inc16 extends Chip {\n  constructor() {\n    super([\"in[16]\"], [\"out[16]\"], \"Inc16\");\n  }\n\n  override eval() {\n    const a = this.in().busVoltage;\n    const [out] = inc16(a);\n    this.out().busVoltage = out;\n  }\n}\n","import { dec } from \"../../../util/twos\";\n\nexport const RegisterComponent = ({\n  name,\n  bits,\n}: {\n  name: string;\n  bits: number;\n}) => (\n  <div>\n    {name}: {dec(bits)}\n  </div>\n);\n","import { RegisterComponent } from \"../../../../app/components/chips/register\";\nimport { ClockedChip, HIGH, LOW, Pin, Voltage } from \"../../chip\";\n\nexport class Bit extends ClockedChip {\n  bit: Voltage = LOW;\n\n  constructor(name?: string) {\n    super([\"in\", \"load\"], [\"out\"], name);\n  }\n\n  override tick() {\n    if (this.in(\"load\").voltage() === HIGH) {\n      this.bit = this.in().voltage();\n    }\n  }\n\n  override tock() {\n    this.out().pull(this.bit ?? 0);\n  }\n\n  override reset() {\n    this.bit = LOW;\n  }\n}\n\nexport class Register extends ClockedChip {\n  bits: number = 0x00;\n\n  constructor(name?: string) {\n    super([\"in[16]\", \"load\"], [\"out[16]\"], name);\n  }\n\n  override tick() {\n    if (this.in(\"load\").voltage() === HIGH) {\n      this.bits = this.in().busVoltage & 0xffff;\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.bits & 0xffff;\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    return name === this.name ? this.out() : super.get(name, offset);\n  }\n\n  override reset() {\n    this.bits = 0x00;\n  }\n}\n\nexport class VRegister extends Register {\n  override render() {\n    return [\n      <RegisterComponent\n        name={this.name ?? `Chip ${this.id}`}\n        bits={this.bits}\n      />,\n    ];\n  }\n}\n\nexport class PC extends ClockedChip {\n  bits: number = 0x00;\n\n  constructor(name?: string) {\n    super([\"in[16]\", \"load\", \"inc\", \"reset\"], [\"out[16]\"], name);\n  }\n\n  override render() {\n    return [<RegisterComponent name=\"PC\" bits={this.bits} />];\n  }\n\n  override tick() {\n    if (this.in(\"reset\").voltage() === HIGH) {\n      this.bits = 0;\n    } else if (this.in(\"load\").voltage() === HIGH) {\n      this.bits = this.in().busVoltage & 0xffff;\n    } else if (this.in(\"inc\").voltage() === HIGH) {\n      this.bits += 1;\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.bits & 0xffff;\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    return name === this.name ? this.out() : super.get(name, offset);\n  }\n\n  override reset() {\n    this.bits = 0x00;\n  }\n}\n","import { ClockedChip } from \"../../chip\";\n\nexport class DFF extends ClockedChip {\n  constructor(name?: string) {\n    super([\"in\"], [\"out\"], name, [\"t\"]);\n  }\n\n  override tick() {\n    // Read in into t\n    let t = this.in().voltage();\n    this.pin(\"t\").pull(t);\n  }\n\n  override tock() {\n    // write t into out\n    let t = this.pin(\"t\").voltage();\n    this.out().pull(t);\n  }\n}\n","import { assertExists } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport ohm from \"ohm-js\";\nimport raw from \"raw.macro\";\nimport {\n  ASSIGN,\n  ASSIGN_ASM,\n  ASSIGN_OP,\n  COMMANDS,\n  COMMANDS_ASM,\n  COMMANDS_OP,\n  JUMP,\n  JUMP_ASM,\n  JUMP_OP,\n} from \"../simulator/cpu/alu\";\nimport { KEYBOARD, SCREEN } from \"../simulator/cpu/memory\";\nimport { makeC } from \"../util/asm\";\nimport { grammars, makeParser, baseSemantics } from \"./base\";\n\nexport const asmGrammar = raw(\"./grammars/asm.ohm\");\nexport const grammar = ohm.grammar(asmGrammar, grammars);\nexport const asmSemantics = grammar.extendSemantics(baseSemantics);\n\n// reload ...\n\nexport interface Asm {\n  instructions: AsmInstruction[];\n}\n\nexport type AsmInstruction =\n  | AsmAInstruction\n  | AsmCInstruction\n  | AsmLabelInstruction;\n\nexport type AsmAInstruction = AsmALabelInstruction | AsmAValueInstruction;\nexport interface AsmALabelInstruction {\n  type: \"A\";\n  label: string;\n}\n\nexport interface AsmAValueInstruction {\n  type: \"A\";\n  value: number;\n}\n\nfunction isALabelInstruction(\n  inst: AsmAInstruction\n): inst is AsmALabelInstruction {\n  return (inst as AsmALabelInstruction).label !== undefined;\n}\n\nexport interface AsmCInstruction {\n  type: \"C\";\n  op: COMMANDS_OP;\n  isM: boolean;\n  store?: ASSIGN_OP;\n  jump?: JUMP_OP;\n}\n\nexport interface AsmLabelInstruction {\n  type: \"L\";\n  label: string;\n}\n\nasmSemantics.addAttribute<Asm>(\"root\", {\n  Root(_) {\n    return this.asm;\n  },\n});\n\nasmSemantics.addAttribute<Asm>(\"asm\", {\n  Root(asm) {\n    return {\n      instructions: asm\n        .child(0)\n        .children.map(({ instruction }) => instruction as AsmInstruction),\n    };\n  },\n});\n\nasmSemantics.addAttribute<AsmInstruction>(\"instruction\", {\n  AInstruction(_at, val): AsmAInstruction {\n    try {\n      return {\n        type: \"A\",\n        label: val.name,\n      };\n    } catch (e) {}\n\n    try {\n      return {\n        type: \"A\",\n        value: val.value,\n      };\n    } catch (e) {}\n\n    throw new Error(`AsmAInstruction must have either a name or a value`);\n  },\n  CInstruction(assignN, opN, jmpN): AsmCInstruction {\n    const assign = assignN.child(0)?.child(0)?.sourceString as ASSIGN_ASM;\n    const op = opN.sourceString.replace(\"M\", \"A\") as COMMANDS_ASM;\n    const jmp = jmpN.child(0)?.child(1)?.sourceString as JUMP_ASM;\n    const isM =\n      assignN.sourceString.includes(\"M\") || opN.sourceString.includes(\"M\");\n    const inst: AsmCInstruction = {\n      type: \"C\",\n      op: COMMANDS.asm[op],\n      isM,\n    };\n    if (jmp) inst.jump = JUMP.asm[jmp];\n    if (assign) inst.store = ASSIGN.asm[assign];\n    return inst;\n  },\n  Label(_o, { name }, _c): AsmLabelInstruction {\n    return {\n      type: \"L\",\n      label: name,\n    };\n  },\n});\n\nexport function fillLabel(asm: Asm) {\n  let nextLabel = 16;\n  const symbols = new Map<string, number>([\n    [\"R0\", 0],\n    [\"R1\", 1],\n    [\"R2\", 2],\n    [\"R3\", 3],\n    [\"R4\", 4],\n    [\"R5\", 5],\n    [\"R6\", 6],\n    [\"R7\", 7],\n    [\"R8\", 8],\n    [\"R9\", 9],\n    [\"R10\", 10],\n    [\"R11\", 11],\n    [\"R12\", 12],\n    [\"R13\", 13],\n    [\"R14\", 14],\n    [\"R15\", 15],\n    [\"SP\", 0],\n    [\"LCL\", 1],\n    [\"ARG\", 2],\n    [\"THIS\", 3],\n    [\"THAT\", 4],\n    [\"SCREEN\", SCREEN],\n    [\"KBD\", KEYBOARD],\n  ]);\n\n  function getLabelValue(label: string) {\n    if (!symbols.has(label)) {\n      symbols.set(label, nextLabel);\n      nextLabel += 1;\n    }\n    return assertExists(symbols.get(label), `Label not in symbols: ${label}`);\n  }\n\n  function transmuteAInstruction(instruction: AsmALabelInstruction) {\n    const value = getLabelValue(instruction.label);\n    (instruction as unknown as AsmAValueInstruction).value = value;\n    delete (instruction as unknown as { label: undefined }).label;\n  }\n\n  let unfilled: AsmALabelInstruction[] = [];\n  let line = 0;\n  for (const instruction of asm.instructions) {\n    if (instruction.type === \"L\") {\n      if (symbols.has(instruction.label)) {\n        throw new Error(`ASM Duplicate label ${instruction.label}`);\n      } else {\n        symbols.set(instruction.label, line);\n      }\n      continue;\n    }\n\n    line += 1;\n\n    if (instruction.type === \"A\") {\n      if (isALabelInstruction(instruction)) {\n        unfilled.push(instruction);\n      }\n    }\n  }\n\n  unfilled.forEach(transmuteAInstruction);\n}\n\nexport function emit(asm: Asm): number[] {\n  return asm.instructions\n    .map((inst) => {\n      if (inst.type === \"A\") {\n        if (isALabelInstruction(inst)) {\n          throw new Error(`ASM Emitting unfilled A instruction`);\n        }\n        return inst.value;\n      }\n      if (inst.type === \"C\") {\n        return makeC(inst.isM, inst.op, inst.store, inst.jump);\n      }\n      return undefined;\n    })\n    .filter((op): op is number => op !== undefined);\n}\n\nexport const ASM = {\n  grammar: asmGrammar,\n  semantics: asmSemantics,\n  parser: grammar,\n  parse: makeParser<Asm>(grammar, asmSemantics),\n  passes: {\n    fillLabel,\n    emit,\n  },\n};\n","import { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { ASM } from \"../languages/asm\";\nimport { int2 } from \"../util/twos\";\n\nexport async function load(fs: FileSystem, path: string): Promise<number[]> {\n  if (path.endsWith(\".hack\")) {\n    return loadHack(fs, path);\n  }\n\n  if (path.endsWith(\".asm\")) {\n    return loadAsm(fs, path);\n  }\n\n  throw new Error(`Cannot load file without hack or asm extension ${path}`);\n}\n\nexport async function loadAsm(fs: FileSystem, path: string): Promise<number[]> {\n  const source = await fs.readFile(path);\n  const parsed = ASM.parse(source);\n  if (isErr(parsed)) {\n    throw Err(parsed);\n  }\n\n  const asm = Ok(parsed);\n  ASM.passes.fillLabel(asm);\n  return ASM.passes.emit(asm);\n}\n\nexport async function loadHack(\n  fs: FileSystem,\n  path: string\n): Promise<number[]> {\n  return (await fs.readFile(path))\n    .split(\"\\n\")\n    .filter((line) => line.trim() !== \"\")\n    .map(int2);\n}\n","import { assert } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Subject } from \"rxjs\";\nimport { op } from \"../../util/asm\";\nimport { int10, int16, int2 } from \"../../util/twos\";\nimport { load } from \"../fs\";\n\nexport const FORMATS = [\"bin\", \"dec\", \"hex\", \"asm\"];\nexport type Format = typeof FORMATS[number];\n\nexport const SCREEN = 0x4000;\nexport const SCREEN_ROWS = 512;\nexport const SCREEN_COLS = 256;\nexport const KEYBOARD = 0x6000;\n\nexport class Memory {\n  #memory: Int16Array;\n  updates = new Subject<void>();\n\n  get size(): number {\n    return this.#memory.length;\n  }\n\n  constructor(memory: ArrayBuffer | number) {\n    if (typeof memory === \"number\") {\n      this.#memory = new Int16Array(memory);\n    } else {\n      this.#memory = new Int16Array(memory);\n    }\n  }\n\n  get(index: number): number {\n    if (index < 0 || index >= this.size) {\n      return 0xffff;\n    }\n    return this.#memory[index] ?? 0;\n  }\n\n  set(index: number, value: number): void {\n    if (index >= 0 && index < this.size) {\n      this.#memory[index] = value & 0xffff;\n    }\n  }\n\n  update(cell: number, value: string, format: Format) {\n    let current: number;\n    switch (format) {\n      case \"asm\":\n        current = op(value);\n        break;\n      case \"bin\":\n        current = int2(value);\n        break;\n      case \"hex\":\n        current = int16(value);\n        break;\n      case \"dec\":\n      default:\n        current = int10(value);\n        break;\n    }\n\n    if (isFinite(current) && current <= 0xffff) {\n      this.set(cell, current);\n      this.updates.next();\n    }\n  }\n\n  async load(fs: FileSystem, path: string) {\n    try {\n      (await load(fs, path)).map((v, i) => this.set(i, v));\n    } catch (cause) {\n      // throw new Error(`ROM32K Failed to load file ${path}`, { cause });\n      throw new Error(`Memory Failed to load file ${path}`);\n    }\n  }\n\n  range(start = 0, end = this.size): number[] {\n    return [...this.#memory.slice(start, end)];\n  }\n\n  *map<T>(\n    fn: (index: number, value: number) => T,\n    start = 0,\n    end = this.size\n  ): Iterable<T> {\n    assert(start < end);\n    for (let i = start; i < end; i++) {\n      yield fn(i, this.get(i));\n    }\n  }\n}\n","import produce from \"immer\";\nimport { Dispatch, useEffect, useReducer, useState } from \"react\";\n\nexport function useImmerReducer<T, Reducers extends Record<string, Function>>(\n  reducers: Reducers,\n  initialState: T\n) {\n  return useReducer(\n    (\n      state: T,\n      command: {\n        action: keyof Reducers;\n        payload?: {};\n      }\n    ) =>\n      produce(state, (draft: T) => {\n        reducers[command.action](draft, command.payload as any);\n      }),\n    initialState\n  );\n}\n\nexport function useStateInitializer<T>(init: T): [T, Dispatch<T>] {\n  const [state, setState] = useState<T>(init);\n  useEffect(() => {\n    setState(init);\n  }, [init]);\n  return [state, setState];\n}\n","import { width } from \"@davidsouther/jiffies/lib/esm/dom/css/sizing\";\nimport { useCallback, useState } from \"react\";\nimport { useStateInitializer } from \"../../util/react\";\n\nconst Mode = { VIEW: 0, EDIT: 1 };\n\nexport const InlineEdit = (props: {\n  mode?: keyof typeof Mode;\n  value: string;\n  onChange: (value: string) => void;\n}) => {\n  const [mode, setMode] = useState(props.mode ?? Mode.VIEW);\n  const [value, setValue] = useStateInitializer(props.value);\n\n  const render = () => {\n    switch (mode) {\n      case Mode.EDIT:\n        return edit();\n      case Mode.VIEW:\n        return view();\n      default:\n        return <span />;\n    }\n  };\n\n  const view = () => (\n    <span\n      style={{ cursor: \"text\", ...width(\"full\", \"inline\") }}\n      onClick={() => {\n        setMode(Mode.EDIT);\n      }}\n    >\n      {value}\n    </span>\n  );\n\n  const doSelect = useCallback(\n    (ref: HTMLInputElement | null) => ref?.select(),\n    []\n  );\n  const doChange = useCallback(\n    (target: HTMLInputElement) => {\n      setMode(Mode.VIEW);\n      setValue(target.value ?? \"\");\n      props.onChange(target.value ?? \"\");\n    },\n    [props, setMode, setValue]\n  );\n  const edit = () => {\n    const edit = (\n      <span style={{ display: \"block\", position: \"relative\" }}>\n        <input\n          ref={doSelect}\n          style={{\n            zIndex: \"10\",\n            position: \"absolute\",\n            left: \"0\",\n            marginTop: \"-0.375rem\",\n          }}\n          onBlur={({ target }) => doChange(target)}\n          onKeyPress={({ key, target }) => {\n            if (key === \"Enter\") {\n              doChange(target as HTMLInputElement);\n            }\n          }}\n          type=\"text\"\n          defaultValue={value}\n        />\n      </span>\n    );\n    return edit;\n  };\n\n  return render();\n};\n\nexport default InlineEdit;\n","import {\n  Key,\n  MutableRefObject,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n} from \"react\";\n\nexport interface VirtualScrollSettings {\n  /**Minimum offset into the adapter. Default is 0.  */\n  minIndex: number;\n  /** Maximum offset into the adapter. Default is Number.MAX_SAFE_INTEGER.  */\n  maxIndex: number;\n  /** Initial index to start rendering from. Default is minIndex.  */\n  startIndex: number;\n  /**\n   * Number of items to render in visible area. Default is entire range from\n   * minIndex to maxIndex.\n   */\n  count: number;\n  /**\n   * Maximum number of items to render on either side of the visible area.\n   * Default is `count`.\n   */\n  tolerance: number;\n  /** Height of each item, in pixels. Default is 20px. */\n  itemHeight: number;\n}\n\nexport interface VirtualScrollDataAdapter<T> {\n  (offset: number, limit: number): Iterable<T>;\n}\n\nexport function arrayAdapter<T>(data: T[]): VirtualScrollDataAdapter<T> {\n  return (offset, limit) => data.slice(offset, offset + limit);\n}\n\nexport interface VirtualScrollProps<T, U extends ReactNode> {\n  settings?: Partial<VirtualScrollSettings>;\n  get: VirtualScrollDataAdapter<T>;\n  row: (t: T) => U;\n  rowKey: (t: T) => Key;\n}\n\nexport function fillVirtualScrollSettings(\n  settings: Partial<VirtualScrollSettings>\n): VirtualScrollSettings {\n  const {\n    minIndex = 0,\n    maxIndex = Number.MAX_SAFE_INTEGER,\n    startIndex = 0,\n    itemHeight = 20,\n    count = maxIndex - minIndex + 1,\n    tolerance = count,\n  } = settings;\n\n  return { minIndex, maxIndex, startIndex, itemHeight, count, tolerance };\n}\n\nexport function initialState<T>(\n  settings: VirtualScrollSettings,\n  adapter: VirtualScrollDataAdapter<T>,\n  ref: MutableRefObject<HTMLDivElement | null>\n): VirtualScrollState<T> {\n  // From Denis Hilt, https://blog.logrocket.com/virtual-scrolling-core-principles-and-basic-implementation-in-react/\n  const { minIndex, maxIndex, startIndex, itemHeight, count, tolerance } =\n    settings;\n  const bufferedItems = count + 2 * tolerance;\n  const itemsAbove = Math.max(0, startIndex - tolerance - minIndex);\n\n  const viewportHeight = count * itemHeight;\n  const totalHeight = (maxIndex - minIndex + 1) * itemHeight;\n  const toleranceHeight = tolerance * itemHeight;\n  const bufferHeight = viewportHeight + 2 * toleranceHeight;\n  const topPaddingHeight = itemsAbove * itemHeight;\n  const bottomPaddingHeight = totalHeight - (topPaddingHeight + bufferHeight);\n\n  const state: VirtualScrollState<T> = {\n    scrollTop: 0,\n    settings,\n    viewportHeight,\n    totalHeight,\n    toleranceHeight,\n    bufferedItems,\n    topPaddingHeight,\n    bottomPaddingHeight,\n    data: [],\n  };\n\n  return {\n    ...state,\n    ...doScroll(topPaddingHeight + toleranceHeight, state, adapter),\n  };\n}\n\nexport function getData<T>(\n  minIndex: number,\n  maxIndex: number,\n  offset: number,\n  limit: number,\n  get: VirtualScrollDataAdapter<T>\n): T[] {\n  const start = Math.max(0, minIndex, offset);\n  const end = Math.min(maxIndex, offset + limit - 1);\n  const data = get(start, end - start);\n  return [...data];\n}\n\ninterface ScrollUpdate<T> {\n  scrollTop: number;\n  topPaddingHeight: number;\n  bottomPaddingHeight: number;\n  data: T[];\n}\n\nexport function doScroll<T>(\n  scrollTop: number,\n  state: VirtualScrollState<T>,\n  get: VirtualScrollDataAdapter<T>\n): ScrollUpdate<T> {\n  const {\n    totalHeight,\n    toleranceHeight,\n    bufferedItems,\n    settings: { itemHeight, minIndex, maxIndex },\n  } = state;\n  const index =\n    minIndex + Math.floor((scrollTop - toleranceHeight) / itemHeight);\n  const data = getData(minIndex, maxIndex, index, bufferedItems, get);\n  const topPaddingHeight = Math.max((index - minIndex) * itemHeight, 0);\n  const bottomPaddingHeight = Math.max(\n    totalHeight - (topPaddingHeight + data.length * itemHeight),\n    0\n  );\n\n  return { scrollTop, topPaddingHeight, bottomPaddingHeight, data };\n}\n\ninterface VirtualScrollState<T> {\n  settings: VirtualScrollSettings;\n  scrollTop: number; // px\n  bufferedItems: number; // count\n  totalHeight: number; // px\n  viewportHeight: number; // px\n  topPaddingHeight: number; // px\n  bottomPaddingHeight: number; // px\n  toleranceHeight: number; // px\n  data: T[];\n}\n\nconst scrollReducer =\n  <T extends {}>(get: VirtualScrollDataAdapter<T>) =>\n  (state: VirtualScrollState<T>, scrollTop: number) => ({\n    ...state,\n    ...doScroll(scrollTop, state, get),\n  });\n\nexport const VirtualScroll = <T extends {}, U extends ReactNode = ReactNode>(\n  props: VirtualScrollProps<T, U> & { className?: string }\n) => {\n  const viewportRef = useRef<HTMLDivElement | null>(null);\n\n  const { settings, startState, reducer } = useMemo(() => {\n    const settings = fillVirtualScrollSettings(props.settings ?? {});\n    const startState = initialState<T>(settings, props.get, viewportRef);\n    const reducer = scrollReducer(props.get);\n    return { settings, reducer, startState };\n  }, [props.settings, props.get]);\n\n  const [state, dispatchScroll] = useReducer(reducer, startState);\n\n  useEffect(() => {\n    if (viewportRef.current !== null) {\n      dispatchScroll(viewportRef.current.scrollTop);\n    }\n  }, [settings, props.row]);\n\n  const initialScroll = useCallback(\n    (div: HTMLDivElement | null) => {\n      if (div) {\n        div.scrollTop = viewportRef.current\n          ? viewportRef.current.scrollTop\n          : settings.startIndex * settings.itemHeight;\n      }\n      viewportRef.current = div;\n    },\n    [viewportRef, settings.startIndex, settings.itemHeight]\n  );\n\n  const rows = state.data.map((d) => (\n    <div key={props.rowKey(d)} style={{ height: `${settings.itemHeight}px` }}>\n      {props.row(d)}\n    </div>\n  ));\n\n  return (\n    <div\n      ref={initialScroll}\n      style={{\n        height: `${state.viewportHeight}px`,\n        overflowY: \"scroll\",\n        overflowAnchor: \"none\",\n      }}\n      className={props.className ?? \"\"}\n      onScroll={(e) => dispatchScroll((e.target as HTMLDivElement).scrollTop)}\n    >\n      <div style={{ height: `${state.topPaddingHeight}px` }} />\n      {rows}\n      <div style={{ height: `${state.bottomPaddingHeight}px` }} />\n    </div>\n  );\n};\n\nexport default VirtualScroll;\n","import { ReactNode, useCallback, useContext, useMemo, useState } from \"react\";\nimport { rounded } from \"@davidsouther/jiffies/lib/esm/dom/css/border\";\n\nimport {\n  Format,\n  FORMATS,\n  Memory as MemoryChip,\n} from \"../../../simulator/cpu/memory\";\nimport { asm } from \"../../../util/asm\";\nimport { bin, dec, hex } from \"../../../util/twos\";\nimport InlineEdit from \"../pico/inline_edit\";\nimport VirtualScroll, { VirtualScrollSettings } from \"../pico/virtual_scroll\";\nimport { Icon } from \"../pico/icon\";\nimport { AppContext } from \"../../App.context\";\nimport { t } from \"@lingui/macro\";\n\nconst ITEM_HEIGHT = 34;\n\nexport const MemoryBlock = ({\n  memory,\n  jmp = { value: 0 },\n  highlight = -1,\n  editable = false,\n  format = dec,\n  onChange = () => {},\n}: {\n  jmp?: { value: number };\n  memory: MemoryChip;\n  highlight?: number;\n  editable?: boolean;\n  format?: (v: number) => string;\n  onChange?: (i: number, value: string, previous: number) => void;\n}) => {\n  const settings = useMemo<Partial<VirtualScrollSettings>>(\n    () => ({\n      count: 20,\n      maxIndex: memory.size,\n      itemHeight: ITEM_HEIGHT,\n      startIndex: jmp.value,\n    }),\n    [memory.size, jmp]\n  );\n  const get = useCallback(\n    (offset: number, count: number) =>\n      memory\n        .range(offset, offset + count)\n        .map((v, i) => [i + offset, v] as [number, number]),\n    [memory]\n  );\n  const row = useCallback(\n    ([i, v]: [number, number]) => (\n      <MemoryCell\n        index={i}\n        value={format(v)}\n        editable={editable}\n        highlight={i === highlight}\n        onChange={onChange}\n      />\n    ),\n    [format, editable, highlight, onChange]\n  );\n\n  return (\n    <VirtualScroll<[number, number], ReactNode>\n      settings={settings}\n      get={get}\n      row={row}\n      rowKey={([i]) => i}\n    />\n  );\n};\n\nexport const MemoryCell = ({\n  index,\n  value,\n  highlight = false,\n  editable = false,\n  onChange = () => {},\n}: {\n  index: number;\n  value: string;\n  highlight?: boolean;\n  editable?: boolean;\n  onChange?: (i: number, value: string, previous: number) => void;\n}) => (\n  <div style={{ display: \"flex\", height: \"100%\" }}>\n    <code\n      style={{\n        ...rounded(\"none\"),\n        ...(highlight\n          ? { background: \"var(--code-kbd-background-color)\" }\n          : {}),\n      }}\n    >\n      {hex(index)}\n    </code>\n    <code\n      style={{\n        flex: \"1\",\n        textAlign: \"right\",\n        ...rounded(\"none\"),\n        ...(highlight\n          ? { background: \"var(--code-kbd-background-color)\" }\n          : {}),\n      }}\n    >\n      {editable ? (\n        <InlineEdit\n          value={value}\n          onChange={(newValue: string) =>\n            onChange(index, newValue, Number(value))\n          }\n        />\n      ) : (\n        <span>{value}</span>\n      )}\n    </code>\n  </div>\n);\n\nexport const Memory = ({\n  name = \"Memory\",\n  highlight = -1,\n  editable = true,\n  memory,\n  format = \"dec\",\n}: {\n  name?: string;\n  editable?: boolean;\n  highlight?: number;\n  memory: MemoryChip;\n  format: Format;\n}) => {\n  const [fmt, setFormat] = useState(format);\n  const [jmp, setJmp] = useState(\"0\");\n  const [goto, setGoto] = useState({ value: 0 });\n\n  const jumpTo = () => {\n    setGoto({ value: Number(jmp) });\n  };\n\n  const { filePicker, fs, setStatus } = useContext(AppContext);\n  const doLoad = useCallback(async () => {\n    try {\n      const file = await filePicker.select();\n      await memory.load(fs, file);\n    } catch (e) {\n      console.error(e);\n      setStatus(`Failed to load into memory`);\n    }\n  }, [fs, filePicker, memory, setStatus]);\n\n  const doUpdate = useCallback(\n    (i: number, v: string) => {\n      memory.update(i, v, fmt ?? \"dec\");\n    },\n    [memory, fmt]\n  );\n\n  return (\n    <article className=\"panel\">\n      <header>\n        <div>{name}</div>\n        <fieldset role=\"group\">\n          <button onClick={doLoad} className=\"flex-0\">\n            <Icon name=\"upload_file\" />\n          </button>\n          <input\n            style={{ width: \"4em\", height: \"100%\" }}\n            placeholder={t`Goto`}\n            onKeyDown={({ key }) => key === \"Enter\" && jumpTo()}\n            onChange={({ target: { value } }) => setJmp(value ?? \"0\")}\n          />\n          <button onClick={jumpTo} className=\"flex-0\">\n            <Icon name=\"move_down\" />\n          </button>\n          {FORMATS.map((option) => (\n            <label\n              className=\"flex-0\"\n              key={option}\n              role=\"button\"\n              aria-current={option === fmt}\n            >\n              <input\n                type=\"radio\"\n                name={name}\n                value={option}\n                checked={option === fmt}\n                onChange={() => setFormat(option)}\n              />\n              {option}\n            </label>\n          ))}\n        </fieldset>\n      </header>\n      <MemoryBlock\n        jmp={goto}\n        memory={memory}\n        highlight={highlight}\n        editable={editable}\n        format={(v: number) => doFormat(fmt, v)}\n        onChange={doUpdate}\n      />\n    </article>\n  );\n};\n\nexport default Memory;\n\nfunction doFormat(format: Format, v: number): string {\n  switch (format) {\n    case \"bin\":\n      return bin(v);\n    case \"hex\":\n      return hex(v);\n    case \"asm\":\n      return asm(v);\n    case \"dec\":\n    default:\n      return dec(v);\n  }\n}\n","import { Bus, ClockedChip, Pin } from \"../../chip\";\nimport { assert } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { Memory as MemoryComponent } from \"../../../../app/components/chips/memory\";\nimport { Memory, Memory as MemoryChip } from \"../../../cpu/memory\";\n\nexport class RAM extends ClockedChip {\n  protected memory: MemoryChip;\n  private nextData: number = 0;\n  private address: number = 0;\n\n  constructor(protected readonly width: number, name?: string) {\n    super([\"in[16]\", \"load\", `address[${width}]`], [`out[16]`], name);\n    this.memory = new MemoryChip(Math.pow(2, this.width));\n  }\n\n  override tick() {\n    const load = this.in(\"load\").voltage();\n    this.address = this.in(\"address\").busVoltage;\n    if (load) {\n      this.nextData = this.in().busVoltage;\n      this.memory.set(this.address, this.nextData);\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.memory?.get(this.address) ?? 0;\n  }\n\n  override eval() {\n    const address = this.in(\"address\").busVoltage;\n    this.out().busVoltage = this.memory?.get(address) ?? 0;\n  }\n\n  at(idx: number): Pin {\n    assert(\n      idx < this.memory.size,\n      () => `Request out of bounds (${idx} >= ${this.memory.size})`\n    );\n    return new RamBus(`${this.name}[${idx}]`, idx, this.memory);\n  }\n\n  override render() {\n    return [\n      <MemoryComponent\n        name={this.name}\n        memory={this.memory}\n        format=\"dec\"\n        highlight={this.address}\n      />,\n    ];\n  }\n}\n\nexport class RamBus extends Bus {\n  constructor(\n    name: string,\n    private readonly index: number,\n    private ram: Memory\n  ) {\n    super(name);\n  }\n\n  override get busVoltage(): number {\n    return this.ram.get(this.index);\n  }\n\n  override set busVoltage(num: number) {\n    this.ram.set(this.index, num);\n  }\n}\n\nexport class RAM8 extends RAM {\n  constructor(name?: string) {\n    super(3, name);\n  }\n\n  override render() {\n    return [<span>RAM {this.width}</span>];\n  }\n}\n\nexport class RAM64 extends RAM {\n  constructor(name?: string) {\n    super(6, name);\n  }\n}\n\nexport class RAM512 extends RAM {\n  constructor(name?: string) {\n    super(9, name);\n  }\n}\n\nexport class RAM4K extends RAM {\n  constructor(name?: string) {\n    super(12, name);\n  }\n}\n\nexport class RAM16K extends RAM {\n  constructor(name?: string) {\n    super(14, name);\n  }\n}\n","import { CSSProperties, ReactNode } from \"react\";\n\nexport const Panel = (props: {\n  children: ReactNode;\n  header?: ReactNode;\n  footer?: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n}) => {\n  return (\n    <article className={[\"panel\", props.className ?? \"\"].join(\" \")}>\n      {props.header && <header>{props.header}</header>}\n      <main>{props.children}</main>\n      {props.footer && <footer>{props.footer}</footer>}\n    </article>\n  );\n};\n\nexport const Accordian = (props: {\n  children: ReactNode;\n  summary: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  open?: boolean;\n}) => {\n  return (\n    <details\n      className={props.className ?? \"\"}\n      open={props.open}\n      style={props.style}\n    >\n      <summary>\n        <div className=\"flex row align-baseline\">{props.summary}</div>\n      </summary>\n      {props.children}\n    </details>\n  );\n};\n","import { assertExists } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { Trans } from \"@lingui/macro\";\nimport { useCallback, useRef } from \"react\";\nimport { useClockFrame } from \"../../../simulator/chip/clock\";\nimport { Memory } from \"../../../simulator/cpu/memory\";\nimport { Panel } from \"../shell/panel\";\n\nconst WHITE = \"white\";\nconst BLACK = \"black\";\ntype COLOR = typeof WHITE | typeof BLACK;\n\nexport interface ScreenMemory {\n  get(idx: number): number;\n}\n\nexport function reduceScreen(memory: Memory, offset = 0): ScreenMemory {\n  return {\n    get(idx: number): number {\n      return memory.get(offset + idx);\n    },\n  };\n}\n\nfunction get(mem: ScreenMemory, x: number, y: number): COLOR {\n  const byte = mem.get(32 * y + ((x / 16) | 0));\n  const bit = byte & (1 << x % 16);\n  return bit === 0 ? WHITE : BLACK;\n}\n\nfunction set(data: Uint8ClampedArray, x: number, y: number, value: COLOR) {\n  const pixel = (y * 512 + x) * 4;\n  const color = value === WHITE ? 255 : 0;\n  data[pixel] = color;\n  data[pixel + 1] = color;\n  data[pixel + 2] = color;\n  data[pixel + 3] = 255;\n}\n\nfunction drawImage(ctx: CanvasRenderingContext2D, memory: ScreenMemory) {\n  const image = assertExists(\n    ctx.getImageData(0, 0, 512, 256),\n    \"Failed to create Context2d\"\n  );\n  for (let col = 0; col < 512; col++) {\n    for (let row = 0; row < 256; row++) {\n      const color = get(memory, col, row);\n      set(image.data, col, row, color);\n    }\n  }\n  ctx.putImageData(image, 0, 0);\n}\n\nexport const Screen = ({ memory }: { memory: ScreenMemory }) => {\n  let canvas = useRef<HTMLCanvasElement>();\n  useClockFrame(\n    useCallback(() => {\n      const ctx = canvas.current?.getContext(\"2d\") ?? undefined;\n\n      if (ctx) {\n        drawImage(ctx, memory);\n      }\n    }, [memory])\n  );\n\n  return (\n    <Panel header={<Trans>Screen</Trans>}>\n      <figure\n        style={{\n          width: \"100%\",\n          maxWidth: \"512px\",\n          boxSizing: \"content-box\",\n          marginInline: \"auto\",\n          margin: \"0\",\n          borderTop: \"2px solid gray\",\n          borderLeft: \"2px solid gray\",\n          borderBottom: \"2px solid lightgray\",\n          borderRight: \"2px solid lightgray\",\n        }}\n      >\n        <canvas\n          ref={(ref) => (canvas.current = ref ?? undefined)}\n          width={512}\n          height={256}\n        ></canvas>\n      </figure>\n    </Panel>\n  );\n};\n","import { KeyboardEvent, useCallback, useState } from \"react\";\nimport { Keyboard as KeyboardChip } from \"../../../simulator/chip/builtins/computer/computer\";\nimport { Icon } from \"../pico/icon\";\nimport { RegisterComponent } from \"./register\";\n\nconst KeyMap: Record<string, number | undefined> = {\n  // Delete: 127,\n  Enter: 128,\n  Backspace: 129,\n  ArrowLeft: 130,\n  ArrowUp: 131,\n  ArrowRight: 132,\n  ArrowDown: 133,\n  Home: 134,\n  End: 135,\n  PageUp: 136,\n  PageDown: 137,\n  Insert: 138,\n  Delete: 139,\n  Escape: 140,\n  F1: 141,\n  F2: 142,\n  F3: 143,\n  F4: 144,\n  F5: 145,\n  F6: 146,\n  F7: 147,\n  F8: 148,\n  F9: 149,\n  F10: 150,\n  F11: 151,\n  F12: 152,\n};\n\nfunction keyPressToHackCharacter(keypress: KeyboardEvent): number {\n  if (KeyMap[keypress.key]) {\n    return KeyMap[keypress.key]!;\n  }\n  if (keypress.key.length === 1) {\n    const code = keypress.key.charCodeAt(0);\n    if (code >= 32 && code <= 126) {\n      return code;\n    }\n  }\n\n  return 0;\n}\n\nexport const Keyboard = ({ keyboard }: { keyboard: KeyboardChip }) => {\n  const [showPicker, setShowPicker] = useState(false);\n  const [bits, setBits] = useState(keyboard.out().busVoltage);\n\n  const setKey = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      const key = keyPressToHackCharacter(event);\n      if (key === 0) {\n        return;\n      }\n      event.preventDefault();\n      keyboard.setKey(key);\n      setBits(keyboard.out().busVoltage);\n      setShowPicker(false);\n    },\n    [keyboard, setShowPicker, setBits]\n  );\n\n  const changeKey = useCallback(() => {\n    setShowPicker(true);\n  }, []);\n\n  return (\n    <div className=\"flex row align-baseline\">\n      <div className=\"flex-1\">\n        <RegisterComponent name=\"Keyboard\" bits={bits} />\n      </div>\n      <div className=\"flex-1\">\n        {showPicker ? (\n          <input ref={(e) => e?.focus()} type=\"text\" onKeyDown={setKey} />\n        ) : (\n          <button onClick={changeKey}>\n            <Icon name=\"keyboard\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { alu, COMMANDS_OP, Flags } from \"./alu\";\nimport { Memory } from \"./memory\";\n\nexport interface CPUInput {\n  inM: number;\n  instruction: number;\n  reset: boolean;\n}\n\nexport interface CPUOutput {\n  outM: number;\n  writeM: boolean;\n  addressM: number;\n}\n\nexport interface CPUState {\n  A: number;\n  D: number;\n  PC: number;\n  ALU: number;\n  flag: number;\n}\n\nexport function emptyState(): CPUState {\n  return { A: 0, D: 0, PC: 0, ALU: 0, flag: Flags.Zero };\n}\n\nconst BITS = {\n  c: 0b1000_0000_0000_0000,\n  x1: 0b1001_0000_0000_0000,\n  x2: 0b1001_0000_0000_0000,\n  am: 0b1001_0000_0000_0000,\n  op: 0b0000_1111_1100_0000,\n  d1: 0b1000_0000_0010_0000,\n  d2: 0b1000_0000_0001_0000,\n  d3: 0b1000_0000_0000_1000,\n  j1: 0b1000_0000_0000_0001,\n  j2: 0b1000_0000_0000_0010,\n  j3: 0b1000_0000_0000_0100,\n};\n\nexport function decode(instruction: number) {\n  function bit(bit: number): boolean {\n    return (instruction & bit) === bit;\n  }\n  const bits = {\n    c: bit(BITS.c),\n    x1: bit(BITS.x1),\n    x2: bit(BITS.x2),\n    am: bit(BITS.am),\n    op: ((instruction & BITS.op) >> 6) as COMMANDS_OP,\n    d1: bit(BITS.d1),\n    d2: bit(BITS.d2),\n    d3: bit(BITS.d3),\n    j1: bit(BITS.j1),\n    j2: bit(BITS.j2),\n    j3: bit(BITS.j3),\n  };\n\n  return bits;\n}\n\nexport function cpuTick(\n  { inM, instruction }: CPUInput,\n  { A, D, PC }: CPUState\n): [CPUState, boolean] {\n  const bits = decode(instruction);\n  const a = bits.am ? inM : A;\n  const [ALU, flag] = alu(bits.op, D, a);\n\n  return [{ A, D, PC: PC + 1, ALU, flag }, bits.d3];\n}\n\nexport function cpuTock(\n  { inM, instruction, reset }: CPUInput,\n  { A, D, PC, ALU, flag }: CPUState\n): [CPUOutput, CPUState] {\n  const bits = decode(instruction);\n\n  const j1 = bits.j1 && flag === Flags.Positive;\n  const j2 = bits.j2 && flag === Flags.Zero;\n  const j3 = bits.j3 && flag === Flags.Negative;\n  const jmp = j1 || j2 || j3;\n\n  PC = reset ? 0 : jmp ? A : PC;\n\n  if (bits.d2) {\n    D = ALU;\n  }\n\n  if (!bits.c) {\n    A = instruction & 0x7fff;\n  } else if (bits.d1) {\n    A = ALU;\n  }\n\n  const a = bits.am ? inM : A;\n  const alu2 = alu(bits.op, D, a);\n\n  ALU = alu2[0];\n  flag = alu2[1];\n\n  const output: CPUOutput = {\n    addressM: A,\n    outM: ALU,\n    writeM: bits.d3,\n  };\n\n  const state: CPUState = {\n    A,\n    D,\n    ALU,\n    flag,\n    PC,\n  };\n\n  return [output, state];\n}\n\nexport function cpu(input: CPUInput, state: CPUState): [CPUOutput, CPUState] {\n  const [tickState, _writeM] = cpuTick(input, state);\n  return cpuTock(input, tickState);\n}\n\nexport class CPU {\n  RAM: Memory;\n  ROM: Memory;\n\n  #pc = 0;\n  #a = 0;\n  #d = 0;\n\n  #tickState: CPUState = {\n    A: 0,\n    D: 0,\n    PC: 0,\n    ALU: 0,\n    flag: Flags.Zero,\n  };\n\n  get PC() {\n    return this.#pc;\n  }\n\n  get A() {\n    return this.#a;\n  }\n\n  get D() {\n    return this.#d;\n  }\n\n  constructor({\n    RAM = new Memory(0x7fff),\n    ROM,\n  }: {\n    RAM?: Memory;\n    ROM: Memory;\n  }) {\n    this.RAM = RAM;\n    this.ROM = ROM;\n  }\n\n  reset() {\n    this.#pc = 0;\n    this.#a = 0;\n    this.#d = 0;\n  }\n\n  tick() {\n    const [{ addressM, outM, writeM }, { A, D, PC }] = cpu(\n      {\n        inM: this.RAM.get(this.#a),\n        instruction: this.ROM.get(this.#pc),\n        reset: false,\n      },\n      {\n        A: this.#a,\n        D: this.#d,\n        PC: this.#pc,\n        ALU: this.#d,\n        flag: Flags.Zero,\n      }\n    );\n\n    this.#a = A;\n    this.#d = D;\n    this.#pc = PC;\n\n    if (writeM) {\n      this.RAM.set(addressM, outM);\n    }\n  }\n}\n","import { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Screen as ScreenComponent } from \"../../../../app/components/chips/screen\";\nimport { Keyboard as KeyboardComponent } from \"../../../../app/components/chips/keyboard\";\nimport { Chip, ClockedChip, ConstantBus, HIGH, LOW, Pin } from \"../../chip\";\nimport { RAM, RAM16K } from \"../sequential/ram\";\nimport {\n  CPUInput,\n  CPUState,\n  cpuTick,\n  cpuTock,\n  decode,\n  emptyState,\n} from \"../../../cpu/cpu\";\nimport { int10 } from \"../../../../util/twos\";\nimport { load } from \"../../../fs\";\nimport { Flags } from \"../../../cpu/alu\";\nimport { RegisterComponent } from \"../../../../app/components/chips/register\";\nimport { ALUComponent } from \"../../../../app/components/chips/alu\";\nimport { KEYBOARD, SCREEN } from \"../../../cpu/memory\";\n\nexport class ROM32K extends RAM {\n  constructor() {\n    super(16, \"ROM\");\n  }\n\n  override async load(fs: FileSystem, path: string) {\n    try {\n      (await load(fs, path)).map((v, i) => (this.at(i).busVoltage = v));\n    } catch (cause) {\n      // throw new Error(`ROM32K Failed to load file ${path}`, { cause });\n      throw new Error(`ROM32K Failed to load file ${path}`);\n    }\n  }\n}\n\nexport class Screen extends RAM {\n  static readonly OFFSET = SCREEN;\n\n  constructor() {\n    super(13, \"Screen\");\n  }\n\n  override render() {\n    return [<ScreenComponent memory={this.memory} />];\n  }\n}\n\nexport class Keyboard extends Chip {\n  static readonly OFFSET = KEYBOARD;\n\n  constructor() {\n    super([], [\"out[16]\"], \"Keyboard\");\n  }\n\n  setKey(key: number) {\n    this.out().busVoltage = key & 0xffff;\n  }\n\n  clearKey() {\n    this.out().busVoltage = 0;\n  }\n\n  override render() {\n    return [<KeyboardComponent keyboard={this} />];\n  }\n}\n\nexport class Memory extends ClockedChip {\n  private ram = new RAM16K();\n  private screen = new Screen();\n  private keyboard = new Keyboard();\n  private address = 0;\n\n  constructor() {\n    super([\"in[16]\", \"load\", \"address[15])\"], [\"out[16]\"], \"Memory\");\n    this.parts.add(this.keyboard);\n    this.parts.add(this.screen);\n    this.parts.add(this.ram);\n  }\n\n  override tick() {\n    const load = this.in(\"load\").voltage();\n    this.address = this.in(\"address\").busVoltage;\n    if (load) {\n      const inn = this.in().busVoltage;\n      if (this.address >= Keyboard.OFFSET) {\n        // Keyboard, do nothing\n      } else if (this.address >= Screen.OFFSET) {\n        this.screen.at(this.address - Screen.OFFSET).busVoltage = inn;\n      } else {\n        this.ram.at(this.address).busVoltage = inn;\n      }\n    }\n  }\n\n  override tock() {\n    this.eval();\n  }\n\n  override eval() {\n    if (!this.ram) return;\n    this.address = this.in(\"address\").busVoltage;\n    let out = 0;\n    if (this.address >= Keyboard.OFFSET) {\n      // Keyboard, do nothing\n      out = this.keyboard?.out().busVoltage ?? 0;\n    } else if (this.address >= Screen.OFFSET) {\n      out = this.screen?.at(this.address - Screen.OFFSET).busVoltage ?? 0;\n    } else {\n      out = this.ram?.at(this.address).busVoltage ?? 0;\n    }\n    this.out().busVoltage = out;\n  }\n\n  override in(pin?: string): Pin {\n    if (pin?.startsWith(\"RAM16K\")) {\n      const idx = int10(pin.match(/\\[(?<idx>\\d+)]/)?.groups?.idx ?? \"0\");\n      return this.ram.at(idx);\n    }\n    if (pin?.startsWith(\"Screen\")) {\n      const idx = int10(pin.match(/\\[(?<idx>\\d+)]/)?.groups?.idx ?? \"0\");\n      return this.screen.at(idx);\n    }\n    return super.in(pin);\n  }\n\n  override get(name: string, offset = 0): Pin | undefined {\n    if (name.startsWith(\"RAM16K\")) {\n      return this.at(offset & 0x3fff);\n    }\n    if (name.startsWith(\"Screen\")) {\n      return this.at(offset & (0x1fff + Screen.OFFSET));\n    }\n    if (name.startsWith(\"Keyboard\")) {\n      return this.at(Keyboard.OFFSET);\n    }\n    if (name.startsWith(\"Memory\")) {\n      return this.at(offset);\n    }\n    return super.get(name, offset);\n  }\n\n  at(offset: number): Pin {\n    if (offset >= Keyboard.OFFSET) {\n      return this.keyboard.out();\n    }\n    if (offset >= Screen.OFFSET) {\n      return this.screen.at(offset - Screen.OFFSET);\n    } else {\n      return this.ram.at(offset);\n    }\n  }\n}\n\nexport class CPU extends ClockedChip {\n  private state: CPUState = emptyState();\n\n  constructor() {\n    super(\n      [\"inM[16]\", \"instruction[16]\", \"reset\"],\n      [\"outM[16]\", \"writeM\", \"addressM[15]\", \"pc[15]\"]\n    );\n  }\n\n  override tick(): void {\n    const [state, writeM] = cpuTick(this.cpuInput(), this.state);\n    this.state = state;\n    this.out(\"writeM\").pull(writeM ? HIGH : LOW);\n    this.out(\"outM\").busVoltage = this.state.ALU ?? 0;\n  }\n\n  override tock(): void {\n    if (!this.state) return; // Skip initial tock\n    const [output, state] = cpuTock(this.cpuInput(), this.state);\n    this.state = state;\n\n    this.out(\"addressM\").busVoltage = output.addressM ?? 0;\n    this.out(\"outM\").busVoltage = output.outM ?? 0;\n    this.out(\"writeM\").pull(output.writeM ? HIGH : LOW);\n    this.out(\"pc\").busVoltage = this.state?.PC ?? 0;\n  }\n\n  private cpuInput(): CPUInput {\n    const inM = this.in(\"inM\").busVoltage;\n    const instruction = this.in(\"instruction\").busVoltage;\n    const reset = this.in(\"reset\").busVoltage === 1;\n    return { inM, instruction, reset };\n  }\n\n  override get(pin: string, offset?: number): Pin | undefined {\n    if (pin?.startsWith(\"ARegister\")) {\n      return new ConstantBus(\"ARegister\", this.state.A);\n    }\n    if (pin?.startsWith(\"DRegister\")) {\n      return new ConstantBus(\"DRegister\", this.state.D);\n    }\n    if (pin?.startsWith(\"PC\")) {\n      return new ConstantBus(\"PC\", this.state.PC);\n    }\n    return super.get(pin, offset);\n  }\n\n  override render() {\n    const bits = decode(this.in(\"instruction\").busVoltage);\n    return [\n      <RegisterComponent name={\"A\"} bits={this.state.A} />,\n      <RegisterComponent name={\"D\"} bits={this.state.D} />,\n      <RegisterComponent name={\"PC\"} bits={this.state.PC} />,\n      <ALUComponent\n        A={bits.am ? this.in(\"inM\").busVoltage : this.state.A}\n        D={this.state.D}\n        out={this.state.ALU}\n        op={bits.op}\n        flag={this.state.flag as keyof typeof Flags}\n      />,\n    ];\n  }\n\n  override reset() {\n    this.state = emptyState();\n    super.reset();\n  }\n}\n\nexport class Computer extends Chip {\n  #ram = new Memory();\n  #rom = new ROM32K();\n  #cpu = new CPU();\n\n  constructor() {\n    super([\"reset\"], []);\n\n    this.wire(this.#cpu, [\n      { from: { name: \"reset\", start: 0 }, to: { name: \"reset\", start: 0 } },\n      {\n        from: { name: \"instruction\", start: 0 },\n        to: { name: \"instruction\", start: 0 },\n      },\n      { from: { name: \"outM\", start: 0 }, to: { name: \"inM\", start: 0 } },\n      { from: { name: \"writeM\", start: 0 }, to: { name: \"writeM\", start: 0 } },\n      {\n        from: { name: \"addressM\", start: 0 },\n        to: { name: \"addressM\", start: 0 },\n      },\n    ]);\n\n    this.wire(this.#rom, [\n      { from: { name: \"pc\", start: 0 }, to: { name: \"address\", start: 0 } },\n      {\n        from: { name: \"instruction\", start: 0 },\n        to: { name: \"out\", start: 0 },\n      },\n    ]);\n\n    this.wire(this.#ram, [\n      { from: { name: \"inM\", start: 0 }, to: { name: \"in\", start: 0 } },\n      { from: { name: \"writeM\", start: 0 }, to: { name: \"load\", start: 0 } },\n      {\n        from: { name: \"addressM\", start: 0 },\n        to: { name: \"address\", start: 0 },\n      },\n      { from: { name: \"outM\", start: 0 }, to: { name: \"out\", start: 0 } },\n    ]);\n  }\n\n  override eval() {\n    super.eval();\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    if (\n      name.startsWith(\"PC\") ||\n      name.startsWith(\"ARegister\") ||\n      name.startsWith(\"DRegister\")\n    ) {\n      return this.#cpu.get(name);\n    }\n    if (name.startsWith(\"RAM16K\")) {\n      return this.#ram.get(name, offset);\n    }\n    return super.get(name, offset);\n  }\n\n  override load(fs: FileSystem, path: string): Promise<void> {\n    return this.#rom.load(fs, path);\n  }\n}\n","import { Err, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { Chip } from \"../chip\";\n\nimport { And, And16 } from \"./logic/and\";\nimport { DMux, DMux4Way, DMux8Way } from \"./logic/dmux\";\nimport { Mux, Mux16, Mux4Way16, Mux8Way16 } from \"./logic/mux\";\nimport { Nand, Nand16 } from \"./logic/nand\";\nimport { Not, Not16 } from \"./logic/not\";\nimport { Or, Or16, Or8way } from \"./logic/or\";\nimport { Xor, Xor16 } from \"./logic/xor\";\n\nimport { Add16 } from \"./arithmetic/add_16\";\nimport { ALU, ALUNoStat } from \"./arithmetic/alu\";\nimport { FullAdder } from \"./arithmetic/full_adder\";\nimport { HalfAdder } from \"./arithmetic/half_adder\";\nimport { Inc16 } from \"./arithmetic/inc16\";\n\nimport { Bit, PC, Register, VRegister } from \"./sequential/bit\";\nimport { DFF } from \"./sequential/dff\";\nimport { RAM16K, RAM4K, RAM512, RAM64, RAM8 } from \"./sequential/ram\";\nimport {\n  Computer,\n  CPU,\n  Keyboard,\n  Memory,\n  ROM32K,\n  Screen,\n} from \"./computer/computer\";\n\nexport {\n  And,\n  And16,\n  DMux,\n  Mux,\n  Mux16,\n  Mux4Way16,\n  Mux8Way16,\n  Nand,\n  Nand16,\n  Not,\n  Not16,\n  Or,\n  Or16,\n  Or8way,\n  Xor,\n  Xor16,\n  HalfAdder,\n  FullAdder,\n  Add16,\n  Inc16,\n  ALU,\n  Bit,\n  Register,\n  VRegister as ARegister,\n  VRegister as DRegister,\n  DFF,\n  RAM8,\n  RAM64,\n  RAM512,\n  RAM4K,\n  RAM16K,\n};\n\nexport const REGISTRY = new Map<string, () => Chip>(\n  (\n    [\n      [\"Nand\", Nand],\n      [\"Nand16\", Nand16],\n      [\"Not\", Not],\n      [\"Not16\", Not16],\n      [\"And\", And],\n      [\"And16\", And16],\n      [\"Or\", Or],\n      [\"Or16\", Or16],\n      [\"Or8Way\", Or8way],\n      [\"XOr\", Xor],\n      [\"XOr16\", Xor16],\n      [\"Xor\", Xor],\n      [\"Xor16\", Xor16],\n      [\"Mux\", Mux],\n      [\"Mux16\", Mux16],\n      [\"Mux4Way16\", Mux4Way16],\n      [\"Mux8Way16\", Mux8Way16],\n      [\"DMux\", DMux],\n      [\"DMux4Way\", DMux4Way],\n      [\"DMux8Way\", DMux8Way],\n      [\"HalfAdder\", HalfAdder],\n      [\"FullAdder\", FullAdder],\n      [\"Add16\", Add16],\n      [\"Inc16\", Inc16],\n      [\"ALU\", ALU],\n      [\"ALUNoStat\", ALUNoStat],\n      [\"DFF\", DFF],\n      [\"Bit\", Bit],\n      [\"Register\", Register],\n      [\"ARegister\", Register],\n      [\"DRegister\", Register],\n      [\"PC\", PC],\n      [\"RAM8\", RAM8],\n      [\"RAM64\", RAM64],\n      [\"RAM512\", RAM512],\n      [\"RAM4K\", RAM4K],\n      [\"RAM16K\", RAM16K],\n      [\"ROM32K\", ROM32K],\n      [\"Screen\", Screen],\n      [\"Keyboard\", Keyboard],\n      [\"CPU\", CPU],\n      [\"Computer\", Computer],\n      [\"Memory\", Memory],\n      [\"ARegister\", VRegister],\n      [\"DRegister\", VRegister],\n    ] as [string, { new (): Chip }][]\n  ).map(([name, ChipCtor]) => [\n    name,\n    () => {\n      const chip = new ChipCtor();\n      chip.name = name;\n      return chip;\n    },\n  ])\n);\n\nexport function getBuiltinChip(name: string): Result<Chip> {\n  const chip = REGISTRY.get(name);\n  return chip\n    ? Ok(chip())\n    : Err(new Error(`Chip ${name} not in builtin registry`));\n}\n","import { Err, isErr, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { HDL, HdlParse } from \"../../languages/hdl\";\nimport { getBuiltinChip } from \"./builtins/index\";\nimport { Chip, Connection } from \"./chip\";\n\nfunction pinWidth(start: number, end: number | undefined): number | undefined {\n  if (end === undefined) {\n    return undefined;\n  }\n  if (end >= start) {\n    return end - start + 1;\n  }\n  if (start > 0 && end === 0) {\n    return 1;\n  }\n  throw new Error(`Bus specification has start > end (${start} > ${end})`);\n}\n\nexport function parse(\n  code: string\n): Result<Chip, Error | { message: string; shortMessage: string }> {\n  const parsed = HDL.parse(code.toString());\n  if (isErr(parsed)) return parsed;\n  return build(Ok(parsed));\n}\n\nexport function build(parts: HdlParse): Result<Chip, Error> {\n  if (parts.parts === \"BUILTIN\") {\n    return getBuiltinChip(parts.name.toString());\n  }\n\n  const buildChip = new Chip(\n    parts.ins.map(({ pin, width }) => ({ pin: pin.toString(), width })),\n    parts.outs.map(({ pin, width }) => ({ pin: pin.toString(), width })),\n    parts.name.toString(),\n    [],\n    parts.clocked\n  );\n\n  for (const part of parts.parts) {\n    const builtin = getBuiltinChip(part.name.toString());\n    if (isErr(builtin)) return builtin;\n    const partChip = Ok(builtin);\n\n    const wires = part.wires.map<Connection>(({ lhs, rhs }) => ({\n      to: {\n        name: lhs.pin.toString(),\n        start: lhs.start ?? 0,\n        width: pinWidth(lhs.start ?? 0, lhs.end),\n      },\n      from: {\n        name: rhs.pin.toString(),\n        start: rhs.start ?? 0,\n        width: pinWidth(rhs.start ?? 0, rhs.end),\n      },\n    }));\n\n    try {\n      buildChip.wire(partChip, wires);\n    } catch (e) {\n      return Err(e as Error);\n    }\n  }\n\n  return Ok(buildChip);\n}\n","import { assert } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { bin, dec, hex } from \"../util/twos\";\nimport { Test } from \"./tst\";\n\nexport class Output {\n  private readonly fmt: \"B\" | \"X\" | \"D\" | \"S\";\n  private readonly lPad: number;\n  private readonly rPad: number;\n  private readonly len: number;\n  private readonly index: number;\n  private readonly builtin: boolean;\n\n  // new Output(inst.id, inst.style, inst.width, inst.lpad, inst.rpad)\n  constructor(\n    private variable: string,\n    format = \"%B1.1.1\",\n    len?: number,\n    lPad?: number,\n    rPad?: number,\n    builtin?: boolean,\n    index?: number\n  ) {\n    if (\n      format.startsWith(\"%\") &&\n      len === undefined &&\n      lPad === undefined &&\n      rPad === undefined\n    ) {\n      const { fmt, lPad, rPad, len } = format.match(\n        /^%(?<fmt>[BDXS])(?<lPad>\\d+)\\.(?<len>\\d+)\\.(?<rPad>\\d+)$/\n      )?.groups as {\n        fmt: \"B\" | \"X\" | \"D\" | \"S\";\n        lPad: string;\n        rPad: string;\n        len: string;\n      };\n      this.fmt = fmt;\n      this.lPad = parseInt(lPad);\n      this.rPad = parseInt(rPad);\n      this.len = parseInt(len);\n      this.builtin = false;\n      this.index = -1;\n    } else {\n      assert([\"B\", \"X\", \"D\", \"S\"].includes(format[0]));\n      this.fmt = format[0] as \"B\" | \"X\" | \"D\" | \"S\";\n      this.len = len ?? 3;\n      this.lPad = lPad ?? 1;\n      this.rPad = rPad ?? 1;\n      this.builtin = builtin ?? false;\n      this.index = index ?? -1;\n    }\n  }\n\n  header(test: Test) {\n    let variable = `${this.variable}`;\n    if (this.builtin) {\n      const index = this.index >= 0 ? this.index : \"\";\n      variable = `${variable}[${index}]`;\n    }\n    if (variable.length > this.len + this.lPad + this.rPad) {\n      return variable.substring(0, this.len + this.lPad + this.rPad);\n    }\n    return this.padCenter(variable);\n  }\n\n  print(test: Test) {\n    const val = test.getVar(this.variable, this.index);\n    if (this.fmt === \"S\") {\n      return this.padLeft(val as string);\n    }\n\n    const fmt = { B: bin, D: dec, X: hex }[this.fmt];\n    let value = fmt(val as number);\n    if (this.fmt === \"D\") {\n      return this.padRight(value);\n    } else {\n      return this.padCenter(value.slice(value.length - this.len));\n    }\n  }\n\n  private padCenter(value: string) {\n    const space = this.lPad + this.len + this.rPad;\n    const leftSpace = Math.floor((space - value.length) / 2);\n    const rightSpace = space - leftSpace - value.length;\n    const padLeft = leftSpace + value.length;\n    const padRight = padLeft + rightSpace;\n    value = value.padStart(padLeft);\n    value = value.padEnd(padRight);\n    return value;\n  }\n\n  private padLeft(value: string) {\n    value = value.substring(0, this.len);\n    const padRight = this.rPad + this.len;\n    const padLeft = this.lPad + padRight;\n    value = value.padEnd(padRight);\n    value = value.padStart(padLeft);\n    return value;\n  }\n\n  private padRight(value: string) {\n    value = value.substring(0, this.len);\n    const padLeft = this.lPad + this.len;\n    const padRight = this.rPad + padLeft;\n    value = value.padStart(padLeft);\n    value = value.padEnd(padRight);\n    return value;\n  }\n}\n","import { checkExhaustive } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Span } from \"../languages/base\";\nimport {\n  Tst,\n  TstLineStatement,\n  TstOperation,\n  TstOutputSpec,\n  TstStatement,\n  TstWhileStatement,\n} from \"../languages/tst\";\nimport { Bus, Chip, HIGH, Low, LOW } from \"./chip/chip\";\nimport { Clock } from \"./chip/clock\";\nimport { Output } from \"./output\";\n\nexport abstract class Test<IS extends TestInstruction = TestInstruction> {\n  protected readonly instructions: (IS | TestInstruction)[] = [];\n  protected _outputList: Output[] = [];\n  protected _log: string = \"\";\n  fs: FileSystem = new FileSystem();\n\n  setFileSystem(fs: FileSystem) {\n    this.fs = fs;\n  }\n\n  echo(_content: string) {}\n  clearEcho() {}\n\n  async load(_filename: string) {}\n  async compareTo(_filename: string) {}\n  outputFile(_filename: string): void {}\n  outputList(outputs: Output[]): void {\n    this._outputList = outputs;\n  }\n\n  addInstruction(instruction: IS | TestInstruction) {\n    this.instructions.push(instruction);\n  }\n\n  reset() {\n    const test = this;\n    this._steps = (function* () {\n      for (const instruction of test.instructions) {\n        yield* instruction.steps(test);\n      }\n    })();\n    this._log = \"\";\n  }\n\n  _steps: IterableIterator<IS | TestInstruction> | undefined;\n  _step: IteratorResult<IS | TestInstruction, IS | TestInstruction> | undefined;\n\n  get steps(): Iterator<IS | TestInstruction> {\n    if (this._steps === undefined) {\n      this.reset();\n    }\n    return this._steps!;\n  }\n\n  get currentStep(): IS | TestInstruction | undefined {\n    return this._step?.value;\n  }\n\n  async step() {\n    this._step = this.steps.next();\n    if (!this._step.done) {\n      await this._step.value.do(this);\n      return false;\n    }\n    return true;\n  }\n\n  async run() {\n    while (!(await this.step()));\n  }\n\n  protected readonly breakpoints: Map<string, number> = new Map();\n  addBreakpoint(variable: string, value: number) {\n    this.breakpoints.set(variable, value);\n  }\n  clearBreakpoints() {\n    this.breakpoints.clear();\n  }\n\n  output() {\n    const values = this._outputList.map((output) => output.print(this));\n    this._log += `|${values.join(\"|\")}|\\n`;\n  }\n\n  header() {\n    const values = this._outputList.map((output) => output.header(this));\n    this._log += `|${values.join(\"|\")}|\\n`;\n  }\n\n  log() {\n    return this._log;\n  }\n\n  abstract hasVar(variable: string | number): boolean;\n  abstract getVar(variable: string | number, offset?: number): number | string;\n  abstract setVar(variable: string, value: number, offset?: number): void;\n}\n\nfunction isTstLineStatment(line: TstStatement): line is TstLineStatement {\n  return (line as TstLineStatement).ops !== undefined;\n}\n\nfunction isTstWhileStatement(line: TstStatement): line is TstWhileStatement {\n  return (line as TstWhileStatement).condition !== undefined;\n}\n\nexport class ChipTest extends Test<ChipTestInstruction> {\n  private chip: Chip = new Low();\n  private clock = Clock.get();\n\n  static from(tst: Tst): ChipTest {\n    const test = new ChipTest();\n\n    for (const line of tst.lines) {\n      if (isTstLineStatment(line)) {\n        test.addInstruction(ChipTest.makeLineStatement(line));\n      } else {\n        let repeat = isTstWhileStatement(line)\n          ? new TestWhileInstruction(\n              new Condition(\n                line.condition.left,\n                line.condition.right,\n                line.condition.op\n              )\n            )\n          : new TestRepeatInstruction(line.count);\n        repeat.span = line.span;\n        test.addInstruction(repeat);\n        for (const statement of line.statements) {\n          repeat.addInstruction(ChipTest.makeLineStatement(statement));\n        }\n      }\n    }\n\n    return test;\n  }\n\n  private static makeLineStatement(line: TstLineStatement) {\n    const statement = new TestCompoundInstruction();\n    statement.span = line.span;\n    for (const op of line.ops) {\n      statement.addInstruction(ChipTest.makeInstruction(op));\n    }\n    return statement;\n  }\n\n  private static makeInstruction(inst: TstOperation) {\n    const { op } = inst;\n    switch (op) {\n      case \"tick\":\n        return new TestTickInstruction();\n      case \"tock\":\n        return new TestTockInstruction();\n      case \"eval\":\n        return new TestEvalInstruction();\n      case \"output\":\n        return new TestOutputInstruction();\n      case \"set\":\n        return new TestSetInstruction(inst.id, inst.value, inst.index);\n      case \"output-list\":\n        return new TestOutputListInstruction(inst.spec);\n      case \"echo\":\n        return new TestEchoInstruction(inst.message);\n      case \"clear-echo\":\n        return new TestClearEchoInstruction();\n      case \"load\":\n        return new TestLoadROMInstruction(inst.file);\n      default:\n        checkExhaustive(op, `Unknown tst operation ${op}`);\n    }\n  }\n\n  with(chip: Chip): this {\n    this.chip = chip;\n    return this;\n  }\n\n  hasVar(variable: string | number): boolean {\n    if (variable === \"time\") {\n      return true;\n    }\n    variable = `${variable}`;\n    // Look up built-in chip state variables\n    return this.chip.hasIn(variable) || this.chip.hasOut(variable);\n  }\n\n  getVar(variable: string | number, offset?: number): number | string {\n    variable = `${variable}`;\n    if (variable === \"time\") {\n      return this.clock.toString();\n    }\n    const pin = this.chip.get(variable, offset);\n    if (!pin) return 0;\n    return pin instanceof Bus ? pin.busVoltage : pin.voltage();\n  }\n\n  setVar(variable: string, value: number, offset?: number): void {\n    // Look up built-in chip state variables\n    const pinOrBus = this.chip.get(variable, offset);\n    if (pinOrBus instanceof Bus) {\n      pinOrBus.busVoltage = value;\n    } else {\n      pinOrBus?.pull(value === 0 ? LOW : HIGH);\n    }\n  }\n\n  eval(): void {\n    this.chip.eval();\n  }\n\n  tick(): void {\n    this.chip.eval();\n    this.clock.tick();\n  }\n\n  tock(): void {\n    this.chip.eval();\n    this.clock.tock();\n  }\n\n  override async load(filename: string) {\n    await this.chip.load(this.fs, filename);\n  }\n\n  override async run() {\n    this.clock.reset();\n    await super.run();\n  }\n}\n\nexport class CPUTest extends Test<CPUTestInstruction> {\n  hasVar(_variable: string | number): boolean {\n    return false;\n  }\n  getVar(_variable: string | number): number {\n    return 0;\n  }\n  setVar(_variable: string, _value: number): void {}\n  ticktock(): void {}\n}\n\nexport class VMTest extends Test<VMTestInstruction> {\n  hasVar(_variable: string | number): boolean {\n    return false;\n  }\n  getVar(_variable: string | number): number {\n    return 0;\n  }\n  setVar(_variable: string, _value: number): void {}\n  vmstep(): void {}\n}\n\nexport interface TestInstruction {\n  span?: Span;\n  do(test: Test): void;\n  steps(test: Test): IterableIterator<TestInstruction>;\n}\n\nexport class TestSetInstruction implements TestInstruction {\n  constructor(\n    private variable: string,\n    private value: number,\n    private index?: number | undefined\n  ) {}\n\n  do(test: Test) {\n    test.setVar(this.variable, this.value, this.index);\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestOutputInstruction implements TestInstruction {\n  do(test: Test) {\n    test.output();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestOutputListInstruction implements TestInstruction {\n  private outputs: Output[] = [];\n\n  constructor(specs: TstOutputSpec[] = []) {\n    for (const spec of specs) {\n      this.addOutput(spec);\n    }\n  }\n\n  addOutput(inst: TstOutputSpec) {\n    this.outputs.push(\n      new Output(\n        inst.id,\n        inst.style,\n        inst.width,\n        inst.lpad,\n        inst.rpad,\n        inst.builtin,\n        inst.address\n      )\n    );\n  }\n\n  do(test: Test) {\n    test.outputList(this.outputs);\n    test.header();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestCompoundInstruction implements TestInstruction {\n  protected readonly instructions: TestInstruction[] = [];\n  span?: Span;\n\n  addInstruction(instruction: TestInstruction) {\n    this.instructions.push(instruction);\n  }\n\n  do(test: Test<TestInstruction>): void {\n    for (const instruction of this.instructions) {\n      instruction.do(test);\n    }\n  }\n\n  *steps(_test: Test): Generator<TestInstruction> {\n    yield this;\n  }\n}\n\nexport class TestRepeatInstruction extends TestCompoundInstruction {\n  constructor(public readonly repeat: number) {\n    super();\n  }\n\n  override do() {}\n\n  private *innerSteps(test: Test) {\n    for (const instruction of this.instructions) {\n      yield* instruction.steps(test);\n    }\n  }\n\n  override *steps(test: Test) {\n    if (this.repeat === -1) {\n      yield this;\n      while (true) {\n        yield* this.innerSteps(test);\n      }\n    } else {\n      for (let i = 0; i < this.repeat; i++) {\n        yield this;\n        yield* this.innerSteps(test);\n      }\n    }\n  }\n}\n\nexport class Condition {\n  constructor(\n    public readonly x: string | number,\n    public readonly y: string | number,\n    public readonly op: \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"<>\"\n  ) {}\n\n  check(test: Test): boolean {\n    const x = test.hasVar(this.x) ? test.getVar(this.x) : this.x;\n    const y = test.hasVar(this.y) ? test.getVar(this.y) : this.y;\n\n    if (typeof x === \"string\" || typeof y === \"string\") {\n      switch (this.op) {\n        case \"=\":\n          return `${x}` === `${y}`;\n        case \"<>\":\n          return `${x}` !== `${y}`;\n      }\n    } else {\n      switch (this.op) {\n        case \"<\":\n          return x < y;\n        case \"<=\":\n          return x <= y;\n        case \">\":\n          return x > y;\n        case \">=\":\n          return x >= y;\n        case \"=\":\n          return x === y;\n        case \"<>\":\n          return x !== y;\n      }\n    }\n    return false;\n  }\n}\n\nexport class TestWhileInstruction extends TestCompoundInstruction {\n  constructor(public readonly condition: Condition) {\n    super();\n  }\n\n  override *steps(test: Test) {\n    while (this.condition.check(test)) {\n      yield this;\n      for (const instruction of this.instructions) {\n        yield* instruction.steps(test);\n      }\n    }\n  }\n}\n\nexport class TestEchoInstruction implements TestInstruction {\n  constructor(public readonly content: string) {}\n  do(test: Test) {\n    test.echo(this.content);\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestClearEchoInstruction implements TestInstruction {\n  do(test: Test) {\n    test.clearEcho();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestLoadROMInstruction implements TestInstruction {\n  constructor(readonly file: string) {}\n  async do(test: Test) {\n    test.fs.pushd(\"/samples\");\n    await test.load(this.file);\n    test.fs.popd();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestBreakpointInstruction implements TestInstruction {\n  constructor(readonly variable: string, readonly value: number) {}\n\n  do(test: Test) {\n    test.addBreakpoint(this.variable, this.value);\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestClearBreakpointsInstruction implements TestInstruction {\n  do(test: Test) {\n    test.clearBreakpoints();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport interface ChipTestInstruction extends TestInstruction {\n  _chipTestInstruction_: true;\n  do(test: ChipTest): void | Promise<void>;\n}\n\nexport class TestEvalInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.eval();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestTickInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.tick();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestTockInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.tock();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport interface CPUTestInstruction extends TestInstruction {\n  _cpuTestInstruction_: true;\n  do(test: CPUTest): void | Promise<void>;\n}\n\nexport class TestTickTockInstruction implements CPUTestInstruction {\n  readonly _cpuTestInstruction_ = true;\n  do(test: CPUTest) {\n    test.ticktock();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport interface VMTestInstruction extends TestInstruction {\n  _vmTestInstruction_: true;\n  do(test: VMTest): void | Promise<void>;\n}\n\nexport class TestVMStepInstruction implements VMTestInstruction {\n  readonly _vmTestInstruction_ = true;\n  do(test: VMTest) {\n    test.vmstep();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n","import {\n  FileSystem,\n  LocalStorageFileSystemAdapter,\n} from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { createContext } from \"react\";\n\nexport const StorageContext = createContext(\n  new FileSystem(new LocalStorageFileSystemAdapter())\n);\n","import { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { display } from \"@davidsouther/jiffies/lib/esm/display\";\nimport { t } from \"@lingui/macro\";\nimport { Dispatch, MutableRefObject, useContext, useMemo, useRef } from \"react\";\n\nimport { HDL } from \"../../languages/hdl\";\nimport { TST } from \"../../languages/tst\";\nimport { build as buildChip } from \"../../simulator/chip/builder\";\nimport { getBuiltinChip } from \"../../simulator/chip/builtins/index\";\nimport { Low, Pin, Chip as SimChip, Chip } from \"../../simulator/chip/chip\";\nimport { Clock } from \"../../simulator/chip/clock\";\nimport { ChipTest } from \"../../simulator/tst\";\nimport { StorageContext } from \"../util/storage\";\nimport { AppContext } from \"../App.context\";\nimport { ImmPin, reducePins } from \"../components/pinout\";\nimport { REGISTRY } from \"../../simulator/chip/builtins\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Span } from \"../../languages/base\";\nimport { ChipProjects, CHIP_PROJECTS } from \"../../projects\";\nimport { useImmerReducer } from \"../util/react\";\n\nexport const PROJECT_NAMES = [\n  [\"01\", t`Project 1`],\n  [\"02\", t`Project 2`],\n  [\"03\", t`Project 3`],\n  [\"05\", t`Project 5`],\n];\n\nfunction dropdowns(storage: Record<string, string>) {\n  const project =\n    (storage[\"/chip/project\"] as keyof typeof CHIP_PROJECTS) ?? \"01\";\n  const chips = CHIP_PROJECTS[project];\n  const chipName = storage[\"/chip/chip\"] ?? chips[0];\n  return { project, chips, chipName };\n}\n\nfunction makeHdl(name: string) {\n  return `CHIP ${name} {\n  IN in;\n  OUT out;\n  PARTS:\n}`;\n}\n\nfunction makeTst() {\n  return `repeat 10 {\n  tick,\n  tock;\n}`;\n}\n\nfunction makeCmp() {\n  return `| in|out|`;\n}\n\nexport interface ChipPageState {\n  files: Files;\n  sim: ChipSim;\n  controls: ControlsState;\n}\n\nexport interface ChipSim {\n  clocked: boolean;\n  inPins: ImmPin[];\n  outPins: ImmPin[];\n  internalPins: ImmPin[];\n  parts: Set<Chip>;\n  pending: boolean;\n  invalid: boolean;\n}\n\nexport interface Files {\n  hdl: string;\n  cmp: string;\n  tst: string;\n  out: string;\n}\n\nexport interface ControlsState {\n  project: keyof typeof CHIP_PROJECTS;\n  chips: string[];\n  chipName: string;\n  hasBuiltin: boolean;\n  runningTest: boolean;\n  span?: Span;\n}\n\nfunction reduceChip(chip: SimChip, pending = false, invalid = false): ChipSim {\n  return {\n    clocked: chip.clocked,\n    inPins: reducePins(chip.ins),\n    outPins: reducePins(chip.outs),\n    internalPins: reducePins(chip.pins),\n    parts: new Set(chip.parts),\n    pending,\n    invalid,\n  };\n}\n\nconst clock = Clock.get();\n\nexport type ChipStoreDispatch = Dispatch<{\n  action: keyof ReturnType<typeof makeChipStore>[\"reducers\"];\n  payload?: {};\n}>;\n\nexport function makeChipStore(\n  fs: FileSystem,\n  setStatus: (status: string) => void,\n  storage: Record<string, string>,\n  dispatch: MutableRefObject<ChipStoreDispatch>\n) {\n  let { project, chips, chipName } = dropdowns(storage);\n  let chip = new Low();\n  let test = new ChipTest();\n\n  const initialState: ChipPageState = (() => {\n    const controls: ControlsState = {\n      project,\n      chips,\n      chipName,\n      hasBuiltin: REGISTRY.has(chipName),\n      runningTest: false,\n    };\n\n    let maybeChip = getBuiltinChip(controls.chipName);\n    if (isErr(maybeChip)) {\n      setStatus(display(Err(maybeChip)));\n    } else {\n      chip = Ok(maybeChip);\n    }\n\n    const sim = reduceChip(chip);\n\n    setTimeout(() => {\n      actions.reloadChip();\n    });\n\n    return {\n      controls,\n      files: {\n        hdl: \"\",\n        cmp: \"\",\n        tst: \"\",\n        out: \"\",\n      },\n      sim,\n    };\n  })();\n\n  const reducers = {\n    setFiles(\n      state: ChipPageState,\n      {\n        hdl = state.files.hdl,\n        tst = state.files.tst,\n        cmp = state.files.cmp,\n        out = \"\",\n      }: {\n        hdl?: string;\n        tst?: string;\n        cmp?: string;\n        out?: string;\n      }\n    ) {\n      state.files.hdl = hdl;\n      state.files.tst = tst;\n      state.files.cmp = cmp;\n      state.files.out = out;\n    },\n\n    updateChip(\n      state: ChipPageState,\n      payload?: { pending?: boolean; invalid?: boolean }\n    ) {\n      state.sim = reduceChip(chip, payload?.pending, payload?.invalid);\n      state.controls.chips = CHIP_PROJECTS[state.controls.project];\n      state.controls.chipName = chip.name ?? chipName;\n      if (!state.controls.chips.includes(state.controls.chipName)) {\n        state.controls.chips = [\n          ...state.controls.chips,\n          state.controls.chipName,\n        ];\n      }\n    },\n\n    setProject(state: ChipPageState, project: keyof typeof CHIP_PROJECTS) {\n      const chips = CHIP_PROJECTS[project];\n      const chipName =\n        state.controls.chipName && chips.includes(state.controls.chipName)\n          ? state.controls.chipName\n          : chips[0];\n      state.controls.project = project;\n      state.controls.chips = chips;\n      this.setChip(state, chipName);\n    },\n\n    setChip(state: ChipPageState, chipName: string) {\n      state.controls.chipName = chipName;\n      state.controls.hasBuiltin = REGISTRY.has(chipName);\n    },\n\n    testRunning(state: ChipPageState) {\n      state.controls.runningTest = true;\n    },\n    testFinished(state: ChipPageState) {\n      state.controls.runningTest = false;\n    },\n    updateTestStep(state: ChipPageState) {\n      state.files.out = test?.log() ?? \"\";\n      state.controls.span = test?.currentStep?.span;\n      this.updateChip(state, {\n        pending: state.sim.pending,\n        invalid: state.sim.invalid,\n      });\n    },\n  };\n\n  const actions = {\n    setProject(p: keyof typeof CHIP_PROJECTS) {\n      project = storage[\"/chip/project\"] = p;\n      dispatch.current({ action: \"setProject\", payload: project });\n      this.setChip(CHIP_PROJECTS[project][0]);\n    },\n\n    setChip(\n      chip: string,\n      project = storage[\"/chip/project\"] ?? ChipProjects[\"01\"]\n    ) {\n      chipName = storage[\"/chip/chip\"] = chip;\n      dispatch.current({ action: \"setChip\", payload: chipName });\n      this.loadChip(project, chipName);\n    },\n\n    reset() {\n      Clock.get().reset();\n      chip.reset();\n      test.reset();\n      dispatch.current({ action: \"setFiles\", payload: {} });\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    updateFiles({ hdl, tst, cmp }: { hdl: string; tst: string; cmp: string }) {\n      dispatch.current({ action: \"setFiles\", payload: { hdl, tst, cmp } });\n      try {\n        this.compileChip(hdl);\n        this.compileTest(tst);\n      } catch (e) {\n        setStatus(display(e));\n      }\n    },\n\n    compileChip(hdl: string) {\n      chip.remove();\n      const maybeParsed = HDL.parse(hdl);\n      if (isErr(maybeParsed)) {\n        setStatus(\"Failed to parse chip\");\n        dispatch.current({ action: \"updateChip\", payload: { invalid: true } });\n        return;\n      }\n      const maybeChip = buildChip(Ok(maybeParsed));\n      if (isErr(maybeChip)) {\n        setStatus(display(Err(maybeChip)));\n        dispatch.current({ action: \"updateChip\", payload: { invalid: true } });\n        return;\n      }\n      setStatus(t`Compiled ${chip.name}`);\n      this.replaceChip(Ok(maybeChip));\n    },\n\n    replaceChip(nextChip: SimChip) {\n      // Store current inPins\n      const inPins = chip.ins;\n      for (const [pin, { busVoltage }] of inPins) {\n        if (nextChip.ins.has(pin)) {\n          nextChip.ins.get(pin)!.busVoltage = busVoltage;\n        }\n      }\n      clock.reset();\n      nextChip.eval();\n      chip = nextChip;\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    async loadChip(project: string, name: string) {\n      storage[\"/chip/chip\"] = name;\n      const fsName = (ext: string) =>\n        `/projects/${project}/${name}/${name}.${ext}`;\n\n      const [hdl, tst, cmp] = await Promise.all([\n        fs.readFile(fsName(\"hdl\")).catch(() => makeHdl(name)),\n        fs.readFile(fsName(\"tst\")).catch((e) => {\n          console.log(e);\n          return makeTst();\n        }),\n        fs.readFile(fsName(\"cmp\")).catch(() => makeCmp()),\n      ]);\n\n      dispatch.current({ action: \"setFiles\", payload: { hdl, tst, cmp } });\n      this.compileChip(hdl);\n      this.compileTest(tst);\n    },\n\n    async saveChip(hdl: string, prj = project, name = chipName) {\n      dispatch.current({ action: \"setFiles\", payload: { hdl } });\n      const path = `/projects/${prj}/${name}/${name}.hdl`;\n      await fs.writeFile(path, hdl);\n      setStatus(`Saved ${path}`);\n    },\n\n    toggle(pin: Pin, i: number | undefined) {\n      if (i !== undefined) {\n        pin.busVoltage = pin.busVoltage ^ (1 << i);\n      } else {\n        if (pin.width === 1) {\n          pin.toggle();\n        } else {\n          pin.busVoltage += 1;\n        }\n      }\n      dispatch.current({ action: \"updateChip\", payload: { pending: true } });\n    },\n\n    eval() {\n      chip.eval();\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    clock() {\n      clock.toggle();\n      if (clock.isLow) {\n        clock.frame();\n      }\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    useBuiltin() {\n      const nextChip = getBuiltinChip(chipName);\n      if (isErr(nextChip)) {\n        setStatus(\n          `Failed to load builtin ${chipName}: ${display(Err(nextChip))}`\n        );\n        return;\n      }\n      this.replaceChip(Ok(nextChip));\n    },\n\n    reloadChip() {\n      this.loadChip(project, chipName);\n    },\n\n    compileTest(file: string) {\n      dispatch.current({ action: \"setFiles\", payload: { tst: file } });\n      const tst = TST.parse(file);\n\n      if (isErr(tst)) {\n        setStatus(t`Failed to parse test`);\n        return false;\n      }\n      setStatus(t`Parsed tst`);\n\n      test = ChipTest.from(Ok(tst)).with(chip);\n      test.setFileSystem(fs);\n      dispatch.current({ action: \"updateTestStep\" });\n      return true;\n    },\n\n    async runTest(file: string) {\n      if (!this.compileTest(file)) {\n        return;\n      }\n      dispatch.current({ action: \"testRunning\" });\n\n      fs.pushd(\"/samples\");\n      await test.run();\n      fs.popd();\n\n      dispatch.current({ action: \"updateTestStep\" });\n    },\n\n    async tick() {\n      const done = await test.step();\n      dispatch.current({ action: \"updateTestStep\" });\n      return done;\n    },\n  };\n\n  return { initialState, reducers, actions };\n}\n\nexport function useChipPageStore() {\n  const fs = useContext(StorageContext);\n  const { setStatus } = useContext(AppContext);\n  const storage: Record<string, string> = useMemo(() => localStorage, []);\n\n  const dispatch = useRef<ChipStoreDispatch>(() => {});\n\n  const { initialState, reducers, actions } = useMemo(\n    () => makeChipStore(fs, setStatus, storage, dispatch),\n    [fs, setStatus, storage, dispatch]\n  );\n\n  const [state, dispatcher] = useImmerReducer(reducers, initialState);\n  dispatch.current = dispatcher;\n\n  return { state, dispatch, actions };\n}\n","import ohm from \"ohm-js\";\nimport raw from \"raw.macro\";\nimport { grammars, makeParser, baseSemantics } from \"./base\";\n\nexport type Cell = string;\nexport type Line = Cell[];\nexport type Cmp = Line[];\n\nexport const cmpGrammar = raw(\"./grammars/cmp.ohm\");\nexport const grammar = ohm.grammar(cmpGrammar, grammars);\nexport const cmpSemantics = grammar.extendSemantics(baseSemantics);\n\ncmpSemantics.addAttribute<Cell>(\"cell\", {\n  cell(value, _) {\n    return value.sourceString;\n  },\n});\n\ncmpSemantics.addAttribute<Line>(\"line\", {\n  line(_a, cells, _b) {\n    return cells.children.map((c) => c.cell);\n  },\n});\n\ncmpSemantics.addAttribute<Cmp>(\"root\", {\n  Root(lines) {\n    return lines.children.map((c) => c.line);\n  },\n});\n\nexport const CMP = {\n  grammar: cmpGrammar,\n  semantics: cmpSemantics,\n  parser: grammar,\n  parse: makeParser<Cmp>(grammar, cmpSemantics),\n};\n","import { Plural, Trans } from \"@lingui/macro\";\nimport { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { display } from \"@davidsouther/jiffies/lib/esm/display\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range\";\nimport { CMP } from \"../../languages/cmp\";\n\nexport const DiffTable = ({\n  className = \"\",\n  out,\n  cmp,\n}: {\n  out: string;\n  cmp: string;\n  className?: string;\n}) => {\n  const output = CMP.parse(out);\n  const compare = CMP.parse(cmp);\n\n  if (isErr(output)) {\n    return (\n      <details>\n        <summary>\n          <Trans>Failed to parse output</Trans>\n        </summary>\n        <pre>{display(Err(output))}</pre>\n        <code>\n          <pre>{out}</pre>\n        </code>\n      </details>\n    );\n  }\n\n  if (isErr(compare)) {\n    return (\n      <details>\n        <summary>\n          <Trans>Failed to parse compare</Trans>\n        </summary>\n        <code>\n          <pre>{display(Err(compare))}</pre>\n          <pre>{cmp}</pre>\n        </code>\n      </details>\n    );\n  }\n\n  const cmpData = Ok(compare);\n  const outData = Ok(output);\n  let failures = 0;\n  const table = range(0, Math.max(cmpData.length, outData.length)).map((i) => {\n    const cmpI = cmpData[i] ?? [];\n    const outI = outData[i] ?? [];\n    return range(0, Math.max(cmpI.length, outI.length))\n      .map((_, j) => [cmpI[j] ?? \"\", outI[j] ?? \"\"])\n      .map(([cmp, out]) => {\n        const cell = {\n          cmp: cmp ?? '\"',\n          out: out ?? '\"',\n          pass:\n            cmp?.trim().match(/^\\*+$/) !== null || out?.trim() === cmp?.trim(),\n        };\n        if (!cell.pass) {\n          failures += 1;\n        }\n        return cell;\n      });\n  });\n\n  return (\n    <div className={\"scroll-x \" + className}>\n      <p>\n        <Plural\n          value={failures}\n          one={`${failures} failure`}\n          other={`${failures} failures`}\n        />\n      </p>\n      <table\n        style={{\n          fontFamily: \"var(--font-family-monospace)\",\n          marginBottom: \"none\",\n        }}\n      >\n        <tbody>\n          {table.map((row, i) => (\n            <tr key={i}>\n              {row.map(({ cmp, out, pass }, i) => (\n                <DiffCell cmp={cmp} out={out} pass={pass} key={i} />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst DiffCell = ({\n  cmp,\n  out,\n  pass,\n}: {\n  cmp: string;\n  out: string;\n  pass: boolean;\n}) => {\n  return pass ? (\n    <>\n      <td>{cmp}</td>\n      <td></td>\n    </>\n  ) : (\n    <>\n      <td>\n        <ins>{cmp}</ins>\n      </td>\n      <td>\n        <del>{out}</del>\n      </td>\n    </>\n  );\n};\n","import { debounce } from \"@davidsouther/jiffies/lib/esm/debounce\";\nimport { Trans } from \"@lingui/macro\";\nimport MonacoEditor, { useMonaco } from \"@monaco-editor/react\";\nimport * as monacoT from \"monaco-editor/esm/vs/editor/editor.api\";\nimport { OnMount } from \"@monaco-editor/react\";\nimport ohm from \"ohm-js\";\nimport {\n  CSSProperties,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { AppContext } from \"../App.context\";\n\nimport { Span, UNKNOWN_PARSE_ERROR } from \"../../languages/base\";\n\nimport \"./editor.scss\";\n\nexport const ErrorPanel = ({ error }: { error?: ohm.MatchResult }) => {\n  return error?.failed() ? (\n    <details className=\"ErrorPanel\" open>\n      <summary role=\"button\" className=\"secondary\">\n        <Trans>Parse Error</Trans>\n      </summary>\n      <pre>\n        <code>\n          {error?.message ?? error?.shortMessage ?? UNKNOWN_PARSE_ERROR}\n        </code>\n      </pre>\n    </details>\n  ) : (\n    <></>\n  );\n};\n\nconst Textarea = ({\n  value,\n  onChange,\n  language,\n  disabled = false,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n  language: string;\n  disabled?: boolean;\n}) => {\n  const [text, setText] = useState(value);\n  return (\n    <textarea\n      data-testid={`editor-${language}`}\n      disabled={disabled}\n      value={text}\n      onChange={(e) => {\n        const value = e.target?.value;\n        setText(value);\n        onChange(value);\n      }}\n    />\n  );\n};\n\nconst MONACO_LIGHT_THEME = \"vs\";\nconst MONACO_DARK_THEME = \"vs-dark\";\n\nconst Monaco = ({\n  value,\n  onChange,\n  language,\n  error,\n  disabled = false,\n  highlight,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n  language: string;\n  error?: ohm.MatchResult | undefined;\n  disabled?: boolean;\n  highlight?: Span;\n}) => {\n  const { theme } = useContext(AppContext);\n  const monaco = useMonaco();\n\n  const editor = useRef<monacoT.editor.IStandaloneCodeEditor>();\n  const decorations = useRef<string[]>([]);\n\n  const codeTheme = useCallback(() => {\n    const isDark =\n      theme === \"system\"\n        ? window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n        : theme === \"dark\";\n    return isDark ? MONACO_DARK_THEME : MONACO_LIGHT_THEME;\n  }, [theme]);\n\n  // Set options when mounting\n  const onMount: OnMount = useCallback(\n    (ed) => {\n      editor.current = ed;\n      editor.current?.updateOptions({\n        fontFamily: `\"JetBrains Mono\", source-code-pro, Menlo, Monaco,\n      Consolas, \"Roboto Mono\", \"Ubuntu Monospace\", \"Noto Mono\", \"Oxygen Mono\",\n      \"Liberation Mono\", monospace, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\", \"Noto Color Emoji\"`,\n        fontSize: 16,\n        minimap: {\n          enabled: false,\n        },\n        theme: codeTheme(),\n        scrollBeyondLastLine: false,\n      });\n    },\n    [codeTheme]\n  );\n\n  // Mark and center highlighted spans\n  useEffect(() => {\n    if (!editor.current) return;\n    const model = editor.current.getModel();\n    const nextDecoration: monacoT.editor.IModelDeltaDecoration[] = [];\n    if (model && highlight) {\n      const start = model.getPositionAt(highlight.start);\n      const end = model.getPositionAt(highlight.end);\n      const range = monaco?.Range.fromPositions(start, end);\n      if (range) {\n        nextDecoration.push({\n          range,\n          options: { inlineClassName: \"highlight\" },\n        });\n        editor.current.revealRangeInCenter(range);\n      }\n    }\n    decorations.current = editor.current.deltaDecorations(\n      decorations.current,\n      nextDecoration\n    );\n  }, [editor, highlight, monaco]);\n\n  // Set themes\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    editor.current.updateOptions({ theme: codeTheme() });\n  }, [editor, codeTheme]);\n\n  // Prevent editing disabled editors\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    editor.current.updateOptions({ readOnly: disabled });\n  }, [editor, disabled]);\n\n  // Add error markers on parse failure\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    if (monaco === null) return;\n    const model = editor.current.getModel();\n    if (model === null) return;\n    if (error === undefined || error.succeeded()) {\n      monaco.editor.setModelMarkers(model, language, []);\n      return;\n    }\n    // Line 7, col 5:\n    const { line, column, message } =\n      /Line (?<line>\\d+), col (?<column>\\d+): (?<message>.*)/.exec(\n        error.shortMessage ?? \"\"\n      )?.groups ?? { line: 1, column: 1, message: \"could not parse error\" };\n    const startLineNumber = Number(line);\n    const endLineNumber = startLineNumber;\n    const startColumn = Number(column);\n    const restOfLine = model\n      .getLineContent(startLineNumber)\n      .substring(startColumn - 1);\n    let endColumn =\n      startColumn + (restOfLine.match(/([^\\s]+)/)?.[0].length ?? 1);\n    if (endColumn <= startColumn) {\n      endColumn = startColumn + 1;\n    }\n\n    monaco.editor.setModelMarkers(model, language, [\n      {\n        message,\n        startColumn,\n        startLineNumber,\n        endColumn,\n        endLineNumber,\n        severity: monacoT.MarkerSeverity.Error,\n      },\n    ]);\n  }, [error, editor, monaco, language]);\n\n  return (\n    <>\n      <MonacoEditor\n        value={value}\n        onChange={(v = \"\") => onChange(v)}\n        language={language}\n        onMount={onMount}\n      />\n      {disabled && <div className=\"overlay\" />}\n    </>\n  );\n};\n\nexport const Editor = ({\n  className = \"\",\n  style = {},\n  disabled = false,\n  value,\n  onChange,\n  grammar,\n  language,\n  highlight,\n}: {\n  className?: string;\n  style?: CSSProperties;\n  disabled?: boolean;\n  value: string;\n  onChange: (source: string) => void;\n  grammar: ohm.Grammar;\n  language: string;\n  highlight?: Span;\n}) => {\n  const [error, setError] = useState<ohm.MatchResult>();\n  const { monaco } = useContext(AppContext);\n\n  const parse = useCallback(\n    (text: string = \"\") => {\n      const parsed = grammar.match(text);\n      setError(parsed.failed() ? parsed : undefined);\n    },\n    [setError, grammar]\n  );\n\n  useEffect(() => parse(value), [parse, value]);\n  const doParse = useMemo(() => debounce(parse, 500), [parse]);\n\n  const onChangeCB = useCallback(\n    (text: string = \"\") => {\n      onChange(text);\n      doParse(text);\n    },\n    [doParse, onChange]\n  );\n\n  return (\n    <div className={`Editor ${className}`} style={style}>\n      {monaco.canUse && monaco.wants ? (\n        <Monaco\n          value={value}\n          onChange={onChangeCB}\n          language={language}\n          error={error}\n          disabled={disabled}\n          highlight={highlight}\n        />\n      ) : (\n        <>\n          <Textarea\n            value={value}\n            onChange={onChangeCB}\n            language={language}\n            disabled={disabled}\n          />\n          <ErrorPanel error={error} />\n        </>\n      )}\n    </div>\n  );\n};\n","import { Dispatch, MutableRefObject, useMemo, useRef } from \"react\";\nimport { useImmerReducer } from \"../app/util/react\";\nimport { Clock } from \"./chip/clock\";\n\nexport const MAX_STEPS = 1000;\n\nconst clock = Clock.get();\n\nexport abstract class Timer {\n  frame() {\n    this.tick();\n    this.finishFrame();\n  }\n\n  abstract tick(): Promise<boolean> | boolean;\n\n  finishFrame() {\n    clock.frame();\n  }\n\n  abstract reset(): void;\n\n  abstract toggle(): void;\n\n  steps = 1; // How many steps to take per update\n  speed = 1000; // how often to update, in ms\n  get running() {\n    return this.#running;\n  }\n\n  #running = false;\n  #sinceLastFrame = 0;\n  #lastUpdate = 0;\n  #run = async () => {\n    if (!this.#running) {\n      return;\n    }\n    const now = Date.now();\n    const delta = now - this.#lastUpdate;\n    this.#lastUpdate = now;\n    this.#sinceLastFrame += delta;\n    if (this.#sinceLastFrame > this.speed) {\n      let done = false;\n      for (let i = 0; i < Math.min(this.steps, MAX_STEPS) && !done; i++) {\n        done = await this.tick();\n      }\n      this.finishFrame();\n      if (done) {\n        this.stop();\n      }\n      this.#sinceLastFrame -= this.speed;\n    }\n    requestAnimationFrame(this.#run);\n  };\n\n  start() {\n    this.#running = true;\n    this.#lastUpdate = Date.now() - this.speed;\n    this.#run();\n    this.toggle();\n  }\n\n  stop() {\n    this.#running = false;\n    this.toggle();\n  }\n}\n\nexport interface TimerStoreState {\n  steps: number;\n  speed: number;\n  running: boolean;\n}\n\nexport type TimerStoreDispatch = Dispatch<{\n  action: keyof ReturnType<typeof makeTimerStore>[\"reducers\"];\n  payload?: {};\n}>;\n\nconst makeTimerStore = (\n  timer: Timer,\n  dispatch: MutableRefObject<TimerStoreDispatch>\n) => {\n  const initialState: TimerStoreState = {\n    running: timer.running,\n    speed: timer.speed,\n    steps: timer.steps,\n  };\n\n  const finishFrame = timer.finishFrame.bind(timer);\n  timer.finishFrame = function () {\n    finishFrame();\n    dispatch.current({ action: \"update\" });\n  };\n\n  const reducers = {\n    update(state: TimerStoreState) {\n      state.running = timer.running;\n      state.speed = timer.speed;\n      state.steps = timer.steps;\n    },\n    setSteps(state: TimerStoreState, steps: number) {\n      state.steps = steps;\n      timer.steps = steps;\n    },\n    setSpeed(state: TimerStoreState, speed: number) {\n      state.speed = speed;\n      timer.speed = speed;\n    },\n  };\n\n  const actions = {\n    frame() {\n      timer.frame();\n    },\n    start() {\n      timer.start();\n      dispatch.current({ action: \"update\" });\n    },\n    stop() {\n      timer.stop();\n      dispatch.current({ action: \"update\" });\n    },\n    reset() {\n      timer.reset();\n      dispatch.current({ action: \"update\" });\n    },\n  };\n\n  return { initialState, reducers, actions };\n};\n\nexport function useTimer(timer: Timer) {\n  const dispatch = useRef<TimerStoreDispatch>(() => {});\n\n  const { initialState, reducers, actions } = useMemo(\n    () => makeTimerStore(timer, dispatch),\n    [timer, dispatch]\n  );\n\n  const [state, dispatcher] = useImmerReducer(reducers, initialState);\n\n  dispatch.current = dispatcher;\n\n  return { state, dispatch: dispatch.current, actions };\n}\n","import { ReactNode } from \"react\";\nimport { t } from \"@lingui/macro\";\nimport { Timer, useTimer } from \"../../simulator/timer\";\nimport { Icon } from \"./pico/icon\";\n\nimport \"./pico/tooltip.scss\";\n\nexport const Runbar = (props: { runner: Timer; children?: ReactNode }) => {\n  const runner = useTimer(props.runner);\n  return (\n    <fieldset role=\"group\">\n      <button\n        className=\"flex-0\"\n        onClick={() => runner.actions.frame()}\n        data-tooltip={t`Step`}\n        data-placement=\"bottom\"\n      >\n        <Icon name=\"play_arrow\"></Icon>\n      </button>\n      <button\n        className=\"flex-0\"\n        onClick={() =>\n          runner.state.running ? runner.actions.stop() : runner.actions.start()\n        }\n        data-tooltip={runner.state.running ? t`Pause` : t`Play`}\n        data-placement=\"bottom\"\n      >\n        <Icon name={runner.state.running ? \"pause\" : \"fast_forward\"}></Icon>\n      </button>\n      <button\n        className=\"flex-0\"\n        onClick={() => runner.actions.reset()}\n        data-tooltip={t`Reset`}\n        data-placement=\"bottom\"\n      >\n        <Icon name=\"fast_rewind\"></Icon>\n      </button>\n      <select\n        className=\"flex-1\"\n        name=\"speed\"\n        value={runner.state.speed}\n        onChange={(e) => {\n          runner.dispatch({\n            action: \"setSpeed\",\n            payload: Number(e.target?.value ?? runner.state.speed),\n          });\n        }}\n        disabled={runner.state.running}\n      >\n        {[\n          [16, t`60FPS`],\n          [500, t`Fast`],\n          [1000, t`Normal`],\n          [2000, t`Slow`],\n        ].map(([speed, label]) => (\n          <option key={speed} value={speed}>\n            {label}\n          </option>\n        ))}\n      </select>\n      <select\n        className=\"flex-1\"\n        name=\"steps\"\n        value={runner.state.steps}\n        onChange={(e) => {\n          runner.dispatch({\n            action: \"setSteps\",\n            payload: Number(e.target?.value ?? runner.state.steps),\n          });\n        }}\n        disabled={runner.state.running}\n      >\n        {[\n          [1, t`1 Step`],\n          [500, \"500\"],\n          [1000, \"1000\"],\n          [2000, \"2000\"],\n        ].map(([steps, label]) => (\n          <option key={steps} value={steps}>\n            {label}\n          </option>\n        ))}\n      </select>\n      {props.children}\n    </fieldset>\n  );\n};\n","import { useClockface } from \"../../simulator/chip/clock\";\n\nexport const Clockface = () => {\n  const clockface = useClockface();\n  return <span style={{ whiteSpace: \"nowrap\" }}>{clockface}</span>;\n};\n","import {\n  CSSProperties,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Trans } from \"@lingui/macro\";\n\nimport \"./chip.scss\";\n\nimport { FullPinout } from \"../components/pinout\";\nimport { Files, PROJECT_NAMES, useChipPageStore } from \"./chip.store\";\nimport { DiffTable } from \"../components/difftable\";\nimport { Editor } from \"../components/editor\";\nimport { HDL } from \"../../languages/hdl\";\nimport { TST } from \"../../languages/tst\";\nimport { CMP } from \"../../languages/cmp\";\nimport { Accordian, Panel } from \"../components/shell/panel\";\nimport { Runbar } from \"../components/runbar\";\nimport { Timer } from \"../../simulator/timer\";\nimport { useStateInitializer } from \"../util/react\";\nimport { Clockface } from \"../components/clockface\";\nimport { CHIP_PROJECTS } from \"../../projects\";\nimport { Icon } from \"../components/pico/icon\";\nimport { AppContext } from \"../App.context\";\n\nexport const Chip = () => {\n  const { filePicker, fs, setStatus } = useContext(AppContext);\n  const { state, actions, dispatch } = useChipPageStore();\n\n  const [hdl, setHdl] = useStateInitializer(state.files.hdl);\n  const [tst, setTst] = useStateInitializer(state.files.tst);\n  const [cmp, setCmp] = useStateInitializer(state.files.cmp);\n  const [out] = useStateInitializer(state.files.out);\n\n  const saveChip = () => {\n    actions.saveChip(hdl);\n  };\n\n  const compile = useRef<(files?: Partial<Files>) => void>(() => {});\n  compile.current = async (files: Partial<Files> = {}) => {\n    await actions.updateFiles({\n      hdl: files.hdl ?? hdl,\n      tst: files.tst ?? tst,\n      cmp: files.cmp ?? cmp,\n    });\n  };\n\n  const loadTest = useCallback(async () => {\n    try {\n      const path = await filePicker.select();\n      const tst = await fs.readFile(path);\n      await compile.current({ tst });\n    } catch (e) {\n      console.error(e);\n      setStatus(`Failed to load into memory`);\n    }\n  }, [filePicker, setStatus, fs, compile]);\n\n  const runner = useRef<Timer>();\n  useEffect(() => {\n    runner.current = new (class ChipTimer extends Timer {\n      async reset(): Promise<void> {\n        await compile.current();\n        await actions.reset();\n      }\n\n      override finishFrame(): void {\n        super.finishFrame();\n        dispatch.current({ action: \"updateTestStep\" });\n      }\n\n      async tick(): Promise<boolean> {\n        return actions.tick();\n      }\n\n      toggle(): void {\n        dispatch.current({ action: \"updateTestStep\" });\n      }\n    })();\n\n    return () => {\n      runner.current?.stop();\n    };\n  }, [compile, actions, dispatch]);\n\n  const clockActions = useMemo(\n    () => ({\n      toggle() {\n        actions.clock();\n      },\n      reset() {\n        actions.reset();\n      },\n    }),\n    [actions]\n  );\n\n  const [useBuiltin, setUseBuiltin] = useState(false);\n  const toggleUseBuiltin = async () => {\n    if (useBuiltin) {\n      compile.current();\n      setUseBuiltin(false);\n    } else {\n      actions.useBuiltin();\n      setUseBuiltin(true);\n    }\n  };\n\n  const selectors = (\n    <>\n      <fieldset role=\"group\">\n        <select\n          value={state.controls.project}\n          onChange={({ target: { value } }) => {\n            actions.setProject(value as keyof typeof CHIP_PROJECTS);\n          }}\n          data-testid=\"project-picker\"\n        >\n          {PROJECT_NAMES.map(([number, label]) => (\n            <option key={number} value={number}>\n              {label}\n            </option>\n          ))}\n        </select>\n        <select\n          value={state.controls.chipName}\n          onChange={({ target: { value } }) => {\n            actions.setChip(value);\n          }}\n          data-testid=\"chip-picker\"\n        >\n          {state.controls.chips.map((chip) => (\n            <option key={chip} value={chip}>\n              {chip}\n            </option>\n          ))}\n        </select>\n        <button className=\"flex-0\" onClick={saveChip} disabled={useBuiltin}>\n          <Trans>Save</Trans>\n        </button>\n      </fieldset>\n    </>\n  );\n  const hdlPanel = (\n    <Panel\n      className=\"_hdl_panel\"\n      header={\n        <>\n          <div tabIndex={0}>HDL</div>\n          <fieldset>\n            {state.controls.hasBuiltin && (\n              <label>\n                <input\n                  type=\"checkbox\"\n                  role=\"switch\"\n                  checked={useBuiltin}\n                  onChange={toggleUseBuiltin}\n                />\n                <Trans>Builtin</Trans>\n              </label>\n            )}\n          </fieldset>\n          {selectors}\n        </>\n      }\n    >\n      <Editor\n        className=\"flex-1\"\n        value={hdl}\n        onChange={(source) => {\n          setHdl(source);\n          compile.current({ hdl: source });\n        }}\n        grammar={HDL.parser}\n        language={\"hdl\"}\n        disabled={useBuiltin}\n      />\n    </Panel>\n  );\n\n  const chipButtons = (\n    <fieldset role=\"group\">\n      <button\n        onClick={actions.eval}\n        onKeyDown={actions.eval}\n        disabled={!state.sim.pending}\n      >\n        <Trans>Eval</Trans>\n      </button>\n      <button\n        onClick={clockActions.toggle}\n        style={{ maxWidth: \"initial\" }}\n        disabled={!state.sim.clocked}\n      >\n        <Trans>Clock</Trans>:{\"\\u00a0\"}\n        <Clockface />\n      </button>\n      <button\n        onClick={clockActions.reset}\n        style={{ maxWidth: \"initial\" }}\n        disabled={!state.sim.clocked}\n      >\n        <Trans>Reset</Trans>\n      </button>\n    </fieldset>\n  );\n\n  const visualizations: [string, ReactNode][] = [...state.sim.parts].flatMap(\n    (part) =>\n      part.render().map((v, i) => [`${part.id}_${i}`, v] as [string, ReactNode])\n  );\n\n  const pinsPanel = (\n    <Panel\n      className=\"_parts_panel\"\n      header={\n        <>\n          <div>\n            <Trans>Chip</Trans>\n          </div>\n          {chipButtons}\n        </>\n      }\n    >\n      {state.sim.invalid ? (\n        <Trans>Invalid Chip</Trans>\n      ) : (\n        <>\n          <FullPinout sim={state.sim} toggle={actions.toggle} />\n          {visualizations.length > 0 && (\n            <Accordian summary={<Trans>Visualizations</Trans>} open={true}>\n              <main>\n                {visualizations.map(([p, v]) => (\n                  <div key={p}>{v}</div>\n                ))}\n              </main>\n            </Accordian>\n          )}\n        </>\n      )}\n    </Panel>\n  );\n\n  const [selectedTestTab, setSelectedTestTab] = useState<\"tst\" | \"cmp\" | \"out\">(\n    \"tst\"\n  );\n\n  const testPanel = (\n    <Panel\n      className=\"_test_panel\"\n      header={\n        <>\n          <div className=\"flex-1\">\n            <Trans>Test</Trans>\n          </div>\n          <div className=\"flex-2\">\n            {runner.current && <Runbar runner={runner.current} />}\n          </div>\n          <div>\n            <button onClick={loadTest}>\n              <Icon name=\"upload_file\" />{\" \"}\n            </button>\n          </div>\n        </>\n      }\n    >\n      <div role=\"tablist\" style={{ \"--tab-count\": \"3\" } as CSSProperties}>\n        <div\n          role=\"tab\"\n          id=\"test-tab-tst\"\n          aria-controls=\"test-tabpanel-tst\"\n          aria-selected={selectedTestTab === \"tst\"}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              name=\"test-tabs\"\n              aria-controls=\"test-tabpanel-tst\"\n              value=\"tst\"\n              checked={selectedTestTab === \"tst\"}\n              onChange={() => setSelectedTestTab(\"tst\")}\n            />\n            Test Script\n          </label>\n        </div>\n        <div\n          role=\"tabpanel\"\n          aria-labelledby=\"test-tab-tst\"\n          id=\"test-tabpanel-tst\"\n        >\n          <Editor\n            value={tst}\n            onChange={setTst}\n            grammar={TST.parser}\n            language={\"tst\"}\n            highlight={state.controls.span}\n          />\n        </div>\n        <div\n          role=\"tab\"\n          id=\"test-tab-cmp\"\n          aria-controls=\"test-tablpanel-cmp\"\n          aria-selected={selectedTestTab === \"cmp\"}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              name=\"test-tabs\"\n              aria-controls=\"test-tabpanel-cmp\"\n              value=\"cmp\"\n              checked={selectedTestTab === \"cmp\"}\n              onChange={() => setSelectedTestTab(\"cmp\")}\n            />\n            Compare File\n          </label>\n        </div>\n        <div\n          role=\"tabpanel\"\n          aria-labelledby=\"test-tab-cmp\"\n          id=\"test-tabpanel-cmp\"\n          style={{ position: \"relative\" }}\n        >\n          <Editor\n            value={cmp}\n            onChange={setCmp}\n            grammar={CMP.parser}\n            language={\"cmp\"}\n          />\n        </div>\n        <div\n          role=\"tab\"\n          id=\"test-tab-out\"\n          aria-controls=\"test-tabpanel-out\"\n          aria-selected={selectedTestTab === \"out\"}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              name=\"test-tabs\"\n              aria-controls=\"test-tabpanel-out\"\n              value=\"out\"\n              checked={selectedTestTab === \"out\"}\n              onChange={() => setSelectedTestTab(\"out\")}\n            />\n            Output File\n          </label>\n        </div>\n        <div\n          role=\"tabpanel\"\n          id=\"test-tabpanel-out\"\n          aria-labelledby=\"test-tab-out\"\n        >\n          <DiffTable cmp={cmp} out={out} />\n        </div>\n      </div>\n    </Panel>\n  );\n\n  return (\n    <div className=\"ChipPage grid\">\n      {hdlPanel}\n      {pinsPanel}\n      {testPanel}\n    </div>\n  );\n};\n\nexport default Chip;\n","export type COMMANDS_ASM =\n  | \"0\"\n  | \"1\"\n  | \"-1\"\n  | \"D\"\n  | \"A\"\n  | \"M\"\n  | \"!D\"\n  | \"!A\"\n  | \"-D\"\n  | \"-A\"\n  | \"D+1\"\n  | \"A+1\"\n  | \"D-1\"\n  | \"A-1\"\n  | \"D+A\"\n  | \"D-A\"\n  | \"D-M\"\n  | \"A-D\"\n  | \"D&A\"\n  | \"D&M\"\n  | \"D|A\"\n  | \"D|M\";\n\nexport type COMMANDS_OP =\n  | 0b101010\n  | 0b111111\n  | 0b111010\n  | 0b001100\n  | 0b110000\n  | 0b110000\n  | 0b001101\n  | 0b110001\n  | 0b001111\n  | 0b110011\n  | 0b011111\n  | 0b110111\n  | 0b001110\n  | 0b110010\n  | 0b000010\n  | 0b010011\n  | 0b010011\n  | 0b000111\n  | 0b000000\n  | 0b000000\n  | 0b010101\n  | 0b010101;\n\nexport const COMMANDS: {\n  asm: Record<COMMANDS_ASM, COMMANDS_OP>;\n  op: Record<COMMANDS_OP, COMMANDS_ASM>;\n} = {\n  asm: {\n    \"0\": 0b101010, // 42 0x2A\n    \"1\": 0b111111, // 63 0x3F\n    \"-1\": 0b111010, // 58 0x3A\n    D: 0b001100, // 12 0x0C\n    A: 0b110000, // 48 0x30\n    M: 0b110000, // 48 0x30\n    \"!D\": 0b001101, // 13 0x0D\n    \"!A\": 0b110001, // 49 0x31\n    \"-D\": 0b001111, // 15 0x0F\n    \"-A\": 0b110011, // 51 0x33\n    \"D+1\": 0b011111, // 31 0x1F\n    \"A+1\": 0b110111, // 55 0x37\n    \"D-1\": 0b001110, // 14 0x0E\n    \"A-1\": 0b110010, // 50 0x32\n    \"D+A\": 0b000010, //  2 0x02\n    \"D-A\": 0b010011, // 19 0x13\n    \"D-M\": 0b010011, // 19 0x13\n    \"A-D\": 0b000111, //  7 0x07\n    \"D&A\": 0b000000, //  0 0x00\n    \"D&M\": 0b000000, //  0 0x00\n    \"D|A\": 0b010101, // 21 0x15\n    \"D|M\": 0b010101, // 21 0x15\n  },\n  op: {\n    0x2a: \"0\",\n    0x3f: \"1\",\n    0x3a: \"-1\",\n    0x0c: \"D\",\n    0x30: \"A\",\n    0x0d: \"!D\",\n    0x31: \"!A\",\n    0x0f: \"-D\",\n    0x33: \"-A\",\n    0x1f: \"D+1\",\n    0x37: \"A+1\",\n    0x0e: \"D-1\",\n    0x32: \"A-1\",\n    0x02: \"D+A\",\n    0x13: \"D-A\",\n    0x07: \"A-D\",\n    0x00: \"D&A\",\n    0x15: \"D|A\",\n  },\n};\n\nexport type ASSIGN_ASM = \"\" | \"M\" | \"D\" | \"MD\" | \"A\" | \"AM\" | \"AD\" | \"AMD\";\nexport type ASSIGN_OP = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\nexport const ASSIGN: {\n  asm: Record<ASSIGN_ASM, ASSIGN_OP>;\n  op: Record<ASSIGN_OP, ASSIGN_ASM>;\n} = {\n  asm: {\n    \"\": 0x0,\n    M: 0b001,\n    D: 0b010,\n    MD: 0b011,\n    A: 0b100,\n    AM: 0b101,\n    AD: 0b110,\n    AMD: 0b111,\n  },\n  op: {\n    0x0: \"\",\n    0x1: \"M\",\n    0x2: \"D\",\n    0x3: \"MD\",\n    0x4: \"A\",\n    0x5: \"AM\",\n    0x6: \"AD\",\n    0x7: \"AMD\",\n  },\n};\n\nexport type JUMP_ASM =\n  | \"\"\n  | \"JGT\"\n  | \"JEQ\"\n  | \"JGE\"\n  | \"JLT\"\n  | \"JNE\"\n  | \"JLE\"\n  | \"JMP\";\nexport type JUMP_OP = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\nexport const JUMP: {\n  asm: Record<JUMP_ASM, JUMP_OP>;\n  op: Record<JUMP_OP, JUMP_ASM>;\n} = {\n  asm: {\n    \"\": 0b0,\n    JGT: 0b001,\n    JEQ: 0b010,\n    JGE: 0b011,\n    JLT: 0b100,\n    JNE: 0b101,\n    JLE: 0b110,\n    JMP: 0b111,\n  },\n  op: {\n    0x0: \"\",\n    0x1: \"JGT\",\n    0x2: \"JEQ\",\n    0x3: \"JGE\",\n    0x4: \"JLT\",\n    0x5: \"JNE\",\n    0x6: \"JLE\",\n    0x7: \"JMP\",\n  },\n};\n\nexport const Flags = {\n  0x01: \"Positive\",\n  0x00: \"Zero\",\n  0x0f: \"Negative\",\n  Positive: 0x01,\n  Zero: 0x00,\n  Negative: 0x0f,\n};\n\nexport function alu(op: number, d: number, a: number): [number, number] {\n  let o = 0;\n  switch (op) {\n    case 0x2a:\n      o = 0;\n      break;\n    case 0x3f:\n      o = 1;\n      break;\n    case 0x3a:\n      o = -1;\n      break;\n    case 0x0c:\n      o = d;\n      break;\n    case 0x30:\n      o = a;\n      break;\n    case 0x0d:\n      o = ~d;\n      break;\n    case 0x31:\n      o = ~a;\n      break;\n    case 0x0f:\n      o = -d;\n      break;\n    case 0x33:\n      o = -a;\n      break;\n    case 0x1f:\n      o = d + 1;\n      break;\n    case 0x37:\n      o = a + 1;\n      break;\n    case 0x0e:\n      o = d - 1;\n      break;\n    case 0x32:\n      o = a - 1;\n      break;\n    case 0x02:\n      o = d + a;\n      break;\n    case 0x13:\n      o = d - a;\n      break;\n    case 0x07:\n      o = a - d;\n      break;\n    case 0x00:\n      o = d & a;\n      break;\n    case 0x15:\n      o = d | a;\n      break;\n  }\n\n  o = o & 0xffff;\n  const flags =\n    o === 0 ? Flags.Zero : o & 0x8000 ? Flags.Negative : Flags.Positive;\n  return [o, flags];\n}\n","import {\n  ASSIGN,\n  ASSIGN_ASM,\n  ASSIGN_OP,\n  COMMANDS,\n  COMMANDS_ASM,\n  COMMANDS_OP,\n  JUMP,\n  JUMP_ASM,\n  JUMP_OP,\n} from \"../simulator/cpu/alu\";\n\nexport type CommandOps = keyof typeof COMMANDS.op;\nexport type JumpOps = keyof typeof JUMP.op;\nexport type StoreOps = keyof typeof ASSIGN.op;\n\nexport function asm(op: number): string {\n  if (op & 0x8000) {\n    return cInstruction(op);\n  }\n  return aInstruction(op);\n}\n\nfunction cInstruction(op: number): string {\n  op = op & 0xffff; // Clear high order bits\n  const mop = (op & 0x1000) >> 12;\n  let cop: CommandOps = ((op & 0b0000111111000000) >> 6) as CommandOps;\n  let sop: StoreOps = ((op & 0b0000000000111000) >> 3) as StoreOps;\n  let jop: JumpOps = (op & 0b0000000000000111) as JumpOps;\n\n  if (COMMANDS.op[cop] === undefined) {\n    // Invalid commend\n    return \"#ERR\";\n  }\n\n  let command = COMMANDS.op[cop];\n  if (mop) {\n    command = command.replace(/A/g, \"M\") as COMMANDS_ASM;\n  }\n\n  const store = ASSIGN.op[sop];\n  const jump = JUMP.op[jop];\n\n  let instruction: string = command;\n  if (store) {\n    instruction = `${store}=${instruction}`;\n  }\n  if (jump) {\n    instruction = `${instruction};${jump}`;\n  }\n\n  return instruction;\n}\n\nfunction aInstruction(op: number): string {\n  return \"@\" + (op & 0x7fff).toString(10);\n}\n\nexport function op(asm: string): number {\n  if (asm[0] === \"@\") {\n    return aop(asm);\n  } else {\n    return cop(asm);\n  }\n}\n\nfunction aop(asm: string): number {\n  return parseInt(asm.substring(1), 10);\n}\n\nfunction cop(asm: string): number {\n  let parts = asm.match(\n    /(?:(?<assign>[AMD]{1,3})=)?(?<operation>[-!01ADM&|]{1,3})(?:;(?<jump>JGT|JLT|JGE|JLE|JEQ|JMP))?/\n  );\n  const { assign, operation, jump } = parts?.groups ?? {};\n  const mode = operation.includes(\"M\") || assign.includes(\"M\");\n  const aop = ASSIGN.asm[(assign as ASSIGN_ASM) ?? \"\"];\n  const jop = JUMP.asm[(jump as JUMP_ASM) ?? \"\"];\n  const cop = COMMANDS.asm[(operation as COMMANDS_ASM) ?? \"\"];\n\n  return makeC(mode, cop, aop, jop);\n}\n\nexport function makeC(\n  isM: boolean,\n  op: COMMANDS_OP,\n  assign: ASSIGN_OP = 0,\n  jmp: JUMP_OP = 0\n): number {\n  const C = 0xe000;\n  const A = isM ? 0x1000 : 0;\n  const O = op << 6;\n  const D = (assign ?? 0) << 3;\n  const J = jmp ?? 0;\n  return C + A + O + D + J;\n}\n","const Hex = [\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n];\n\nexport function chars(i: number): string {\n  return Hex[i] ?? \"X\";\n}\n\nexport function bits(i: number): string {\n  switch (i) {\n    case 0x0:\n      return \"0000\";\n    case 0x1:\n      return \"0001\";\n    case 0x2:\n      return \"0010\";\n    case 0x3:\n      return \"0011\";\n    case 0x4:\n      return \"0100\";\n    case 0x5:\n      return \"0101\";\n    case 0x6:\n      return \"0110\";\n    case 0x7:\n      return \"0111\";\n    case 0x8:\n      return \"1000\";\n    case 0x9:\n      return \"1001\";\n    case 0xa:\n      return \"1010\";\n    case 0xb:\n      return \"1011\";\n    case 0xc:\n      return \"1100\";\n    case 0xd:\n      return \"1101\";\n    case 0xe:\n      return \"1110\";\n    case 0xf:\n      return \"1111\";\n    default:\n      return \"erro\";\n  }\n}\n\nexport function int(n: string, radix: number): number {\n  let i = parseInt(n.replace(/[^\\d+-.xa-fA-F]/g, \"\"), radix);\n  return i & 0xffff;\n}\n\nexport function int16(i: string): number {\n  return int(i, 16);\n}\n\nexport function int10(i: string): number {\n  return int(i, 10);\n}\n\nexport function int2(i: string): number {\n  return int(i, 2);\n}\n\nexport function hex(i: number): string {\n  const hu = chars((i & 0xf000) >> 12);\n  const hl = chars((i & 0x0f00) >> 8);\n  const lu = chars((i & 0x00f0) >> 4);\n  const ll = chars(i & 0x000f);\n\n  return `0x${hu}${hl}${lu}${ll}`;\n}\n\nexport function bin(i: number, precision = 16): string {\n  const hu = bits((i & 0xf000) >> 12);\n  const hl = bits((i & 0x0f00) >> 8);\n  const lu = bits((i & 0x00f0) >> 4);\n  const ll = bits(i & 0x000f);\n\n  // return `${hu} ${hl} ${lu} ${ll}`;\n  return `${hu}${hl}${lu}${ll}`.substring(16 - precision); // Match the book's formatting\n}\n\nexport function dec(i: number): string {\n  i = i & 0xffff;\n  if (i === 0x8000) {\n    return \"-32768\";\n  }\n  if (i & 0x8000) {\n    i = (~i + 1) & 0x7fff;\n    return `-${i}`;\n  }\n  return `${i}`;\n}\n\nexport function uns(i: number): string {\n  i = i & 0xffff;\n  return `${i}`;\n}\n\nexport function nand16(a: number, b: number): number {\n  a = a & 0xffff;\n  b = b & 0xffff;\n  let c = ~(a & b);\n  c = c & 0xffff;\n  return c;\n}\n"],"names":["reducePin","pin","bits","range","width","map","i","voltage","reverse","reducePins","pins","entries","FullPinout","props","sim","inPins","outPins","internalPins","className","PinoutBlock","header","length","toggle","disabled","pending","colSpan","immPin","name","Pin","role","style","v","onClick","UNKNOWN_PARSE_ERROR","grammars","Base","ohm","baseSemantics","createSemantics","makeParser","grammar","semantics","property","root","source","match","succeeded","parsed","parse","Ok","Err","message","shortMessage","e","extendOperation","List","list","_","asIteration","addAttribute","decNumber","digits","int10","sourceString","wholeDec","binNumber","int2","hexNumber","int16","Number","num","value","Name","ident","identifier","__","this","child","String","_a","str","_b","hdlGrammar","hdlSemantics","extendSemantics","SubBus","startNode","endNode","start","end","WireSide","index","undefined","Wire","left","right","rhs","isTerminal","lhs","Wires","children","Part","_c","wires","Parts","parts","c","BuiltinPart","PartList","ClockedList","clocked","PinDecl","PinList","Chip","body","ins","outs","Clocked","Root","HDL","parser","n","tstGrammar","tstSemantics","extendAttribute","Index","idx","FileName","_open","dec","_close","OutputFormat","id","lpad","rpad","builtin","address","TstEvalOperation","op","TstOutputOperation","TstOutputListOperation","formats","spec","format","TstSetOperation","setOp","TstEchoOperation","TstClearEchoOperation","TstLoadROMOperation","_r","_l","file","Condition","TstWhile","cond","_o","statements","statement","condition","span","startIdx","endIdx","TstRepeat","count","TstStatement","stmt","ops","operation","break","Tst","lines","tst","clock","TST","Clock","level","LOW","ticks","subject","BehaviorSubject","frameSubject","Subject","$","frame$","HIGH","next","assert","tock","tick","Bus","state","newWidth","push","busVoltage","bit","forEach","pull","reduce","b","nextVoltage","InSubBus","bus","connect","mask","high","low","mid","OutSubBus","ConstantBus","TRUE_BUS","FALSE_BUS","parsePinDecl","toPin","groups","w","Symbol","iterator","Pins","Map","has","set","minWidth","get","insert","values","internals","Set","clockedPins","inn","out","internal","subscribe","eval","size","reset","hasIn","hasOut","offset","getBuiltin","BUILTIN_NAMES","includes","part","connections","add","to","from","isOutPin","wireOutPin","wireInPin","render","filter","toLowerCase","emplace","partPin","assertExists","chipPin","findPin","isInternal","Error","ensureWidth","remove","fs","path","load","Low","ClockedChip","unsubscribe","Math","pow","And","a","and","in","And16","and16","DMux","sel","dmux","DMux4Way","dmux4way","d","DMux8Way","dmux8way","f","g","h","mux16","mux16_4","s2","Mux","mux","Mux16","Mux4Way16","Mux8Way16","mux16_8","Nand","nand","Nand16","nand16","Not","Not16","or","Or","Or16","or16","Or8way","Xor","xor","Xor16","xor16","add16","Add16","ALUComponent","A","D","flag","bin","COMMANDS","Flags","ALUNoStat","x","y","alu","ALU","flags","ng","zr","halfAdder","HalfAdder","sum","carry","FullAdder","s","ca","fullAdder","Inc16","RegisterComponent","Bit","Register","VRegister","PC","DFF","t","asmGrammar","asmSemantics","isALabelInstruction","inst","label","asm","instructions","instruction","AInstruction","_at","val","type","CInstruction","assignN","opN","jmpN","assign","replace","jmp","isM","jump","JUMP","store","ASSIGN","Label","ASM","passes","fillLabel","nextLabel","symbols","SCREEN","KEYBOARD","unfilled","line","emit","makeC","endsWith","loadHack","loadAsm","readFile","isErr","split","trim","FORMATS","Memory","memory","updates","Int16Array","cell","current","isFinite","slice","fn","useImmerReducer","reducers","initialState","useReducer","command","produce","draft","action","payload","useStateInitializer","init","useState","setState","useEffect","Mode","mode","setMode","setValue","view","cursor","doSelect","useCallback","ref","select","doChange","target","onChange","edit","display","position","zIndex","marginTop","onBlur","onKeyPress","key","defaultValue","doScroll","scrollTop","totalHeight","toleranceHeight","bufferedItems","settings","itemHeight","minIndex","maxIndex","floor","data","limit","max","min","getData","topPaddingHeight","bottomPaddingHeight","viewportRef","useRef","useMemo","MAX_SAFE_INTEGER","startIndex","tolerance","fillVirtualScrollSettings","startState","adapter","viewportHeight","reducer","scrollReducer","dispatchScroll","row","initialScroll","div","rows","height","rowKey","overflowY","overflowAnchor","onScroll","MemoryBlock","highlight","editable","MemoryCell","rounded","background","hex","flex","textAlign","newValue","fmt","setFormat","setJmp","goto","setGoto","jumpTo","useContext","AppContext","filePicker","setStatus","doLoad","console","error","doUpdate","update","placeholder","onKeyDown","option","checked","doFormat","RAM","nextData","MemoryChip","RamBus","ram","RAM8","RAM64","RAM512","RAM4K","RAM16K","Panel","join","footer","Accordian","open","summary","WHITE","pixel","color","Screen","frameFinished","canvas","ctx","getContext","image","getImageData","col","putImageData","drawImage","subscription","maxWidth","boxSizing","marginInline","margin","borderTop","borderLeft","borderBottom","borderRight","KeyMap","Enter","Backspace","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Home","End","PageUp","PageDown","Insert","Delete","Escape","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","Keyboard","keyboard","showPicker","setShowPicker","setBits","setKey","event","keypress","code","charCodeAt","keyPressToHackCharacter","preventDefault","changeKey","focus","emptyState","BITS","decode","x1","x2","am","d1","d2","d3","j1","j2","j3","cpuTick","inM","cpuTock","alu2","addressM","outM","writeM","ROM32K","at","OFFSET","screen","startsWith","CPU","cpuInput","output","Computer","wire","REGISTRY","ChipCtor","chip","getBuiltinChip","pinWidth","build","toString","buildChip","partChip","Output","variable","len","lPad","rPad","parseInt","test","substring","padCenter","getVar","padLeft","B","X","padRight","space","leftSpace","rightSpace","padStart","padEnd","Test","_outputList","_log","FileSystem","_steps","_step","breakpoints","_content","_filename","outputs","steps","done","do","step","clear","print","isTstLineStatment","isTstWhileStatement","ChipTest","pinOrBus","filename","addInstruction","makeLineStatement","repeat","TestWhileInstruction","TestRepeatInstruction","TestCompoundInstruction","makeInstruction","TestTickInstruction","TestTockInstruction","TestEvalInstruction","TestOutputInstruction","TestSetInstruction","TestOutputListInstruction","TestEchoInstruction","TestClearEchoInstruction","TestLoadROMInstruction","checkExhaustive","setVar","specs","addOutput","outputList","_test","innerSteps","hasVar","check","content","echo","clearEcho","pushd","popd","_chipTestInstruction_","StorageContext","createContext","LocalStorageFileSystemAdapter","PROJECT_NAMES","makeHdl","reduceChip","invalid","makeChipStore","storage","dispatch","project","chips","CHIP_PROJECTS","chipName","dropdowns","controls","hasBuiltin","runningTest","maybeChip","setTimeout","actions","reloadChip","files","hdl","cmp","setFiles","updateChip","setProject","setChip","testRunning","testFinished","updateTestStep","log","currentStep","p","ChipProjects","loadChip","updateFiles","compileChip","compileTest","maybeParsed","replaceChip","nextChip","fsName","ext","Promise","all","catch","saveChip","prj","writeFile","isLow","frame","useBuiltin","with","setFileSystem","runTest","run","cmpGrammar","cmpSemantics","cells","CMP","DiffTable","compare","cmpData","outData","failures","table","cmpI","outI","j","pass","fontFamily","marginBottom","DiffCell","ErrorPanel","failed","Textarea","language","text","setText","Monaco","theme","monaco","useMonaco","editor","decorations","codeTheme","window","matchMedia","matches","onMount","ed","updateOptions","fontSize","minimap","enabled","scrollBeyondLastLine","model","getModel","nextDecoration","getPositionAt","Range","fromPositions","options","inlineClassName","revealRangeInCenter","deltaDecorations","readOnly","setModelMarkers","exec","column","startLineNumber","endLineNumber","startColumn","endColumn","getLineContent","severity","monacoT","Editor","setError","doParse","debounce","onChangeCB","canUse","wants","Timer","speed","now","Date","delta","finishFrame","stop","requestAnimationFrame","Runbar","runner","timer","running","bind","setSteps","setSpeed","makeTimerStore","dispatcher","useTimer","Clockface","clockface","setClockface","useClockface","whiteSpace","localStorage","useChipPageStore","setHdl","setTst","setCmp","compile","loadTest","clockActions","setUseBuiltin","toggleUseBuiltin","selectors","number","hdlPanel","tabIndex","chipButtons","visualizations","flatMap","pinsPanel","selectedTestTab","setSelectedTestTab","testPanel","M","MD","AM","AD","AMD","JGT","JEQ","JGE","JLT","JNE","JLE","JMP","Positive","Zero","Negative","o","mop","cop","sop","jop","cInstruction","aInstruction","aop","C","O","J","Hex","chars","int","radix","hu","hl","lu","ll","precision","uns"],"sourceRoot":""}