{"version":3,"file":"static/js/708.8da086d4.chunk.js","mappings":"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","sources":["app/components/pinout.tsx","languages/base.ts","languages/hdl.ts","languages/tst.ts","simulator/chip/clock.ts","simulator/chip/chip.tsx","simulator/chip/builtins/logic/and.ts","simulator/chip/builtins/logic/dmux.ts","simulator/chip/builtins/logic/mux.ts","simulator/chip/builtins/logic/nand.ts","simulator/chip/builtins/logic/not.ts","simulator/chip/builtins/logic/or.ts","simulator/chip/builtins/logic/xor.ts","simulator/chip/builtins/arithmetic/add_16.ts","app/components/chips/alu.tsx","simulator/chip/builtins/arithmetic/alu.tsx","simulator/chip/builtins/arithmetic/half_adder.ts","simulator/chip/builtins/arithmetic/full_adder.ts","simulator/chip/builtins/arithmetic/inc16.ts","app/components/chips/register.tsx","simulator/chip/builtins/sequential/bit.tsx","simulator/chip/builtins/sequential/dff.ts","languages/asm.ts","simulator/fs.ts","simulator/cpu/memory.ts","app/util/react.ts","app/components/pico/inline_edit.tsx","app/components/pico/virtual_scroll.tsx","app/components/chips/memory.tsx","simulator/chip/builtins/sequential/ram.tsx","app/components/shell/panel.tsx","app/components/chips/screen.tsx","app/components/chips/keyboard.tsx","simulator/cpu/cpu.ts","simulator/chip/builtins/computer/computer.tsx","simulator/chip/builtins/index.ts","simulator/chip/builder.ts","simulator/output.ts","simulator/tst.ts","app/util/storage.ts","app/pages/chip.store.ts","languages/cmp.ts","app/components/difftable.tsx","app/components/editor.tsx","simulator/timer.ts","app/components/runbar.tsx","app/components/clockface.tsx","app/pages/chip.tsx","simulator/cpu/alu.ts","util/asm.ts","util/twos.ts"],"sourcesContent":["import { plural, Trans } from \"@lingui/macro\";\nimport { Pin as ChipPin, Pins, Voltage } from \"../../simulator/chip/chip\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range\";\n\nimport \"./pinout.scss\";\nimport { ChipSim } from \"../pages/chip.store\";\n\nexport interface ImmPin {\n  bits: [number, Voltage][];\n  pin: ChipPin;\n}\n\nexport function reducePin(pin: ChipPin) {\n  return {\n    pin,\n    bits: range(0, pin.width)\n      .map((i) => [i, pin.voltage(i)] as [number, Voltage])\n      .reverse(),\n  };\n}\n\nexport function reducePins(pins: Pins): ImmPin[] {\n  return [...pins.entries()].map(reducePin);\n}\n\nexport interface PinoutPins {\n  pins: ImmPin[];\n  toggle?: (pin: ChipPin, bit?: number) => void;\n}\n\nexport const FullPinout = (props: {\n  sim: ChipSim;\n  toggle: (pin: ChipPin, i: number | undefined) => void;\n}) => {\n  const { inPins, outPins, internalPins } = props.sim;\n  return (\n    <table className=\"pinout\">\n      <tbody>\n        <PinoutBlock\n          pins={inPins}\n          header={plural(inPins.length, {\n            one: \"Input pin\",\n            other: \"Input pins\",\n          })}\n          toggle={props.toggle}\n        />\n        <PinoutBlock\n          pins={outPins}\n          header={plural(outPins.length, {\n            one: \"Output pin\",\n            other: \"Output pins\",\n          })}\n          disabled={props.sim.pending}\n        />\n        <PinoutBlock\n          pins={internalPins}\n          header={plural(internalPins.length, {\n            one: \"Internal pin\",\n            other: \"Internal pins\",\n          })}\n          disabled={props.sim.pending}\n        />\n      </tbody>\n    </table>\n  );\n};\n\nexport const PinoutBlock = (\n  props: PinoutPins & { header: string; disabled?: boolean }\n) => (\n  <>\n    {props.pins.length > 0 && (\n      <tr>\n        <th colSpan={2}>{props.header}</th>\n      </tr>\n    )}\n    {[...props.pins].map((immPin) => (\n      <tr key={immPin.pin.name}>\n        <td>{immPin.pin.name}</td>\n        <td>\n          <Pin pin={immPin} toggle={props.toggle} disabled={props.disabled} />\n        </td>\n      </tr>\n    ))}\n  </>\n);\n\nexport const Pinout = ({\n  pins,\n  toggle,\n}: {\n  pins: ImmPin[];\n  toggle?: (pin: ChipPin, bit?: number) => void;\n}) => {\n  if (pins.length === 0) {\n    return <Trans>None</Trans>;\n  }\n  return (\n    <table className=\"pinout\">\n      <thead>\n        <tr>\n          <th>\n            <Trans>Name</Trans>\n          </th>\n          <th>\n            <Trans>Value</Trans>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {[...pins].map((immPin) => (\n          <tr key={immPin.pin.name}>\n            <td>{immPin.pin.name}</td>\n            <td>\n              <Pin pin={immPin} toggle={toggle} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst Pin = ({\n  pin,\n  toggle,\n  disabled = false,\n}: {\n  pin: ImmPin;\n  toggle: ((pin: ChipPin, bit?: number) => void) | undefined;\n  disabled?: boolean;\n}) => {\n  return (\n    <fieldset role=\"group\" style={{ width: `${pin.bits.length}rem` }}>\n      {pin.bits.map(([i, v]) => (\n        <button\n          key={i}\n          onClick={() => toggle?.(pin.pin, i)}\n          disabled={disabled}\n          data-testid={`pin-${i}`}\n        >\n          {v}\n        </button>\n      ))}\n    </fieldset>\n  );\n};\n","import raw from \"raw.macro\";\nimport ohm from \"ohm-js\";\nimport { int10, int16, int2 } from \"../util/twos\";\nimport { t } from \"@lingui/macro\";\nimport { Err, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result\";\n\nexport const UNKNOWN_PARSE_ERROR = t`Unknown parse error`;\n\n// Reload .....\n\nconst baseGrammar = raw(\"./grammars/base.ohm\");\nexport const grammars = {\n  Base: ohm.grammar(baseGrammar),\n};\n\nexport const baseSemantics = grammars.Base.createSemantics();\n\nbaseSemantics.extendOperation(\"asIteration\", {\n  List(list, _) {\n    return list.asIteration();\n  },\n});\n\nbaseSemantics.addAttribute(\"value\", {\n  decNumber(_, digits): number {\n    return int10(digits.sourceString);\n  },\n  wholeDec(_, digits): number {\n    return int10(digits.sourceString);\n  },\n  binNumber(_, digits) {\n    return int2(digits.sourceString);\n  },\n  hexNumber(_, digits) {\n    return int16(digits.sourceString);\n  },\n  Number: (num) => {\n    return num.value;\n  },\n});\n\nbaseSemantics.addAttribute(\"name\", {\n  identifier(_, __): string {\n    return this.sourceString;\n  },\n  Name(_): string {\n    return this.child(0)?.name;\n  },\n});\n\nbaseSemantics.addAttribute(\"String\", {\n  String(_a, str, _b) {\n    return str.sourceString;\n  },\n});\n\nexport type ParseError = Error | { message: string; shortMessage: string };\n\nexport function makeParser<ResultType>(\n  grammar: ohm.Grammar,\n  semantics: ohm.Semantics,\n  property: (obj: ohm.Dict) => ResultType = ({ root }) => root\n): (source: string) => Result<ResultType, ParseError> {\n  return function parse(source) {\n    try {\n      const match = grammar.match(source);\n      if (match.succeeded()) {\n        const parsed = semantics(match);\n        const parse = property(parsed);\n        return Ok(parse);\n      } else {\n        return Err({\n          message: match.message ?? UNKNOWN_PARSE_ERROR,\n          shortMessage: match.shortMessage ?? UNKNOWN_PARSE_ERROR,\n        });\n      }\n    } catch (e) {\n      return Err(e as Error);\n    }\n  };\n}\n\nexport interface Span {\n  start: number;\n  end: number;\n}\n","/** Reads and parses HDL chip descriptions. */\nimport raw from \"raw.macro\";\nimport ohm from \"ohm-js\";\nimport { grammars, baseSemantics } from \"./base\";\nimport { makeParser } from \"./base\";\n\nexport interface PinIndex {\n  start?: number | undefined;\n  end?: number | undefined;\n}\n\nexport interface PinParts extends PinIndex {\n  pin: string;\n}\n\nexport interface PinDeclaration {\n  pin: string | string;\n  width: number;\n}\n\nexport interface Wire {\n  lhs: PinParts;\n  rhs: PinParts;\n}\n\nexport interface Part {\n  name: string;\n  wires: Wire[];\n}\n\nexport interface HdlParse {\n  name: string;\n  ins: PinDeclaration[];\n  outs: PinDeclaration[];\n  clocked: string[];\n  parts: \"BUILTIN\" | Part[];\n}\n\nconst hdlGrammar = raw(\"./grammars/hdl.ohm\");\nexport const grammar = ohm.grammar(hdlGrammar, grammars);\n\nexport const hdlSemantics = grammar.extendSemantics(baseSemantics);\n\nhdlSemantics.addAttribute<PinIndex>(\"SubBus\", {\n  SubBus(_a, startNode, endNode, _b) {\n    const start = startNode.value;\n    const end = endNode.child(0)?.child(1)?.value ?? start;\n    return { start, end };\n  },\n});\n\nhdlSemantics.addAttribute<PinParts>(\"WireSide\", {\n  WireSide({ name }, index) {\n    const { start, end } = (index.child(0)?.SubBus as PinIndex) ?? {\n      start: undefined,\n      end: undefined,\n    };\n    return { pin: name, start, end };\n  },\n});\n\nhdlSemantics.addAttribute<Wire>(\"Wire\", {\n  Wire(left, _, right) {\n    let rhs: PinParts = right.isTerminal()\n      ? { pin: right.sourceString }\n      : right.WireSide;\n    return { lhs: left.WireSide as PinParts, rhs };\n  },\n});\n\nhdlSemantics.addAttribute<Wire[]>(\"Wires\", {\n  Wires(list) {\n    return list.asIteration().children.map(({ Wire }: { Wire: Wire }) => Wire);\n  },\n});\n\nhdlSemantics.addAttribute<Part>(\"Part\", {\n  Part({ name }, _a, { Wires }, _b, _c) {\n    return { name: name as string, wires: Wires as Wire[] };\n  },\n});\n\nhdlSemantics.addAttribute<Part[] | \"BUILTIN\">(\"Parts\", {\n  Parts(_, parts) {\n    return parts.children.map((c) => c.Part);\n  },\n  BuiltinPart(_a, _b) {\n    return \"BUILTIN\";\n  },\n});\n\nhdlSemantics.addAttribute<\"BUILTIN\" | Part[]>(\"PartList\", {\n  PartList(list) {\n    return list.Parts;\n  },\n});\n\nhdlSemantics.addAttribute<string[]>(\"Clocked\", {\n  ClockedList(_a, clocked, _b) {\n    return (\n      clocked\n        .asIteration()\n        .children.map(\n          ({ sourceString }: { sourceString: string }) => sourceString\n        ) ?? []\n    );\n  },\n});\n\nhdlSemantics.addAttribute<PinDeclaration>(\"PinDecl\", {\n  PinDecl({ name }, width) {\n    return {\n      pin: name,\n      width: width.child(0)?.child(1)?.value ?? 1,\n    };\n  },\n});\n\nhdlSemantics.addAttribute<PinDeclaration[]>(\"PinList\", {\n  PinList(list) {\n    return list\n      .asIteration()\n      .children.map(({ PinDecl }: { PinDecl: PinDeclaration }) => PinDecl);\n  },\n});\n\nhdlSemantics.addAttribute<HdlParse>(\"Chip\", {\n  Chip(_a, { name }, _b, body, _c) {\n    return {\n      name,\n      ins: body.child(0).child(0)?.child(1)?.PinList ?? [],\n      outs: body.child(1).child(0)?.child(1)?.PinList ?? [],\n      parts: body.child(2).PartList ?? [],\n      clocked: body.child(3).child(0)?.Clocked,\n    };\n  },\n});\n\nhdlSemantics.addAttribute<HdlParse>(\"Root\", {\n  Root(root) {\n    return root.child(0)?.Chip;\n  },\n});\n\nexport const HDL = {\n  parser: grammar,\n  grammar: hdlGrammar,\n  semantics: hdlSemantics,\n  parse: makeParser<HdlParse>(grammar, hdlSemantics, (n) => n.Chip),\n};\n","/** Reads tst files to apply and perform test runs. */\n\nimport ohm from \"ohm-js\";\nimport raw from \"raw.macro\";\nimport { baseSemantics, grammars, makeParser, Span } from \"./base\";\n\nexport interface TstEchoOperation {\n  op: \"echo\";\n  message: string;\n}\n\nexport interface TstClearEchoOperation {\n  op: \"clear-echo\";\n}\n\nexport interface TstSetOperation {\n  op: \"set\";\n  id: string;\n  index?: number;\n  value: number;\n}\n\nexport interface TstEvalOperation {\n  op: \"eval\" | \"tick\" | \"tock\";\n}\n\nexport interface TstOutputOperation {\n  op: \"output\";\n}\n\nexport interface TstOutputSpec {\n  id: string;\n  builtin: boolean;\n  address: number;\n  style: \"D\" | \"X\" | \"B\" | \"S\";\n  width: number;\n  lpad: number;\n  rpad: number;\n}\n\nexport interface TstOutputListOperation {\n  op: \"output-list\";\n  spec: TstOutputSpec[];\n}\n\nexport interface TstLoadROMOperation {\n  op: \"load\";\n  file: string;\n}\n\nexport type TstOperation =\n  | TstEvalOperation\n  | TstEchoOperation\n  | TstClearEchoOperation\n  | TstOutputOperation\n  | TstSetOperation\n  | TstOutputListOperation\n  | TstLoadROMOperation;\n\nexport interface TstLineStatement {\n  ops: TstOperation[];\n  break?: true;\n  span: Span;\n}\n\nexport interface TstRepeat {\n  statements: TstLineStatement[];\n  count: number;\n}\n\nexport type TstStatement = TstLineStatement | TstRepeat;\n\nexport interface Tst {\n  lines: TstStatement[];\n}\n\nexport const tstGrammar = raw(\"./grammars/tst.ohm\");\nexport const grammar = ohm.grammar(tstGrammar, grammars);\nexport const tstSemantics = grammar.extendSemantics(baseSemantics);\n\ntstSemantics.extendAttribute<number>(\"value\", {\n  Index(_a, idx, _b) {\n    return idx?.child(0)?.value ?? -1;\n  },\n});\n\ntstSemantics.extendAttribute<string>(\"name\", {\n  FileName(name, _dot, ext) {\n    return `${name.name}.${ext.name}`;\n  },\n});\n\ntstSemantics.addAttribute<number>(\"index\", {\n  Index(_open, dec, _close) {\n    return dec.child(0)?.value ?? 0;\n  },\n});\n\ntstSemantics.addAttribute<TstOutputSpec>(\"format\", {\n  OutputFormat(\n    { name: id },\n    index,\n    _a,\n    { sourceString: style },\n    { value: lpad },\n    _b,\n    { value: width },\n    _c,\n    { value: rpad }\n  ) {\n    return {\n      id,\n      builtin: index?.child(0) !== undefined,\n      address: index?.child(0)?.value ?? -1,\n      style: style as TstOutputSpec[\"style\"],\n      width,\n      lpad,\n      rpad,\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstOperation>(\"operation\", {\n  TstEvalOperation(op) {\n    return { op: op.sourceString as TstEvalOperation[\"op\"] };\n  },\n  TstOutputOperation(_) {\n    return { op: \"output\" };\n  },\n  TstOutputListOperation(_, formats) {\n    return {\n      op: \"output-list\",\n      spec: formats.children.map((n) => n.format),\n    };\n  },\n  TstSetOperation(op, { name }, index, { value }) {\n    const setOp: TstSetOperation = {\n      op: \"set\",\n      id: name,\n      value,\n    };\n    const child = index.child(0)?.child(1)?.child(0);\n    if (child) {\n      setOp.index = child.value;\n    }\n    return setOp;\n  },\n  TstEchoOperation(op, str) {\n    return {\n      op: \"echo\",\n      message: str.String as string,\n    };\n  },\n  TstClearEchoOperation(op) {\n    return {\n      op: \"clear-echo\",\n    };\n  },\n  TstLoadROMOperation(_r, _l, { name }) {\n    return {\n      op: \"load\",\n      file: name,\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstStatement>(\"statement\", {\n  TstRepeat(op, { value: count }, _o, statements, _c) {\n    return {\n      statements: statements.children.map(({ statement }) => statement),\n      count,\n    };\n  },\n  TstStatement(list, end) {\n    const stmt: TstStatement = {\n      ops: list\n        .asIteration()\n        .children.map(\n          ({ operation }: { operation: TstOperation }) => operation\n        ),\n      span: {\n        start: this.source.startIdx,\n        end: this.source.endIdx,\n      },\n    };\n    if (end.sourceString === \"!\") {\n      stmt.break = true;\n    }\n    return stmt;\n  },\n});\n\ntstSemantics.addAttribute<Tst>(\"tst\", {\n  Tst(lines) {\n    return {\n      lines: lines.children.map((n) => n.statement),\n    };\n  },\n});\n\ntstSemantics.addAttribute<Tst>(\"root\", {\n  Root({ tst }) {\n    return tst;\n  },\n});\n\nexport const TST = {\n  grammar: tstGrammar,\n  semantics: tstSemantics,\n  parser: grammar,\n  parse: makeParser<Tst>(grammar, tstSemantics),\n};\n","import { BehaviorSubject, Observable, Subject } from \"rxjs\";\nimport { assert } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { HIGH, LOW, Voltage } from \"./chip\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { display } from \"@davidsouther/jiffies/lib/esm/display\";\n\ninterface Tick {\n  readonly level: Voltage;\n  readonly ticks: number;\n}\n\nlet clock: Clock;\nexport class Clock {\n  private level: Voltage = LOW;\n  private ticks = 0;\n\n  static get() {\n    if (clock === undefined) {\n      clock = new Clock();\n    }\n    return clock;\n  }\n\n  private subject = new BehaviorSubject<Tick>({\n    level: this.level,\n    ticks: this.ticks,\n  });\n  readonly $: Observable<Tick> = this.subject;\n\n  readonly update = new Subject<void>();\n\n  private next() {\n    this.subject.next({\n      level: this.level,\n      ticks: this.ticks,\n    });\n    this.update.next();\n  }\n\n  private constructor() {}\n\n  reset() {\n    this.level = LOW;\n    this.ticks = 0;\n    this.next();\n  }\n\n  tick() {\n    assert(this.level === LOW, \"Can only tick up from LOW\");\n    this.level = HIGH;\n    this.next();\n  }\n\n  tock() {\n    assert(this.level === HIGH, \"Can only tock down from HIGH\");\n    this.level = LOW;\n    this.ticks += 1;\n    this.next();\n  }\n\n  toggle() {\n    this.level === HIGH ? this.tock() : this.tick();\n  }\n\n  eval() {\n    this.tick();\n    this.tock();\n  }\n\n  toString() {\n    return `${this.ticks}${this.level === HIGH ? \"+\" : \"\"}`;\n  }\n}\n\nexport function useClock(actions: {\n  tick?: () => void;\n  toggle?: () => void;\n  reset?: () => void;\n}) {\n  const clock = useMemo(() => Clock.get(), []);\n\n  useEffect(() => {\n    const subscription = clock.$.subscribe(() => {\n      actions.tick?.();\n    });\n    return () => subscription.unsubscribe();\n  }, [actions, clock.$]);\n\n  return {\n    toggle() {\n      clock.tick();\n      actions.toggle?.();\n    },\n    reset() {\n      clock.reset();\n      actions.reset?.();\n    },\n  };\n}\n\nexport function useClockface() {\n  const [clockface, setClockface] = useState(display(clock));\n\n  useEffect(() => {\n    const subscription = clock.$.subscribe(() => {\n      setClockface(display(clock));\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n\n  return clockface;\n}\n","import { assert, assertExists } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range\";\nimport { ReactNode } from \"react\";\nimport { bin } from \"../../util/twos\";\nimport { Clock } from \"./clock\";\n\nexport const HIGH = 1;\nexport const LOW = 0;\nexport type Voltage = typeof HIGH | typeof LOW;\n\nexport interface Pin {\n  readonly name: string;\n  readonly width: number;\n  busVoltage: number;\n  pull(voltage: Voltage, bit?: number): void;\n  toggle(bit?: number): void;\n  voltage(bit?: number): Voltage;\n  connect(pin: Pin): void;\n}\n\nexport class Bus implements Pin {\n  state: Voltage[];\n  next: Pin[] = [];\n\n  constructor(readonly name: string, readonly width = 1) {\n    this.state = range(0, this.width).map(() => LOW);\n  }\n\n  ensureWidth(newWidth: number) {\n    assert(newWidth <= 16, `Cannot widen past 16 to ${newWidth} bits`);\n    if (this.width < newWidth) {\n      (this as { width: number }).width = newWidth;\n      this.state = [\n        ...this.state,\n        ...range(this.width, newWidth).map(() => LOW as Voltage),\n      ];\n    }\n  }\n\n  connect(next: Pin) {\n    this.next.push(next);\n    next.busVoltage = this.busVoltage;\n  }\n\n  pull(voltage: Voltage, bit = 0) {\n    assert(\n      bit >= 0 && bit < this.width,\n      `Bit out of bounds: ${this.name}@${bit}`\n    );\n    this.state[bit] = voltage;\n    this.next.forEach((n) => n.pull(voltage, bit));\n  }\n\n  voltage(bit = 0): Voltage {\n    assert(bit >= 0 && bit < this.width);\n    return this.state[bit];\n  }\n\n  set busVoltage(voltage: number) {\n    for (const i of range(0, this.width)) {\n      this.state[i] = ((voltage & (1 << i)) >> i) as Voltage;\n    }\n    this.next.forEach((n) => (n.busVoltage = this.busVoltage));\n  }\n\n  get busVoltage(): number {\n    return range(0, this.width).reduce((b, i) => b | (this.state[i] << i), 0);\n  }\n\n  toggle(bit = 0) {\n    const nextVoltage = this.voltage(bit) === LOW ? HIGH : LOW;\n    this.pull(nextVoltage, bit);\n  }\n}\n\nexport class InSubBus extends Bus {\n  constructor(\n    private bus: Pin,\n    private start: number,\n    override readonly width = 1\n  ) {\n    super(bus.name);\n    assert(\n      start >= 0 && start + width <= bus.width,\n      `Mismatched InSubBus dimensions on ${bus.name} (${width} + ${start} > ${bus.width})`\n    );\n    this.connect(bus);\n  }\n\n  override pull(voltage: Voltage, bit = 0) {\n    assert(bit >= 0 && bit < this.width);\n    this.bus.pull(voltage, this.start + bit);\n  }\n\n  override voltage(bit = 0): Voltage {\n    assert(bit >= 0 && bit < this.width);\n    return this.bus.voltage(this.start + bit);\n  }\n\n  override set busVoltage(voltage: number) {\n    const high = this.bus.busVoltage & ~mask(this.width + this.start);\n    const low = this.bus.busVoltage & mask(this.start);\n    const mid = (voltage & mask(this.width)) << this.start;\n    this.bus.busVoltage = high | mid | low;\n  }\n\n  override get busVoltage(): number {\n    return (this.bus.busVoltage >> this.start) & mask(this.width);\n  }\n\n  override connect(bus: Pin): void {\n    assert(\n      this.start + this.width <= bus.width,\n      `Mismatched InSubBus connection dimensions (From ${bus.name} to ${this.name})`\n    );\n    this.bus = bus;\n  }\n}\n\nexport class OutSubBus extends Bus {\n  constructor(\n    private bus: Pin,\n    private start: number,\n    override readonly width = 1\n  ) {\n    super(bus.name);\n    assert(start >= 0 && width <= bus.width, `Mismatched OutSubBus dimensions`);\n    this.connect(bus);\n  }\n\n  override set busVoltage(voltage: number) {\n    this.bus.busVoltage =\n      (voltage & mask(this.width + this.start)) >> this.start;\n  }\n\n  override get busVoltage(): number {\n    return this.bus.busVoltage & mask(this.width);\n  }\n\n  override connect(bus: Pin): void {\n    assert(\n      this.width <= bus.width,\n      `Mismatched OutSubBus connection dimensions`\n    );\n    this.bus = bus;\n  }\n}\n\nexport class ConstantBus extends Bus {\n  constructor(name: string, private readonly value: number) {\n    super(name, 16 /* TODO: get high bit index */);\n  }\n\n  pullHigh(_ = 0) {}\n  pullLow(_ = 0) {}\n  override voltage(_ = 0): Voltage {\n    return (this.busVoltage & 0x1) as Voltage;\n  }\n\n  override set busVoltage(voltage: number) {\n    // Noop\n  }\n  override get busVoltage(): number {\n    return this.value;\n  }\n}\n\nexport const TRUE_BUS = new ConstantBus(\"true\", 0xffff);\nexport const FALSE_BUS = new ConstantBus(\"false\", 0);\n\nexport function parsePinDecl(toPin: string): {\n  pin: string;\n  width: number;\n} {\n  const { pin, w } = toPin.match(/(?<pin>[a-zA-Z]+)(\\[(?<w>\\d+)\\])?/)\n    ?.groups as {\n    pin: string;\n    w?: string;\n  };\n  return {\n    pin,\n    width: w ? Number(w) : 1,\n  };\n}\n\nexport function parseToPin(toPin: string): {\n  pin: string;\n  start?: number;\n  end?: number;\n} {\n  const { pin, i, j } = toPin.match(\n    /(?<pin>[a-z]+)(\\[(?<i>\\d+)(\\.\\.(?<j>\\d+))?\\])?/\n  )?.groups as { pin: string; i?: string; j?: string };\n  return {\n    pin,\n    start: i ? Number(i) : undefined,\n    end: j ? Number(j) : undefined,\n  };\n}\n\nexport class Pins {\n  private readonly map = new Map<string, Pin>();\n\n  insert(pin: Pin) {\n    let { name } = pin;\n    assert(!this.map.has(name), `Pins already has ${name}!`);\n    this.map.set(name, pin);\n  }\n\n  emplace(name: string, minWidth?: number) {\n    if (this.has(name)) {\n      return this.get(name)!;\n    } else {\n      const pin = new Bus(name, minWidth);\n      this.insert(pin);\n      return pin;\n    }\n  }\n\n  has(pin: string): boolean {\n    return this.map.has(pin);\n  }\n\n  get(pin: string): Pin | undefined {\n    return this.map.get(pin);\n  }\n\n  entries(): Iterable<Pin> {\n    return this.map.values();\n  }\n\n  [Symbol.iterator]() {\n    return this.map[Symbol.iterator]();\n  }\n}\n\nlet id = 0;\nexport class Chip {\n  readonly id = id++;\n  ins = new Pins();\n  outs = new Pins();\n  pins = new Pins();\n  parts = new Set<Chip>();\n  clockedPins: Set<string>;\n\n  get clocked() {\n    if (this.clockedPins.size > 0) {\n      return true;\n    }\n    for (const part of this.parts) {\n      if (part.clocked) return true;\n    }\n    return false;\n  }\n\n  constructor(\n    ins: (string | { pin: string; width: number })[],\n    outs: (string | { pin: string; width: number })[],\n    public name?: string,\n    internals: (string | { pin: string; width: number })[] = [],\n    clocked: string[] = []\n  ) {\n    for (const inn of ins) {\n      const { pin, width = 1 } =\n        (inn as { pin: string }).pin !== undefined\n          ? (inn as { pin: string; width: number })\n          : parsePinDecl(inn as string);\n      this.ins.insert(new Bus(pin, width));\n    }\n\n    for (const out of outs) {\n      const { pin, width = 1 } =\n        (out as { pin: string }).pin !== undefined\n          ? (out as { pin: string; width: number })\n          : parsePinDecl(out as string);\n      this.outs.insert(new Bus(pin, width));\n    }\n\n    for (const internal of internals) {\n      const { pin, width = 1 } =\n        (internal as { pin: string }).pin !== undefined\n          ? (internal as { pin: string; width: number })\n          : parsePinDecl(internal as string);\n      this.pins.insert(new Bus(pin, width));\n    }\n\n    this.clockedPins = new Set(clocked);\n\n    Clock.get().$.subscribe(() => this.eval());\n  }\n\n  reset() {\n    for (const [_, pin] of this.ins) {\n      pin.busVoltage = 0;\n    }\n    this.eval();\n  }\n\n  in(pin = \"in\"): Pin {\n    assert(this.ins.has(pin), `No pin ${pin}`);\n    return this.ins.get(pin)!;\n  }\n\n  out(pin = \"out\"): Pin {\n    assert(this.outs.has(pin));\n    return this.outs.get(pin)!;\n  }\n\n  pin(name: string): Pin {\n    assert(this.pins.has(name));\n    return this.pins.get(name)!;\n  }\n\n  get(name: string, offset?: number): Pin | undefined {\n    if (this.ins.has(name)) {\n      return this.ins.get(name)!;\n    }\n    if (this.outs.has(name)) {\n      return this.outs.get(name)!;\n    }\n    if (this.pins.has(name)) {\n      return this.pins.get(name)!;\n    }\n    return this.getBuiltin(name, offset);\n  }\n\n  private getBuiltin(name: string, offset = 0): Pin | undefined {\n    if (BUILTIN_NAMES.includes(name)) {\n      for (const part of this.parts) {\n        const pin = part.get(name, offset);\n        if (pin) {\n          return pin;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  isOutPin(pin: string): boolean {\n    return this.outs.has(pin);\n  }\n\n  wire(part: Chip, connections: Connection[]) {\n    this.parts.add(part);\n    for (const { to, from } of connections) {\n      if (part.isOutPin(to.name)) {\n        this.wireOutPin(part, to, from);\n      } else {\n        this.wireInPin(part, to, from);\n      }\n    }\n  }\n\n  render(): ReactNode[] {\n    return [...this.parts]\n      .map((part) => part.render())\n      .filter((v) => v !== undefined);\n  }\n\n  private findPin(from: string, minWidth?: number): Pin {\n    if (from.toLowerCase() === \"true\" || from === \"1\") {\n      return TRUE_BUS;\n    }\n    if (from.toLowerCase() === \"false\" || from === \"0\") {\n      return FALSE_BUS;\n    }\n    if (this.ins.has(from)) {\n      return this.ins.get(from)!;\n    }\n    if (this.outs.has(from)) {\n      return this.outs.get(from)!;\n    }\n    return this.pins.emplace(from, minWidth);\n  }\n\n  private wireOutPin(part: Chip, to: PinSide, from: PinSide) {\n    let partPin = assertExists(\n      part.outs.get(to.name),\n      () => `Cannot wire to missing pin ${to.name}`\n    );\n    to.width ??= partPin.width;\n\n    let chipPin = this.findPin(from.name, from.width ?? to.width);\n    const isInternal = this.pins.has(chipPin.name);\n\n    from.width ??= chipPin.width;\n\n    if (chipPin instanceof ConstantBus) {\n      throw new Error(`Cannot wire to constant bus`);\n    }\n\n    // Widen internal pins\n    if (isInternal && chipPin instanceof Bus) {\n      chipPin.ensureWidth(from.start + from.width);\n    }\n\n    // Wrap the chipPin in an InBus when the chip side is dimensioned\n    if (from.start > 0 || from.width !== chipPin.width) {\n      chipPin = new InSubBus(chipPin, from.start, from.width);\n    }\n\n    // Wrap the chipPin in an OutBus when the part side is dimensioned\n    if (to.start > 0 || to.width !== chipPin.width) {\n      chipPin = new OutSubBus(chipPin, to.start, to.width);\n    }\n\n    partPin.connect(chipPin);\n  }\n\n  private wireInPin(part: Chip, to: PinSide, from: PinSide) {\n    let partPin = assertExists(\n      part.ins.get(to.name),\n      () => `Cannot wire to missing pin ${to.name}`\n    );\n    to.width ??= partPin.width;\n\n    const chipPin = this.findPin(from.name, from.width ?? to.width);\n\n    from.width ??= chipPin.width;\n\n    // Wrap the partPin in an InBus when the part side is dimensioned\n    if (to.start > 0 || to.width !== chipPin.width) {\n      partPin = new InSubBus(partPin, to.start, to.width);\n    }\n\n    // Wrap the partPin in an OutBus when the chip side is dimensioned\n    if (![\"true\", \"false\"].includes(chipPin.name)) {\n      if (from.start > 0 || from.width !== chipPin.width) {\n        partPin = new OutSubBus(partPin, from.start, from.width);\n      }\n    }\n    chipPin.connect(partPin);\n  }\n\n  eval() {\n    for (const chip of this.parts) {\n      // TODO topological sort\n      // eval chip input busses\n      chip.eval();\n      // eval output busses\n    }\n  }\n\n  tick() {\n    this.eval();\n  }\n\n  tock() {\n    this.eval();\n  }\n\n  remove() {\n    for (const part of this.parts) {\n      part.remove();\n    }\n  }\n\n  // For the ROM32K builtin to load from a file system\n  async load(fs: FileSystem, path: string) {\n    for (const part of this.parts) {\n      if (part.name === \"ROM32K\") {\n        await part.load(fs, path);\n      }\n    }\n  }\n}\n\nexport class Low extends Chip {\n  constructor() {\n    super([], []);\n    this.outs.insert(FALSE_BUS);\n  }\n}\n\nexport class High extends Chip {\n  constructor() {\n    super([], []);\n    this.outs.insert(TRUE_BUS);\n  }\n}\n\nexport class ClockedChip extends Chip {\n  override get clocked(): boolean {\n    return true;\n  }\n\n  #subscription = Clock.get().$.subscribe(({ level }) => {\n    if (level === LOW) {\n      this.tock();\n    } else {\n      this.tick();\n    }\n  });\n\n  override remove() {\n    this.#subscription.unsubscribe();\n    super.remove();\n  }\n}\n\nexport interface PinSide {\n  name: string;\n  start: number;\n  width?: number;\n}\n\nexport interface Connection {\n  // To is the part side\n  to: PinSide;\n  // From is the chip side\n  from: PinSide;\n}\n\nexport type Pinout = Record<string, string>;\nexport interface SerializedChip {\n  id: number;\n  name: string;\n  ins: Pinout;\n  outs: Pinout;\n  pins: Pinout;\n  children: SerializedChip[];\n}\n\nfunction mask(width: number) {\n  return Math.pow(2, width) - 1;\n}\n\nfunction setBus(busses: Pinout, pin: Pin) {\n  busses[pin.name] = bin(\n    (pin.busVoltage & mask(pin.width)) <<\n      (pin as unknown as { start: number }).start ?? 0\n  );\n  return busses;\n}\n\nexport function printChip(chip: Chip): SerializedChip {\n  return {\n    id: chip.id,\n    name: chip.name ?? chip.constructor.name,\n    ins: [...chip.ins.entries()].reduce(setBus, {} as Pinout),\n    outs: [...chip.outs.entries()].reduce(setBus, {} as Pinout),\n    pins: [...chip.pins.entries()].reduce(setBus, {} as Pinout),\n    children: [...chip.parts.values()].map(printChip),\n  };\n}\n\nexport const BUILTIN_NAMES = [\n  \"Register\",\n  \"ARegister\",\n  \"DRegister\",\n  \"PC\",\n  \"RAM8\",\n  \"RAM64\",\n  \"RAM512\",\n  \"RAM4K\",\n  \"RAM16K\",\n  \"ROM32K\",\n  \"Screen\",\n  \"Keyboard\",\n  \"Memory\",\n];\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function and(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 && b === 1 ? HIGH : LOW];\n}\n\nexport function and16(a: number, b: number): [number] {\n  return [a & b & 0xffff];\n}\n\nexport class And extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [n] = and(a, b);\n    this.out().pull(n);\n  }\n}\n\nexport class And16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [n] = and16(a, b);\n    this.out().busVoltage = n;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function dmux(inn: Voltage, sel: Voltage): [Voltage, Voltage] {\n  const a = sel === LOW && inn === HIGH ? HIGH : LOW;\n  const b = sel === HIGH && inn === HIGH ? HIGH : LOW;\n  return [a, b];\n}\n\nexport function dmux4way(\n  inn: Voltage,\n  sel: number\n): [Voltage, Voltage, Voltage, Voltage] {\n  const a = sel === 0b00 && inn === HIGH ? HIGH : LOW;\n  const b = sel === 0b01 && inn === HIGH ? HIGH : LOW;\n  const c = sel === 0b10 && inn === HIGH ? HIGH : LOW;\n  const d = sel === 0b11 && inn === HIGH ? HIGH : LOW;\n  return [a, b, c, d];\n}\n\nexport function dmux8way(\n  inn: Voltage,\n  sel: number\n): [Voltage, Voltage, Voltage, Voltage, Voltage, Voltage, Voltage, Voltage] {\n  const a = sel === 0b000 && inn === HIGH ? HIGH : LOW;\n  const b = sel === 0b001 && inn === HIGH ? HIGH : LOW;\n  const c = sel === 0b010 && inn === HIGH ? HIGH : LOW;\n  const d = sel === 0b011 && inn === HIGH ? HIGH : LOW;\n  const e = sel === 0b100 && inn === HIGH ? HIGH : LOW;\n  const f = sel === 0b101 && inn === HIGH ? HIGH : LOW;\n  const g = sel === 0b110 && inn === HIGH ? HIGH : LOW;\n  const h = sel === 0b111 && inn === HIGH ? HIGH : LOW;\n  return [a, b, c, d, e, f, g, h];\n}\n\nexport class DMux extends Chip {\n  constructor() {\n    super([\"in\", \"sel\"], [\"a\", \"b\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").voltage();\n\n    const [a, b] = dmux(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n  }\n}\n\nexport class DMux4Way extends Chip {\n  constructor() {\n    super([\"in\", \"sel[2]\"], [\"a\", \"b\", \"c\", \"d\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").busVoltage;\n\n    const [a, b, c, d] = dmux4way(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n    this.out(\"c\").pull(c);\n    this.out(\"d\").pull(d);\n  }\n}\n\nexport class DMux8Way extends Chip {\n  constructor() {\n    super([\"in\", \"sel[3]\"], [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").busVoltage;\n\n    const [a, b, c, d, e, f, g, h] = dmux8way(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n    this.out(\"c\").pull(c);\n    this.out(\"d\").pull(d);\n    this.out(\"e\").pull(e);\n    this.out(\"f\").pull(f);\n    this.out(\"g\").pull(g);\n    this.out(\"h\").pull(h);\n  }\n}\n","import { Chip, LOW, Voltage } from \"../../chip\";\n\nexport function mux(a: Voltage, b: Voltage, sel: Voltage): [Voltage] {\n  return [sel === LOW ? a : b];\n}\n\nexport function mux16(a: number, b: number, sel: Voltage): [number] {\n  return [sel === LOW ? a : b];\n}\n\nexport function mux16_4(\n  a: number,\n  b: number,\n  c: number,\n  d: number,\n  sel: number\n): [number] {\n  const s2 = (sel & 0b01) as Voltage;\n  return (sel & 0b10) === 0b00 ? mux16(a, b, s2) : mux16(c, d, s2);\n}\n\nexport function mux16_8(\n  a: number,\n  b: number,\n  c: number,\n  d: number,\n  e: number,\n  f: number,\n  g: number,\n  h: number,\n  sel: number\n): [number] {\n  const s2 = (sel & 0b11) as Voltage;\n  return (sel & 0b100) === 0b000\n    ? mux16_4(a, b, c, d, s2)\n    : mux16_4(e, f, g, h, s2);\n}\n\nexport class Mux extends Chip {\n  constructor() {\n    super([\"a\", \"b\", \"sel\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const sel = this.in(\"sel\").voltage();\n\n    const [set] = mux(a, b, sel);\n    this.out().pull(set);\n  }\n}\n\nexport class Mux16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\", \"sel\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const sel = this.in(\"sel\").voltage();\n    const [out] = mux16(a, b, sel);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Mux4Way16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\", \"c[16]\", \"d[16]\", \"sel[2]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const c = this.in(\"c\").busVoltage;\n    const d = this.in(\"d\").busVoltage;\n    const sel = this.in(\"sel\").busVoltage;\n    const [out] = mux16_4(a, b, c, d, sel);\n\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Mux8Way16 extends Chip {\n  constructor() {\n    super(\n      [\n        \"a[16]\",\n        \"b[16]\",\n        \"c[16]\",\n        \"d[16]\",\n        \"e[16]\",\n        \"f[16]\",\n        \"g[16]\",\n        \"h[16]\",\n        \"sel[3]\",\n      ],\n      [\"out[16]\"]\n    );\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const c = this.in(\"c\").busVoltage;\n    const d = this.in(\"d\").busVoltage;\n    const e = this.in(\"e\").busVoltage;\n    const f = this.in(\"f\").busVoltage;\n    const g = this.in(\"g\").busVoltage;\n    const h = this.in(\"h\").busVoltage;\n    const sel = this.in(\"sel\").busVoltage;\n    const [out] = mux16_8(a, b, c, d, e, f, g, h, sel);\n\n    this.out().busVoltage = out;\n  }\n}\n","import { nand16 } from \"../../../../util/twos\";\nimport { HIGH, LOW, Chip, Voltage } from \"../../chip\";\n\nexport function nand(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 && b === 1 ? LOW : HIGH];\n}\n\nexport class Nand extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = nand(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Nand16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    this.out().busVoltage = nand16(a, b);\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function not(inn: Voltage): [Voltage] {\n  return [inn === LOW ? HIGH : LOW];\n}\n\nexport function not16(inn: number): [number] {\n  return [~inn & 0xffff];\n}\n\nexport class Not extends Chip {\n  constructor() {\n    super([\"in\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"in\").voltage();\n    const [out] = not(a);\n    this.out().pull(out);\n  }\n}\n\nexport class Not16 extends Chip {\n  constructor() {\n    super([\"in[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const [n] = not16(this.in().busVoltage);\n    this.out().busVoltage = n;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function or(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 || b === 1 ? HIGH : LOW];\n}\n\nexport function or16(a: number, b: number): [number] {\n  return [(a | b) & 0xffff];\n}\n\nexport function or8way(a: number): [Voltage] {\n  return [(a & 0xff) === 0 ? LOW : HIGH];\n}\n\nexport class Or extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = or(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Or16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = or16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Or8way extends Chip {\n  constructor() {\n    super([\"in[8]\"], [\"out\"], \"Or8way\");\n  }\n\n  override eval() {\n    const inn = this.in().busVoltage;\n    const [out] = or8way(inn);\n    this.out().pull(out);\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function xor(a: Voltage, b: Voltage): [Voltage] {\n  return [(a === HIGH && b === LOW) || (a === LOW && b === HIGH) ? HIGH : LOW];\n}\n\nexport function xor16(a: number, b: number): [number] {\n  return [(a ^ b) & 0xffff];\n}\n\nexport class Xor extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = xor(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Xor16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = xor16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n","import { Chip } from \"../../chip\";\n\nexport function add16(a: number, b: number): [number] {\n  return [(a + b) & 0xffff];\n}\n\nexport class Add16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"], \"Add16\");\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = add16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n","import { COMMANDS, COMMANDS_OP, Flags } from \"../../../simulator/cpu/alu\";\nimport { bin } from \"../../../util/twos\";\n\nexport const ALUComponent = ({\n  A,\n  op,\n  D,\n  out,\n  flag,\n}: {\n  A: number;\n  op: COMMANDS_OP;\n  D: number;\n  out: number;\n  flag: keyof typeof Flags;\n}) => (\n  <div>\n    <span>ALU</span>\n    <dl>\n      <dt>A</dt> <dd>{bin(A)}</dd>\n      <dt>op</dt> <dd>{COMMANDS.op[op] ?? \"(??)\"}</dd>\n      <dt>D</dt> <dd>{bin(D)}</dd>\n      <dt>=</dt> <dd>{bin(out)}</dd>\n      <dd>{Flags[flag as keyof typeof Flags]}</dd>\n    </dl>\n  </div>\n);\n","import { ALUComponent } from \"../../../../app/components/chips/alu\";\nimport { alu, COMMANDS_OP, Flags } from \"../../../cpu/alu\";\nimport { Chip, HIGH, LOW } from \"../../chip\";\n\nexport class ALUNoStat extends Chip {\n  constructor() {\n    super(\n      [\n        \"x[16]\",\n        \"y[16]\", // 16-bit inputs\n        \"zx\", // zero the x input?\n        \"nx\", // negate the x input?\n        \"zy\", // zero the y input?\n        \"ny\", // negate the y input?\n        \"f\", // compute out = x + y (if 1) or x & y (if 0)\n        \"no\", // negate the out output?\n      ],\n      [\n        \"out[16]\", // 16-bit output\n      ],\n      \"ALU\"\n    );\n  }\n\n  override eval() {\n    const x = this.in(\"x\").busVoltage;\n    const y = this.in(\"y\").busVoltage;\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    const [out] = alu(op, x, y);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class ALU extends Chip {\n  constructor() {\n    super(\n      [\n        \"x[16]\",\n        \"y[16]\", // 16-bit inputs\n        \"zx\", // zero the x input?\n        \"nx\", // negate the x input?\n        \"zy\", // zero the y input?\n        \"ny\", // negate the y input?\n        \"f\", // compute out = x + y (if 1) or x & y (if 0)\n        \"no\", // negate the out output?\n      ],\n      [\n        \"out[16]\", // 16-bit output\n        \"zr\", // 1 if (out === 0), 0 otherwise\n        \"ng\", // 1 if (out < 0),  0 otherwise\n      ],\n      \"ALU\"\n    );\n  }\n\n  override render() {\n    return [\n      <ALUComponent\n        A={this.in(\"x\").busVoltage}\n        op={this.op()}\n        D={this.in(\"y\").busVoltage}\n        out={this.out().busVoltage}\n        flag={\n          (this.out(\"zr\").voltage() === HIGH\n            ? Flags.Zero\n            : this.out(\"ng\").voltage() === HIGH\n            ? Flags.Negative\n            : Flags.Positive) as keyof typeof Flags\n        }\n      />,\n    ];\n  }\n\n  override eval() {\n    const x = this.in(\"x\").busVoltage;\n    const y = this.in(\"y\").busVoltage;\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    const [out, flags] = alu(op, x, y);\n    const ng = flags === Flags.Negative ? HIGH : LOW;\n    const zr = flags === Flags.Zero ? HIGH : LOW;\n    this.out(\"out\").busVoltage = out;\n    this.out(\"ng\").pull(ng);\n    this.out(\"zr\").pull(zr);\n  }\n\n  op(): COMMANDS_OP {\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    return op as COMMANDS_OP;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip\";\n\nexport function halfAdder(a: Voltage, b: Voltage): [Voltage, Voltage] {\n  const sum = (a === 1 && b === 0) || (a === 0 && b === 1) ? HIGH : LOW;\n  const car = a === 1 && b === 1 ? HIGH : LOW;\n\n  return [sum, car];\n}\n\nexport class HalfAdder extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"sum\", \"carry\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [sum, carry] = halfAdder(a, b);\n    this.out(\"sum\").pull(sum);\n    this.out(\"carry\").pull(carry);\n  }\n}\n","import { Chip, Voltage } from \"../../chip\";\nimport { or } from \"../logic/or\";\nimport { halfAdder } from \"./half_adder\";\n\nexport function fullAdder(\n  a: Voltage,\n  b: Voltage,\n  c: Voltage\n): [Voltage, Voltage] {\n  const [s, ca] = halfAdder(a, b);\n  const [sum, cb] = halfAdder(s, c);\n  const [carry] = or(ca, cb);\n\n  return [sum, carry];\n}\n\nexport class FullAdder extends Chip {\n  constructor() {\n    super([\"a\", \"b\", \"c\"], [\"sum\", \"carry\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const c = this.in(\"c\").voltage();\n    const [sum, carry] = fullAdder(a, b, c);\n    this.out(\"sum\").pull(sum);\n    this.out(\"carry\").pull(carry);\n  }\n}\n","import { Chip } from \"../../chip\";\nimport { add16 } from \"./add_16\";\n\nexport function inc16(n: number): [number] {\n  return add16(n, 1);\n}\n\nexport class Inc16 extends Chip {\n  constructor() {\n    super([\"in[16]\"], [\"out[16]\"], \"Inc16\");\n  }\n\n  override eval() {\n    const a = this.in().busVoltage;\n    const [out] = inc16(a);\n    this.out().busVoltage = out;\n  }\n}\n","import { dec } from \"../../../util/twos\";\n\nexport const RegisterComponent = ({\n  name,\n  bits,\n}: {\n  name: string;\n  bits: number;\n}) => (\n  <div>\n    {name}: {dec(bits)}\n  </div>\n);\n","import { RegisterComponent } from \"../../../../app/components/chips/register\";\nimport { ClockedChip, HIGH, LOW, Pin, Voltage } from \"../../chip\";\n\nexport class Bit extends ClockedChip {\n  bit: Voltage = LOW;\n\n  constructor(name?: string) {\n    super([\"in\", \"load\"], [\"out\"], name);\n  }\n\n  override tick() {\n    if (this.in(\"load\").voltage() === HIGH) {\n      this.bit = this.in().voltage();\n    }\n  }\n\n  override tock() {\n    this.out().pull(this.bit ?? 0);\n  }\n}\n\nexport class Register extends ClockedChip {\n  bits: number = 0x00;\n\n  constructor(name?: string) {\n    super([\"in[16]\", \"load\"], [\"out[16]\"], name);\n  }\n\n  override tick() {\n    if (this.in(\"load\").voltage() === HIGH) {\n      this.bits = this.in().busVoltage & 0xffff;\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.bits & 0xffff;\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    return name === this.name ? this.out() : super.get(name, offset);\n  }\n}\n\nexport class VRegister extends Register {\n  override render() {\n    return [\n      <RegisterComponent\n        name={this.name ?? `Chip ${this.id}`}\n        bits={this.bits}\n      />,\n    ];\n  }\n}\n\nexport class PC extends ClockedChip {\n  bits: number = 0x00;\n\n  constructor(name?: string) {\n    super([\"in[16]\", \"load\", \"inc\", \"reset\"], [\"out[16]\"], name);\n  }\n\n  override render() {\n    return [<RegisterComponent name=\"PC\" bits={this.bits} />];\n  }\n\n  override tick() {\n    if (this.in(\"reset\").voltage() === HIGH) {\n      this.bits = 0;\n    } else if (this.in(\"load\").voltage() === HIGH) {\n      this.bits = this.in().busVoltage & 0xffff;\n    } else if (this.in(\"inc\").voltage() === HIGH) {\n      this.bits += 1;\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.bits & 0xffff;\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    return name === this.name ? this.out() : super.get(name, offset);\n  }\n}\n","import { ClockedChip } from \"../../chip\";\n\nexport class DFF extends ClockedChip {\n  constructor(name?: string) {\n    super([\"in\"], [\"out\"], name, [\"t\"]);\n  }\n\n  override tick() {\n    // Read in into t\n    let t = this.in().voltage();\n    this.pin(\"t\").pull(t);\n  }\n\n  override tock() {\n    // write t into out\n    let t = this.pin(\"t\").voltage();\n    this.out().pull(t);\n  }\n}\n","import { assertExists } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport ohm from \"ohm-js\";\nimport raw from \"raw.macro\";\nimport {\n  ASSIGN,\n  ASSIGN_ASM,\n  ASSIGN_OP,\n  COMMANDS,\n  COMMANDS_ASM,\n  COMMANDS_OP,\n  JUMP,\n  JUMP_ASM,\n  JUMP_OP,\n} from \"../simulator/cpu/alu\";\nimport { KEYBOARD, SCREEN } from \"../simulator/cpu/memory\";\nimport { makeC } from \"../util/asm\";\nimport { grammars, makeParser, baseSemantics } from \"./base\";\n\nexport const asmGrammar = raw(\"./grammars/asm.ohm\");\nexport const grammar = ohm.grammar(asmGrammar, grammars);\nexport const asmSemantics = grammar.extendSemantics(baseSemantics);\n\n// reload ...\n\nexport interface Asm {\n  instructions: AsmInstruction[];\n}\n\nexport type AsmInstruction =\n  | AsmAInstruction\n  | AsmCInstruction\n  | AsmLabelInstruction;\n\nexport type AsmAInstruction = AsmALabelInstruction | AsmAValueInstruction;\nexport interface AsmALabelInstruction {\n  type: \"A\";\n  label: string;\n}\n\nexport interface AsmAValueInstruction {\n  type: \"A\";\n  value: number;\n}\n\nfunction isALabelInstruction(\n  inst: AsmAInstruction\n): inst is AsmALabelInstruction {\n  return (inst as AsmALabelInstruction).label !== undefined;\n}\n\nexport interface AsmCInstruction {\n  type: \"C\";\n  op: COMMANDS_OP;\n  isM: boolean;\n  store?: ASSIGN_OP;\n  jump?: JUMP_OP;\n}\n\nexport interface AsmLabelInstruction {\n  type: \"L\";\n  label: string;\n}\n\nasmSemantics.addAttribute<Asm>(\"asm\", {\n  Root(asm) {\n    return {\n      instructions: asm\n        .child(0)\n        .children.map(({ instruction }) => instruction as AsmInstruction),\n    };\n  },\n});\n\nasmSemantics.addAttribute<AsmInstruction>(\"instruction\", {\n  AInstruction(_at, val): AsmAInstruction {\n    try {\n      return {\n        type: \"A\",\n        value: val.value,\n      };\n    } catch (e) {}\n    try {\n      return {\n        type: \"A\",\n        label: val.name,\n      };\n    } catch (e) {}\n\n    throw new Error(`AsmAInstruction must have either a name or a value`);\n  },\n  CInstruction(assignN, opN, jmpN): AsmCInstruction {\n    const assign = assignN.child(0)?.child(0)?.sourceString as ASSIGN_ASM;\n    const op = opN.sourceString as COMMANDS_ASM;\n    const jmp = jmpN.child(0)?.child(1)?.sourceString as JUMP_ASM;\n    const isM =\n      assignN.sourceString.includes(\"M\") || opN.sourceString.includes(\"M\");\n    const inst: AsmCInstruction = {\n      type: \"C\",\n      op: COMMANDS.asm[op],\n      isM,\n    };\n    if (jmp) inst.jump = JUMP.asm[jmp];\n    if (assign) inst.store = ASSIGN.asm[assign];\n    return inst;\n  },\n  Label(_o, { name }, _c): AsmLabelInstruction {\n    return {\n      type: \"L\",\n      label: name,\n    };\n  },\n});\n\nexport function fillLabel(asm: Asm) {\n  const symbols = new Map<string, number>([\n    [\"R0\", 0],\n    [\"R1\", 1],\n    [\"R2\", 2],\n    [\"R3\", 3],\n    [\"R4\", 4],\n    [\"R5\", 5],\n    [\"R6\", 6],\n    [\"R7\", 7],\n    [\"R8\", 8],\n    [\"R9\", 9],\n    [\"R10\", 10],\n    [\"R11\", 11],\n    [\"R12\", 12],\n    [\"R13\", 13],\n    [\"R14\", 14],\n    [\"R15\", 15],\n    [\"SP\", 0],\n    [\"LCL\", 1],\n    [\"ARG\", 2],\n    [\"THIS\", 3],\n    [\"THAT\", 4],\n    [\"SCREEN\", SCREEN],\n    [\"KBD\", KEYBOARD],\n  ]);\n\n  function transmuteAInstruction(instruction: AsmALabelInstruction) {\n    const value = assertExists(symbols.get(instruction.label));\n    (instruction as unknown as AsmAValueInstruction).value = value;\n    delete (instruction as unknown as { label: undefined }).label;\n  }\n\n  let unfilled: AsmALabelInstruction[] = [];\n  let line = 0;\n  for (const instruction of asm.instructions) {\n    if (instruction.type === \"L\") {\n      if (symbols.has(instruction.label)) {\n        throw new Error(`ASM Duplicate label ${instruction.label}`);\n      } else {\n        symbols.set(instruction.label, line);\n      }\n      continue;\n    }\n\n    line += 1;\n\n    if (instruction.type === \"A\") {\n      if (isALabelInstruction(instruction)) {\n        unfilled.push(instruction);\n      }\n    }\n  }\n\n  unfilled.forEach(transmuteAInstruction);\n}\n\nexport function emit(asm: Asm): number[] {\n  return asm.instructions\n    .map((inst) => {\n      if (inst.type === \"A\") {\n        if (isALabelInstruction(inst)) {\n          throw new Error(`ASM Emitting unfilled A instruction`);\n        }\n        return inst.value;\n      }\n      if (inst.type === \"C\") {\n        return makeC(inst.isM, inst.op, inst.store, inst.jump);\n      }\n      return undefined;\n    })\n    .filter((op): op is number => op !== undefined);\n}\n\nexport const ASM = {\n  grammar: asmGrammar,\n  semantics: asmSemantics,\n  parser: grammar,\n  parse: makeParser<Asm>(grammar, asmSemantics),\n  passes: {\n    fillLabel,\n    emit,\n  },\n};\n","import { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { ASM } from \"../languages/asm\";\nimport { int2 } from \"../util/twos\";\n\nexport async function load(fs: FileSystem, path: string): Promise<number[]> {\n  if (path.endsWith(\".hack\")) {\n    return loadHack(fs, path);\n  }\n\n  if (path.endsWith(\".asm\")) {\n    return loadAsm(fs, path);\n  }\n\n  throw new Error(`Cannot load file without hack or asm extension ${path}`);\n}\n\nexport async function loadAsm(fs: FileSystem, path: string): Promise<number[]> {\n  const source = await fs.readFile(path);\n  const parsed = ASM.parse(source);\n  if (isErr(parsed)) {\n    throw Err(parsed);\n  }\n\n  const asm = Ok(parsed);\n  ASM.passes.fillLabel(asm);\n  return ASM.passes.emit(asm);\n}\n\nexport async function loadHack(\n  fs: FileSystem,\n  path: string\n): Promise<number[]> {\n  return (await fs.readFile(path))\n    .split(\"\\n\")\n    .filter((line) => line.trim() !== \"\")\n    .map(int2);\n}\n","import { assert } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { op } from \"../../util/asm\";\nimport { int10, int16, int2 } from \"../../util/twos\";\nimport { load } from \"../fs\";\n\nexport const FORMATS = [\"bin\", \"dec\", \"hex\", \"asm\"];\nexport type Format = typeof FORMATS[number];\n\nexport const SCREEN = 0x4000;\nexport const SCREEN_ROWS = 512;\nexport const SCREEN_COLS = 256;\nexport const KEYBOARD = 0x6000;\n\nexport class Memory {\n  #memory: Int16Array;\n\n  get size(): number {\n    return this.#memory.length;\n  }\n\n  constructor(memory: ArrayBuffer | number) {\n    if (typeof memory === \"number\") {\n      this.#memory = new Int16Array(memory);\n    } else {\n      this.#memory = new Int16Array(memory);\n    }\n  }\n\n  get(index: number): number {\n    if (index < 0 || index >= this.size) {\n      return 0xffff;\n    }\n    return this.#memory[index] ?? 0;\n  }\n\n  set(index: number, value: number): void {\n    if (index >= 0 && index < this.size) {\n      this.#memory[index] = value & 0xffff;\n    }\n  }\n\n  update(cell: number, value: string, format: Format) {\n    let current: number;\n    switch (format) {\n      case \"asm\":\n        current = op(value);\n        break;\n      case \"bin\":\n        current = int2(value);\n        break;\n      case \"hex\":\n        current = int16(value);\n        break;\n      case \"dec\":\n      default:\n        current = int10(value);\n        break;\n    }\n\n    if (isFinite(current) && current <= 0xffff) {\n      this.set(cell, current);\n    }\n  }\n\n  async load(fs: FileSystem, path: string) {\n    try {\n      (await load(fs, path)).map((v, i) => this.set(i, v));\n    } catch (cause) {\n      // throw new Error(`ROM32K Failed to load file ${path}`, { cause });\n      throw new Error(`Memory Failed to load file ${path}`);\n    }\n  }\n\n  range(start = 0, end = this.size): number[] {\n    return [...this.#memory.slice(start, end)];\n  }\n\n  *map<T>(\n    fn: (index: number, value: number) => T,\n    start = 0,\n    end = this.size\n  ): Iterable<T> {\n    assert(start < end);\n    for (let i = start; i < end; i++) {\n      yield fn(i, this.get(i));\n    }\n  }\n}\n","import produce from \"immer\";\nimport { Dispatch, useEffect, useReducer, useState } from \"react\";\n\nexport function useImmerReducer<T, Reducers extends Record<string, Function>>(\n  reducers: Reducers,\n  initialState: T\n) {\n  return useReducer(\n    (\n      state: T,\n      command: {\n        action: keyof Reducers;\n        payload?: {};\n      }\n    ) =>\n      produce(state, (draft: T) => {\n        reducers[command.action](draft, command.payload as any);\n      }),\n    initialState\n  );\n}\n\nexport function useStateInitializer<T>(init: T): [T, Dispatch<T>] {\n  const [state, setState] = useState<T>(init);\n  useEffect(() => {\n    setState(init);\n  }, [init]);\n  return [state, setState];\n}\n","import { width } from \"@davidsouther/jiffies/lib/esm/dom/css/sizing\";\nimport { useCallback, useState } from \"react\";\nimport { useStateInitializer } from \"../../util/react\";\n\nconst Mode = { VIEW: 0, EDIT: 1 };\n\nexport const InlineEdit = (props: {\n  mode?: keyof typeof Mode;\n  value: string;\n  onChange: (value: string) => void;\n}) => {\n  const [mode, setMode] = useState(props.mode ?? Mode.VIEW);\n  const [value, setValue] = useStateInitializer(props.value);\n\n  const render = () => {\n    switch (mode) {\n      case Mode.EDIT:\n        return edit();\n      case Mode.VIEW:\n        return view();\n      default:\n        return <span />;\n    }\n  };\n\n  const view = () => (\n    <span\n      style={{ cursor: \"text\", ...width(\"full\", \"inline\") }}\n      onClick={() => {\n        setMode(Mode.EDIT);\n      }}\n    >\n      {value}\n    </span>\n  );\n\n  const doSelect = useCallback(\n    (ref: HTMLInputElement | null) => ref?.select(),\n    []\n  );\n  const doChange = useCallback(\n    (target: HTMLInputElement) => {\n      setMode(Mode.VIEW);\n      setValue(target.value ?? \"\");\n      props.onChange(target.value ?? \"\");\n    },\n    [props, setMode, setValue]\n  );\n  const edit = () => {\n    const edit = (\n      <span style={{ display: \"block\", position: \"relative\" }}>\n        <input\n          ref={doSelect}\n          style={{\n            zIndex: \"10\",\n            position: \"absolute\",\n            left: \"0\",\n            marginTop: \"-0.375rem\",\n          }}\n          onBlur={({ target }) => doChange(target)}\n          onKeyPress={({ key, target }) => {\n            if (key === \"Enter\") {\n              doChange(target as HTMLInputElement);\n            }\n          }}\n          type=\"text\"\n          defaultValue={value}\n        />\n      </span>\n    );\n    return edit;\n  };\n\n  return render();\n};\n\nexport default InlineEdit;\n","import {\n  Key,\n  MutableRefObject,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n} from \"react\";\n\nexport interface VirtualScrollSettings {\n  /**Minimum offset into the adapter. Default is 0.  */\n  minIndex: number;\n  /** Maximum offset into the adapter. Default is Number.MAX_SAFE_INTEGER.  */\n  maxIndex: number;\n  /** Initial index to start rendering from. Default is minIndex.  */\n  startIndex: number;\n  /**\n   * Number of items to render in visible area. Default is entire range from\n   * minIndex to maxIndex.\n   */\n  count: number;\n  /**\n   * Maximum number of items to render on either side of the visible area.\n   * Default is `count`.\n   */\n  tolerance: number;\n  /** Height of each item, in pixels. Default is 20px. */\n  itemHeight: number;\n}\n\nexport interface VirtualScrollDataAdapter<T> {\n  (offset: number, limit: number): Iterable<T>;\n}\n\nexport function arrayAdapter<T>(data: T[]): VirtualScrollDataAdapter<T> {\n  return (offset, limit) => data.slice(offset, offset + limit);\n}\n\nexport interface VirtualScrollProps<T, U extends ReactNode> {\n  settings?: Partial<VirtualScrollSettings>;\n  get: VirtualScrollDataAdapter<T>;\n  row: (t: T) => U;\n  rowKey: (t: T) => Key;\n}\n\nexport function fillVirtualScrollSettings(\n  settings: Partial<VirtualScrollSettings>\n): VirtualScrollSettings {\n  const {\n    minIndex = 0,\n    maxIndex = Number.MAX_SAFE_INTEGER,\n    startIndex = 0,\n    itemHeight = 20,\n    count = maxIndex - minIndex + 1,\n    tolerance = count,\n  } = settings;\n\n  return { minIndex, maxIndex, startIndex, itemHeight, count, tolerance };\n}\n\nexport function initialState<T>(\n  settings: VirtualScrollSettings,\n  adapter: VirtualScrollDataAdapter<T>,\n  ref: MutableRefObject<HTMLDivElement | null>\n): VirtualScrollState<T> {\n  // From Denis Hilt, https://blog.logrocket.com/virtual-scrolling-core-principles-and-basic-implementation-in-react/\n  const { minIndex, maxIndex, startIndex, itemHeight, count, tolerance } =\n    settings;\n  const bufferedItems = count + 2 * tolerance;\n  const itemsAbove = Math.max(0, startIndex - tolerance - minIndex);\n\n  const viewportHeight = count * itemHeight;\n  const totalHeight = (maxIndex - minIndex + 1) * itemHeight;\n  const toleranceHeight = tolerance * itemHeight;\n  const bufferHeight = viewportHeight + 2 * toleranceHeight;\n  const topPaddingHeight = itemsAbove * itemHeight;\n  const bottomPaddingHeight = totalHeight - (topPaddingHeight + bufferHeight);\n\n  const state: VirtualScrollState<T> = {\n    scrollTop: 0,\n    settings,\n    viewportHeight,\n    totalHeight,\n    toleranceHeight,\n    bufferedItems,\n    topPaddingHeight,\n    bottomPaddingHeight,\n    data: [],\n  };\n\n  return {\n    ...state,\n    ...doScroll(topPaddingHeight + toleranceHeight, state, adapter),\n  };\n}\n\nexport function getData<T>(\n  minIndex: number,\n  maxIndex: number,\n  offset: number,\n  limit: number,\n  get: VirtualScrollDataAdapter<T>\n): T[] {\n  const start = Math.max(0, minIndex, offset);\n  const end = Math.min(maxIndex, offset + limit - 1);\n  const data = get(start, end - start);\n  return [...data];\n}\n\ninterface ScrollUpdate<T> {\n  scrollTop: number;\n  topPaddingHeight: number;\n  bottomPaddingHeight: number;\n  data: T[];\n}\n\nexport function doScroll<T>(\n  scrollTop: number,\n  state: VirtualScrollState<T>,\n  get: VirtualScrollDataAdapter<T>\n): ScrollUpdate<T> {\n  const {\n    totalHeight,\n    toleranceHeight,\n    bufferedItems,\n    settings: { itemHeight, minIndex, maxIndex },\n  } = state;\n  const index =\n    minIndex + Math.floor((scrollTop - toleranceHeight) / itemHeight);\n  const data = getData(minIndex, maxIndex, index, bufferedItems, get);\n  const topPaddingHeight = Math.max((index - minIndex) * itemHeight, 0);\n  const bottomPaddingHeight = Math.max(\n    totalHeight - (topPaddingHeight + data.length * itemHeight),\n    0\n  );\n\n  return { scrollTop, topPaddingHeight, bottomPaddingHeight, data };\n}\n\ninterface VirtualScrollState<T> {\n  settings: VirtualScrollSettings;\n  scrollTop: number; // px\n  bufferedItems: number; // count\n  totalHeight: number; // px\n  viewportHeight: number; // px\n  topPaddingHeight: number; // px\n  bottomPaddingHeight: number; // px\n  toleranceHeight: number; // px\n  data: T[];\n}\n\nconst scrollReducer =\n  <T extends {}>(get: VirtualScrollDataAdapter<T>) =>\n  (state: VirtualScrollState<T>, scrollTop: number) => ({\n    ...state,\n    ...doScroll(scrollTop, state, get),\n  });\n\nexport const VirtualScroll = <T extends {}, U extends ReactNode = ReactNode>(\n  props: VirtualScrollProps<T, U> & { className?: string }\n) => {\n  const viewportRef = useRef<HTMLDivElement | null>(null);\n\n  const { settings, startState, reducer } = useMemo(() => {\n    const settings = fillVirtualScrollSettings(props.settings ?? {});\n    const startState = initialState<T>(settings, props.get, viewportRef);\n    const reducer = scrollReducer(props.get);\n    return { settings, reducer, startState };\n  }, [props.settings, props.get]);\n\n  const [state, dispatchScroll] = useReducer(reducer, startState);\n\n  useEffect(() => {\n    if (viewportRef.current !== null) {\n      dispatchScroll(viewportRef.current.scrollTop);\n    }\n  }, [settings, props.row]);\n\n  const initialScroll = useCallback(\n    (div: HTMLDivElement | null) => {\n      if (div) {\n        div.scrollTop = viewportRef.current\n          ? viewportRef.current.scrollTop\n          : settings.startIndex * settings.itemHeight;\n      }\n      viewportRef.current = div;\n    },\n    [viewportRef, settings.startIndex, settings.itemHeight]\n  );\n\n  const rows = state.data.map((d) => (\n    <div key={props.rowKey(d)} style={{ height: `${settings.itemHeight}px` }}>\n      {props.row(d)}\n    </div>\n  ));\n\n  return (\n    <div\n      ref={initialScroll}\n      style={{\n        height: `${state.viewportHeight}px`,\n        overflowY: \"scroll\",\n        overflowAnchor: \"none\",\n      }}\n      className={props.className ?? \"\"}\n      onScroll={(e) => dispatchScroll((e.target as HTMLDivElement).scrollTop)}\n    >\n      <div style={{ height: `${state.topPaddingHeight}px` }} />\n      {rows}\n      <div style={{ height: `${state.bottomPaddingHeight}px` }} />\n    </div>\n  );\n};\n\nexport default VirtualScroll;\n","import { ReactNode, useCallback, useContext, useMemo, useState } from \"react\";\nimport { rounded } from \"@davidsouther/jiffies/lib/esm/dom/css/border\";\n\nimport {\n  Format,\n  FORMATS,\n  Memory as MemoryChip,\n} from \"../../../simulator/cpu/memory\";\nimport { asm } from \"../../../util/asm\";\nimport { bin, dec, hex } from \"../../../util/twos\";\nimport InlineEdit from \"../pico/inline_edit\";\nimport VirtualScroll, { VirtualScrollSettings } from \"../pico/virtual_scroll\";\nimport { Icon } from \"../pico/icon\";\nimport { AppContext } from \"../../App.context\";\nimport { t } from \"@lingui/macro\";\n\nconst ITEM_HEIGHT = 34;\n\nexport const MemoryBlock = ({\n  memory,\n  jmp = { value: 0 },\n  highlight = -1,\n  editable = false,\n  format = dec,\n  onChange = () => {},\n}: {\n  jmp?: { value: number };\n  memory: MemoryChip;\n  highlight?: number;\n  editable?: boolean;\n  format?: (v: number) => string;\n  onChange?: (i: number, value: string, previous: number) => void;\n}) => {\n  const settings = useMemo<Partial<VirtualScrollSettings>>(\n    () => ({\n      count: 20,\n      maxIndex: memory.size,\n      itemHeight: ITEM_HEIGHT,\n      startIndex: jmp.value,\n    }),\n    [memory.size, jmp]\n  );\n  const get = useCallback(\n    (offset: number, count: number) =>\n      memory\n        .range(offset, offset + count)\n        .map((v, i) => [i + offset, v] as [number, number]),\n    [memory]\n  );\n  const row = useCallback(\n    ([i, v]: [number, number]) => (\n      <MemoryCell\n        index={i}\n        value={format(v)}\n        editable={editable}\n        highlight={i === highlight}\n        onChange={onChange}\n      />\n    ),\n    [format, editable, highlight, onChange]\n  );\n\n  return (\n    <VirtualScroll<[number, number], ReactNode>\n      settings={settings}\n      get={get}\n      row={row}\n      rowKey={([i]) => i}\n    />\n  );\n};\n\nexport const MemoryCell = ({\n  index,\n  value,\n  highlight = false,\n  editable = false,\n  onChange = () => {},\n}: {\n  index: number;\n  value: string;\n  highlight?: boolean;\n  editable?: boolean;\n  onChange?: (i: number, value: string, previous: number) => void;\n}) => (\n  <div style={{ display: \"flex\", height: \"100%\" }}>\n    <code\n      style={{\n        ...rounded(\"none\"),\n        ...(highlight\n          ? { background: \"var(--code-kbd-background-color)\" }\n          : {}),\n      }}\n    >\n      {hex(index)}\n    </code>\n    <code\n      style={{\n        flex: \"1\",\n        textAlign: \"right\",\n        ...rounded(\"none\"),\n        ...(highlight\n          ? { background: \"var(--code-kbd-background-color)\" }\n          : {}),\n      }}\n    >\n      {editable ? (\n        <InlineEdit\n          value={value}\n          onChange={(newValue: string) =>\n            onChange(index, newValue, Number(value))\n          }\n        />\n      ) : (\n        <span>{value}</span>\n      )}\n    </code>\n  </div>\n);\n\nexport const Memory = ({\n  name = \"Memory\",\n  highlight = -1,\n  editable = true,\n  memory,\n  format = \"dec\",\n}: {\n  name?: string;\n  editable?: boolean;\n  highlight?: number;\n  memory: MemoryChip;\n  format: Format;\n}) => {\n  const [fmt, setFormat] = useState(format);\n  const [jmp, setJmp] = useState(\"0\");\n  const [goto, setGoto] = useState({ value: 0 });\n\n  const jumpTo = () => {\n    setGoto({ value: Number(jmp) });\n  };\n\n  const { filePicker, fs, setStatus } = useContext(AppContext);\n  const doLoad = useCallback(async () => {\n    try {\n      const file = await filePicker.select();\n      await memory.load(fs, file);\n    } catch (e) {\n      console.error(e);\n      setStatus(`Failed to load into memory`);\n    }\n  }, [fs, filePicker, memory, setStatus]);\n\n  return (\n    <article className=\"panel\">\n      <header>\n        <div>{name}</div>\n        <fieldset role=\"group\">\n          <button onClick={doLoad} className=\"flex-0\">\n            <Icon name=\"upload_file\" />\n          </button>\n          <input\n            style={{ width: \"4em\", height: \"100%\" }}\n            placeholder={t`Goto`}\n            onKeyDown={({ key }) => key === \"Enter\" && jumpTo()}\n            onChange={({ target: { value } }) => setJmp(value ?? \"0\")}\n          />\n          <button onClick={jumpTo} className=\"flex-0\">\n            <Icon name=\"move_down\" />\n          </button>\n          {FORMATS.map((option) => (\n            <label\n              className=\"flex-0\"\n              key={option}\n              role=\"button\"\n              aria-current={option === fmt}\n            >\n              <input\n                type=\"radio\"\n                name={name}\n                value={option}\n                checked={option === fmt}\n                onChange={() => setFormat(option)}\n              />\n              {option}\n            </label>\n          ))}\n        </fieldset>\n      </header>\n      <MemoryBlock\n        jmp={goto}\n        memory={memory}\n        highlight={highlight}\n        editable={editable}\n        format={(v: number) => doFormat(fmt, v)}\n        onChange={(i: number, v: string) => memory.update(i, v, fmt ?? \"dec\")}\n      />\n    </article>\n  );\n};\n\nexport default Memory;\n\nfunction doFormat(format: Format, v: number): string {\n  switch (format) {\n    case \"bin\":\n      return bin(v);\n    case \"hex\":\n      return hex(v);\n    case \"asm\":\n      return asm(v);\n    case \"dec\":\n    default:\n      return dec(v);\n  }\n}\n","import { Bus, ClockedChip, Pin } from \"../../chip\";\nimport { assert } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { Memory as MemoryComponent } from \"../../../../app/components/chips/memory\";\nimport { Memory, Memory as MemoryChip } from \"../../../cpu/memory\";\n\nexport class RAM extends ClockedChip {\n  protected memory: MemoryChip;\n  private nextData: number = 0;\n  private address: number = 0;\n\n  constructor(protected readonly width: number, name?: string) {\n    super([\"in[16]\", \"load\", `address[${width}]`], [`out[16]`], name);\n    this.memory = new MemoryChip(Math.pow(2, this.width));\n  }\n\n  override tick() {\n    const load = this.in(\"load\").voltage();\n    this.address = this.in(\"address\").busVoltage;\n    if (load) {\n      this.nextData = this.in().busVoltage;\n      this.memory.set(this.address, this.nextData);\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.memory?.get(this.address) ?? 0;\n  }\n\n  override eval() {\n    const address = this.in(\"address\").busVoltage;\n    this.out().busVoltage = this.memory?.get(address) ?? 0;\n  }\n\n  at(idx: number): Pin {\n    assert(\n      idx < this.memory.size,\n      () => `Request out of bounds (${idx} >= ${this.memory.size})`\n    );\n    return new RamBus(`${this.name}[${idx}]`, idx, this.memory);\n  }\n\n  override render() {\n    return [\n      <MemoryComponent name={this.name} memory={this.memory} format=\"dec\" />,\n    ];\n  }\n}\n\nexport class RamBus extends Bus {\n  constructor(\n    name: string,\n    private readonly index: number,\n    private ram: Memory\n  ) {\n    super(name);\n  }\n\n  override get busVoltage(): number {\n    return this.ram.get(this.index);\n  }\n\n  override set busVoltage(num: number) {\n    this.ram.set(this.index, num);\n  }\n}\n\nexport class RAM8 extends RAM {\n  constructor(name?: string) {\n    super(3, name);\n  }\n\n  override render() {\n    return [<span>RAM {this.width}</span>];\n  }\n}\n\nexport class RAM64 extends RAM {\n  constructor(name?: string) {\n    super(6, name);\n  }\n}\n\nexport class RAM512 extends RAM {\n  constructor(name?: string) {\n    super(9, name);\n  }\n}\n\nexport class RAM4K extends RAM {\n  constructor(name?: string) {\n    super(12, name);\n  }\n}\n\nexport class RAM16K extends RAM {\n  constructor(name?: string) {\n    super(14, name);\n  }\n}\n","import { CSSProperties, ReactNode } from \"react\";\n\nexport const Panel = (props: {\n  children: ReactNode;\n  header?: ReactNode;\n  footer?: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n}) => {\n  return (\n    <article className={[\"panel\", props.className ?? \"\"].join(\" \")}>\n      {props.header && <header>{props.header}</header>}\n      <main>{props.children}</main>\n      {props.footer && <footer>{props.footer}</footer>}\n    </article>\n  );\n};\n\nexport const Accordian = (props: {\n  children: ReactNode;\n  summary: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  open?: boolean;\n}) => {\n  return (\n    <details\n      className={props.className ?? \"\"}\n      open={props.open}\n      style={props.style}\n    >\n      <summary>\n        <div className=\"flex row align-baseline\">{props.summary}</div>\n      </summary>\n      {props.children}\n    </details>\n  );\n};\n","import { assertExists } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { Trans } from \"@lingui/macro\";\nimport { useEffect, useRef } from \"react\";\nimport { Memory, SCREEN } from \"../../../simulator/cpu/memory\";\nimport { Panel } from \"../shell/panel\";\n\nconst WHITE = \"white\";\nconst BLACK = \"black\";\ntype COLOR = typeof WHITE | typeof BLACK;\n\nfunction get(mem: Memory, x: number, y: number): COLOR {\n  const byte = mem.get(SCREEN + 32 * y + ((x / 16) | 0));\n  const bit = byte & (1 << x % 16);\n  return bit === 0 ? WHITE : BLACK;\n}\n\nfunction set(data: Uint8ClampedArray, x: number, y: number, value: COLOR) {\n  const pixel = (y * 512 + x) * 4;\n  const color = value === WHITE ? 255 : 0;\n  data[pixel] = color;\n  data[pixel + 1] = color;\n  data[pixel + 2] = color;\n  data[pixel + 3] = 255;\n}\n\nexport const Screen = ({ memory }: { memory: Memory }) => {\n  let canvas = useRef<HTMLCanvasElement>();\n  useEffect(() => {\n    const ctx = canvas.current?.getContext(\"2d\") ?? undefined;\n\n    if (ctx) {\n      const image = assertExists(\n        ctx.getImageData(0, 0, 512, 256),\n        \"Failed to create Context2d\"\n      );\n      for (let col = 0; col < 512; col++) {\n        for (let row = 0; row < 256; row++) {\n          const color = get(memory, col, row);\n          set(image.data, col, row, color);\n        }\n      }\n      ctx.putImageData(image, 0, 0);\n    }\n  }, [memory]);\n\n  return (\n    <Panel header={<Trans>Screen</Trans>}>\n      <figure\n        style={{\n          width: \"100%\",\n          maxWidth: \"512px\",\n          boxSizing: \"content-box\",\n          marginInline: \"auto\",\n          margin: \"0\",\n          borderTop: \"2px solid gray\",\n          borderLeft: \"2px solid gray\",\n          borderBottom: \"2px solid lightgray\",\n          borderRight: \"2px solid lightgray\",\n        }}\n      >\n        <canvas\n          ref={(ref) => (canvas.current = ref ?? undefined)}\n          width={512}\n          height={256}\n        ></canvas>\n      </figure>\n    </Panel>\n  );\n};\n","import { KeyboardEvent, useCallback, useState } from \"react\";\nimport { Keyboard as KeyboardChip } from \"../../../simulator/chip/builtins/computer/computer\";\nimport { Icon } from \"../pico/icon\";\nimport { RegisterComponent } from \"./register\";\n\nconst KeyMap: Record<string, number | undefined> = {\n  // Delete: 127,\n  Enter: 128,\n  Backspace: 129,\n  ArrowLeft: 130,\n  ArrowUp: 131,\n  ArrowRight: 132,\n  ArrowDown: 133,\n  Home: 134,\n  End: 135,\n  PageUp: 136,\n  PageDown: 137,\n  Insert: 138,\n  Delete: 139,\n  Escape: 140,\n  F1: 141,\n  F2: 142,\n  F3: 143,\n  F4: 144,\n  F5: 145,\n  F6: 146,\n  F7: 147,\n  F8: 148,\n  F9: 149,\n  F10: 150,\n  F11: 151,\n  F12: 152,\n};\n\nfunction keyPressToHackCharacter(keypress: KeyboardEvent): number {\n  if (KeyMap[keypress.key]) {\n    return KeyMap[keypress.key]!;\n  }\n  if (keypress.key.length === 1) {\n    const code = keypress.key.charCodeAt(0);\n    if (code >= 32 && code <= 126) {\n      return code;\n    }\n  }\n\n  return 0;\n}\n\nexport const Keyboard = ({ keyboard }: { keyboard: KeyboardChip }) => {\n  const [showPicker, setShowPicker] = useState(false);\n  const [bits, setBits] = useState(keyboard.out().busVoltage);\n\n  const setKey = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      const key = keyPressToHackCharacter(event);\n      if (key === 0) {\n        return;\n      }\n      event.preventDefault();\n      keyboard.setKey(key);\n      setBits(keyboard.out().busVoltage);\n      setShowPicker(false);\n    },\n    [keyboard, setShowPicker, setBits]\n  );\n\n  const changeKey = useCallback(() => {\n    setShowPicker(true);\n  }, []);\n\n  return (\n    <div className=\"flex row align-baseline\">\n      <div className=\"flex-1\">\n        <RegisterComponent name=\"Keyboard\" bits={bits} />\n      </div>\n      <div className=\"flex-1\">\n        {showPicker ? (\n          <input ref={(e) => e?.focus()} type=\"text\" onKeyDown={setKey} />\n        ) : (\n          <button onClick={changeKey}>\n            <Icon name=\"keyboard\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { alu, COMMANDS_OP, Flags } from \"./alu\";\nimport { Memory } from \"./memory\";\n\nexport interface CPUInput {\n  inM: number;\n  instruction: number;\n  reset: boolean;\n}\n\nexport interface CPUOutput {\n  outM: number;\n  writeM: boolean;\n  addressM: number;\n}\n\nexport interface CPUState {\n  A: number;\n  D: number;\n  PC: number;\n  ALU: number;\n  flag: number;\n}\n\nexport function emptyState(): CPUState {\n  return { A: 0, D: 0, PC: 0, ALU: 0, flag: Flags.Zero };\n}\n\nconst BITS = {\n  c: 0b1000_0000_0000_0000,\n  x1: 0b1001_0000_0000_0000,\n  x2: 0b1001_0000_0000_0000,\n  am: 0b1001_0000_0000_0000,\n  op: 0b0000_1111_1100_0000,\n  d1: 0b1000_0000_0010_0000,\n  d2: 0b1000_0000_0001_0000,\n  d3: 0b1000_0000_0000_1000,\n  j1: 0b1000_0000_0000_0001,\n  j2: 0b1000_0000_0000_0010,\n  j3: 0b1000_0000_0000_0100,\n};\n\nexport function decode(instruction: number) {\n  function bit(bit: number): boolean {\n    return (instruction & bit) === bit;\n  }\n  const bits = {\n    c: bit(BITS.c),\n    x1: bit(BITS.x1),\n    x2: bit(BITS.x2),\n    am: bit(BITS.am),\n    op: ((instruction & BITS.op) >> 6) as COMMANDS_OP,\n    d1: bit(BITS.d1),\n    d2: bit(BITS.d2),\n    d3: bit(BITS.d3),\n    j1: bit(BITS.j1),\n    j2: bit(BITS.j2),\n    j3: bit(BITS.j3),\n  };\n\n  return bits;\n}\n\nexport function cpuTick(\n  { inM, instruction }: CPUInput,\n  { A, D, PC }: CPUState\n): [CPUState, boolean] {\n  const bits = decode(instruction);\n  const a = bits.am ? inM : A;\n  const [ALU, flag] = alu(bits.op, D, a);\n\n  return [{ A, D, PC: PC + 1, ALU, flag }, bits.d3];\n}\n\nexport function cpuTock(\n  { inM, instruction, reset }: CPUInput,\n  { A, D, PC, ALU, flag }: CPUState\n): [CPUOutput, CPUState] {\n  const bits = decode(instruction);\n\n  const j1 = bits.j1 && flag === Flags.Positive;\n  const j2 = bits.j2 && flag === Flags.Zero;\n  const j3 = bits.j3 && flag === Flags.Negative;\n  const jmp = j1 || j2 || j3;\n\n  PC = reset ? 0 : jmp ? A : PC;\n\n  if (bits.d2) {\n    D = ALU;\n  }\n\n  if (!bits.c) {\n    A = instruction & 0x7fff;\n  } else if (bits.d1) {\n    A = ALU;\n  }\n\n  const a = bits.am ? inM : A;\n  const alu2 = alu(bits.op, D, a);\n\n  ALU = alu2[0];\n  flag = alu2[1];\n\n  const output: CPUOutput = {\n    addressM: A,\n    outM: ALU,\n    writeM: bits.d3,\n  };\n\n  const state: CPUState = {\n    A,\n    D,\n    ALU,\n    flag,\n    PC,\n  };\n\n  return [output, state];\n}\n\nexport function cpu(input: CPUInput, state: CPUState): [CPUOutput, CPUState] {\n  const [tickState, _writeM] = cpuTick(input, state);\n  return cpuTock(input, tickState);\n}\n\nexport class CPU {\n  RAM: Memory;\n  ROM: Memory;\n\n  #pc = 0;\n  #a = 0;\n  #d = 0;\n\n  #tickState: CPUState = {\n    A: 0,\n    D: 0,\n    PC: 0,\n    ALU: 0,\n    flag: Flags.Zero,\n  };\n\n  get PC() {\n    return this.#pc;\n  }\n\n  get A() {\n    return this.#a;\n  }\n\n  get D() {\n    return this.#d;\n  }\n\n  constructor({\n    RAM = new Memory(0x7fff),\n    ROM,\n  }: {\n    RAM?: Memory;\n    ROM: Memory;\n  }) {\n    this.RAM = RAM;\n    this.ROM = ROM;\n  }\n\n  reset() {\n    this.#pc = 0;\n    this.#a = 0;\n    this.#d = 0;\n  }\n\n  tick() {\n    const [{ addressM, outM, writeM }, { A, D, PC }] = cpu(\n      {\n        inM: this.RAM.get(this.#a),\n        instruction: this.ROM.get(this.#pc),\n        reset: false,\n      },\n      {\n        A: this.#a,\n        D: this.#d,\n        PC: this.#pc,\n        ALU: this.#d,\n        flag: Flags.Zero,\n      }\n    );\n\n    this.#a = A;\n    this.#d = D;\n    this.#pc = PC;\n\n    if (writeM) {\n      this.RAM.set(addressM, outM);\n    }\n  }\n}\n","import { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Screen as ScreenComponent } from \"../../../../app/components/chips/screen\";\nimport { Keyboard as KeyboardComponent } from \"../../../../app/components/chips/keyboard\";\nimport { Chip, ClockedChip, ConstantBus, HIGH, LOW, Pin } from \"../../chip\";\nimport { RAM, RAM16K } from \"../sequential/ram\";\nimport {\n  CPUInput,\n  CPUState,\n  cpuTick,\n  cpuTock,\n  decode,\n  emptyState,\n} from \"../../../cpu/cpu\";\nimport { int10 } from \"../../../../util/twos\";\nimport { loadHack } from \"../../../fs\";\nimport { Flags } from \"../../../cpu/alu\";\nimport { RegisterComponent } from \"../../../../app/components/chips/register\";\nimport { ALUComponent } from \"../../../../app/components/chips/alu\";\nimport { KEYBOARD, SCREEN } from \"../../../cpu/memory\";\n\nexport class ROM32K extends RAM {\n  constructor() {\n    super(16, \"ROM\");\n  }\n\n  override async load(fs: FileSystem, path: string) {\n    try {\n      (await loadHack(fs, path)).map((v, i) => (this.at(i).busVoltage = v));\n    } catch (cause) {\n      // throw new Error(`ROM32K Failed to load file ${path}`, { cause });\n      throw new Error(`ROM32K Failed to load file ${path}`);\n    }\n  }\n}\n\nexport class Screen extends RAM {\n  static readonly OFFSET = SCREEN;\n\n  constructor() {\n    super(13, \"Screen\");\n  }\n\n  override render() {\n    return [<ScreenComponent memory={this.memory} />];\n  }\n}\n\nexport class Keyboard extends Chip {\n  static readonly OFFSET = KEYBOARD;\n\n  constructor() {\n    super([], [\"out[16]\"], \"Keyboard\");\n  }\n\n  setKey(key: number) {\n    this.out().busVoltage = key & 0xffff;\n  }\n\n  clearKey() {\n    this.out().busVoltage = 0;\n  }\n\n  override render() {\n    return [<KeyboardComponent keyboard={this} />];\n  }\n}\n\nexport class Memory extends ClockedChip {\n  private ram = new RAM16K();\n  private screen = new Screen();\n  private keyboard = new Keyboard();\n  private address = 0;\n\n  constructor() {\n    super([\"in[16]\", \"load\", \"address[15])\"], [\"out[16]\"], \"Memory\");\n    this.parts.add(this.keyboard);\n    this.parts.add(this.screen);\n    this.parts.add(this.ram);\n  }\n\n  override tick() {\n    const load = this.in(\"load\").voltage();\n    this.address = this.in(\"address\").busVoltage;\n    if (load) {\n      const inn = this.in().busVoltage;\n      if (this.address >= Keyboard.OFFSET) {\n        // Keyboard, do nothing\n      } else if (this.address >= Screen.OFFSET) {\n        this.screen.at(this.address - Screen.OFFSET).busVoltage = inn;\n      } else {\n        this.ram.at(this.address).busVoltage = inn;\n      }\n    }\n  }\n\n  override tock() {\n    this.eval();\n  }\n\n  override eval() {\n    if (!this.ram) return;\n    this.address = this.in(\"address\").busVoltage;\n    let out = 0;\n    if (this.address >= Keyboard.OFFSET) {\n      // Keyboard, do nothing\n      out = this.keyboard?.out().busVoltage ?? 0;\n    } else if (this.address >= Screen.OFFSET) {\n      out = this.screen?.at(this.address - Screen.OFFSET).busVoltage ?? 0;\n    } else {\n      out = this.ram?.at(this.address).busVoltage ?? 0;\n    }\n    this.out().busVoltage = out;\n  }\n\n  override in(pin?: string): Pin {\n    if (pin?.startsWith(\"RAM16K\")) {\n      const idx = int10(pin.match(/\\[(?<idx>\\d+)]/)?.groups?.idx ?? \"0\");\n      return this.ram.at(idx);\n    }\n    if (pin?.startsWith(\"Screen\")) {\n      const idx = int10(pin.match(/\\[(?<idx>\\d+)]/)?.groups?.idx ?? \"0\");\n      return this.screen.at(idx);\n    }\n    return super.in(pin);\n  }\n\n  override get(name: string, offset = 0): Pin | undefined {\n    if (name.startsWith(\"RAM16K\")) {\n      return this.at(offset & 0x3fff);\n    }\n    if (name.startsWith(\"Screen\")) {\n      return this.at(offset & (0x1fff + Screen.OFFSET));\n    }\n    if (name.startsWith(\"Keyboard\")) {\n      return this.at(Keyboard.OFFSET);\n    }\n    if (name.startsWith(\"Memory\")) {\n      return this.at(offset);\n    }\n    return super.get(name, offset);\n  }\n\n  at(offset: number): Pin {\n    if (offset >= Keyboard.OFFSET) {\n      return this.keyboard.out();\n    }\n    if (offset >= Screen.OFFSET) {\n      return this.screen.at(offset - Screen.OFFSET);\n    } else {\n      return this.ram.at(offset);\n    }\n  }\n}\n\nexport class CPU extends ClockedChip {\n  private state: CPUState = emptyState();\n\n  constructor() {\n    super(\n      [\"inM[16]\", \"instruction[16]\", \"reset\"],\n      [\"outM[16]\", \"writeM\", \"addressM[15]\", \"pc[15]\"]\n    );\n  }\n\n  override tick(): void {\n    const [state, writeM] = cpuTick(this.cpuInput(), this.state);\n    this.state = state;\n    this.out(\"writeM\").pull(writeM ? HIGH : LOW);\n    this.out(\"outM\").busVoltage = this.state.ALU ?? 0;\n  }\n\n  override tock(): void {\n    if (!this.state) return; // Skip initial tock\n    const [output, state] = cpuTock(this.cpuInput(), this.state);\n    this.state = state;\n\n    this.out(\"addressM\").busVoltage = output.addressM ?? 0;\n    this.out(\"outM\").busVoltage = output.outM ?? 0;\n    this.out(\"writeM\").pull(output.writeM ? HIGH : LOW);\n    this.out(\"pc\").busVoltage = this.state?.PC ?? 0;\n  }\n\n  private cpuInput(): CPUInput {\n    const inM = this.in(\"inM\").busVoltage;\n    const instruction = this.in(\"instruction\").busVoltage;\n    const reset = this.in(\"reset\").busVoltage === 1;\n    return { inM, instruction, reset };\n  }\n\n  override get(pin: string, offset?: number): Pin | undefined {\n    if (pin?.startsWith(\"ARegister\")) {\n      return new ConstantBus(\"ARegister\", this.state.A);\n    }\n    if (pin?.startsWith(\"DRegister\")) {\n      return new ConstantBus(\"DRegister\", this.state.D);\n    }\n    if (pin?.startsWith(\"PC\")) {\n      return new ConstantBus(\"PC\", this.state.PC);\n    }\n    return super.get(pin, offset);\n  }\n\n  override render() {\n    const bits = decode(this.in(\"instruction\").busVoltage);\n    return [\n      <RegisterComponent name={\"A\"} bits={this.state.A} />,\n      <RegisterComponent name={\"D\"} bits={this.state.D} />,\n      <RegisterComponent name={\"PC\"} bits={this.state.PC} />,\n      <ALUComponent\n        A={bits.am ? this.in(\"inM\").busVoltage : this.state.A}\n        D={this.state.D}\n        out={this.state.ALU}\n        op={bits.op}\n        flag={this.state.flag as keyof typeof Flags}\n      />,\n    ];\n  }\n}\n\nexport class Computer extends Chip {\n  #ram = new Memory();\n  #rom = new ROM32K();\n  #cpu = new CPU();\n\n  constructor() {\n    super([\"reset\"], []);\n\n    this.wire(this.#cpu, [\n      { from: { name: \"reset\", start: 0 }, to: { name: \"reset\", start: 0 } },\n      {\n        from: { name: \"instruction\", start: 0 },\n        to: { name: \"instruction\", start: 0 },\n      },\n      { from: { name: \"outM\", start: 0 }, to: { name: \"inM\", start: 0 } },\n      { from: { name: \"writeM\", start: 0 }, to: { name: \"writeM\", start: 0 } },\n      {\n        from: { name: \"addressM\", start: 0 },\n        to: { name: \"addressM\", start: 0 },\n      },\n    ]);\n\n    this.wire(this.#rom, [\n      { from: { name: \"pc\", start: 0 }, to: { name: \"address\", start: 0 } },\n      {\n        from: { name: \"instruction\", start: 0 },\n        to: { name: \"out\", start: 0 },\n      },\n    ]);\n\n    this.wire(this.#ram, [\n      { from: { name: \"inM\", start: 0 }, to: { name: \"in\", start: 0 } },\n      { from: { name: \"writeM\", start: 0 }, to: { name: \"load\", start: 0 } },\n      {\n        from: { name: \"addressM\", start: 0 },\n        to: { name: \"address\", start: 0 },\n      },\n      { from: { name: \"outM\", start: 0 }, to: { name: \"out\", start: 0 } },\n    ]);\n  }\n\n  override eval() {\n    super.eval();\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    if (\n      name.startsWith(\"PC\") ||\n      name.startsWith(\"ARegister\") ||\n      name.startsWith(\"DRegister\")\n    ) {\n      return this.#cpu.get(name);\n    }\n    if (name.startsWith(\"RAM16K\")) {\n      return this.#ram.get(name, offset);\n    }\n    return super.get(name, offset);\n  }\n\n  override load(fs: FileSystem, path: string): Promise<void> {\n    return this.#rom.load(fs, path);\n  }\n}\n","import { Err, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { Chip } from \"../chip\";\n\nimport { And, And16 } from \"./logic/and\";\nimport { DMux, DMux4Way, DMux8Way } from \"./logic/dmux\";\nimport { Mux, Mux16, Mux4Way16, Mux8Way16 } from \"./logic/mux\";\nimport { Nand, Nand16 } from \"./logic/nand\";\nimport { Not, Not16 } from \"./logic/not\";\nimport { Or, Or16, Or8way } from \"./logic/or\";\nimport { Xor, Xor16 } from \"./logic/xor\";\n\nimport { Add16 } from \"./arithmetic/add_16\";\nimport { ALU, ALUNoStat } from \"./arithmetic/alu\";\nimport { FullAdder } from \"./arithmetic/full_adder\";\nimport { HalfAdder } from \"./arithmetic/half_adder\";\nimport { Inc16 } from \"./arithmetic/inc16\";\n\nimport { Bit, PC, Register, VRegister } from \"./sequential/bit\";\nimport { DFF } from \"./sequential/dff\";\nimport { RAM16K, RAM4K, RAM512, RAM64, RAM8 } from \"./sequential/ram\";\nimport {\n  Computer,\n  CPU,\n  Keyboard,\n  Memory,\n  ROM32K,\n  Screen,\n} from \"./computer/computer\";\n\nexport {\n  And,\n  And16,\n  DMux,\n  Mux,\n  Mux16,\n  Mux4Way16,\n  Mux8Way16,\n  Nand,\n  Nand16,\n  Not,\n  Not16,\n  Or,\n  Or16,\n  Or8way,\n  Xor,\n  Xor16,\n  HalfAdder,\n  FullAdder,\n  Add16,\n  Inc16,\n  ALU,\n  Bit,\n  Register,\n  VRegister as ARegister,\n  VRegister as DRegister,\n  DFF,\n  RAM8,\n  RAM64,\n  RAM512,\n  RAM4K,\n  RAM16K,\n};\n\nexport const REGISTRY = new Map<string, () => Chip>(\n  (\n    [\n      [\"Nand\", Nand],\n      [\"Nand16\", Nand16],\n      [\"Not\", Not],\n      [\"Not16\", Not16],\n      [\"And\", And],\n      [\"And16\", And16],\n      [\"Or\", Or],\n      [\"Or16\", Or16],\n      [\"Or8Way\", Or8way],\n      [\"XOr\", Xor],\n      [\"XOr16\", Xor16],\n      [\"Xor\", Xor],\n      [\"Xor16\", Xor16],\n      [\"Mux\", Mux],\n      [\"Mux16\", Mux16],\n      [\"Mux4Way16\", Mux4Way16],\n      [\"Mux8Way16\", Mux8Way16],\n      [\"DMux\", DMux],\n      [\"DMux4Way\", DMux4Way],\n      [\"DMux8Way\", DMux8Way],\n      [\"HalfAdder\", HalfAdder],\n      [\"FullAdder\", FullAdder],\n      [\"Add16\", Add16],\n      [\"Inc16\", Inc16],\n      [\"ALU\", ALU],\n      [\"ALUNoStat\", ALUNoStat],\n      [\"DFF\", DFF],\n      [\"Bit\", Bit],\n      [\"Register\", Register],\n      [\"ARegister\", Register],\n      [\"DRegister\", Register],\n      [\"PC\", PC],\n      [\"RAM8\", RAM8],\n      [\"RAM64\", RAM64],\n      [\"RAM512\", RAM512],\n      [\"RAM4K\", RAM4K],\n      [\"RAM16K\", RAM16K],\n      [\"ROM32K\", ROM32K],\n      [\"Screen\", Screen],\n      [\"Keyboard\", Keyboard],\n      [\"CPU\", CPU],\n      [\"Computer\", Computer],\n      [\"Memory\", Memory],\n      [\"ARegister\", VRegister],\n      [\"DRegister\", VRegister],\n    ] as [string, { new (): Chip }][]\n  ).map(([name, ChipCtor]) => [\n    name,\n    () => {\n      const chip = new ChipCtor();\n      chip.name = name;\n      return chip;\n    },\n  ])\n);\n\nexport function getBuiltinChip(name: string): Result<Chip> {\n  const chip = REGISTRY.get(name);\n  return chip\n    ? Ok(chip())\n    : Err(new Error(`Chip ${name} not in builtin registry`));\n}\n","import { Err, isErr, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { HDL, HdlParse } from \"../../languages/hdl\";\nimport { getBuiltinChip } from \"./builtins/index\";\nimport { Chip, Connection } from \"./chip\";\n\nfunction pinWidth(start: number, end: number | undefined): number | undefined {\n  if (end === undefined) {\n    return undefined;\n  }\n  if (end >= start) {\n    return end - start + 1;\n  }\n  if (start > 0 && end === 0) {\n    return 1;\n  }\n  throw new Error(`Bus specification has start > end (${start} > ${end})`);\n}\n\nexport function parse(\n  code: string\n): Result<Chip, Error | { message: string; shortMessage: string }> {\n  const parsed = HDL.parse(code.toString());\n  if (isErr(parsed)) return parsed;\n  return build(Ok(parsed));\n}\n\nexport function build(parts: HdlParse): Result<Chip, Error> {\n  if (parts.parts === \"BUILTIN\") {\n    return getBuiltinChip(parts.name.toString());\n  }\n\n  const buildChip = new Chip(\n    parts.ins.map(({ pin, width }) => ({ pin: pin.toString(), width })),\n    parts.outs.map(({ pin, width }) => ({ pin: pin.toString(), width })),\n    parts.name.toString(),\n    [],\n    parts.clocked\n  );\n\n  for (const part of parts.parts) {\n    const builtin = getBuiltinChip(part.name.toString());\n    if (isErr(builtin)) return builtin;\n    const partChip = Ok(builtin);\n\n    const wires = part.wires.map<Connection>(({ lhs, rhs }) => ({\n      to: {\n        name: lhs.pin.toString(),\n        start: lhs.start ?? 0,\n        width: pinWidth(lhs.start ?? 0, lhs.end),\n      },\n      from: {\n        name: rhs.pin.toString(),\n        start: rhs.start ?? 0,\n        width: pinWidth(rhs.start ?? 0, rhs.end),\n      },\n    }));\n\n    try {\n      buildChip.wire(partChip, wires);\n    } catch (e) {\n      return Err(e as Error);\n    }\n  }\n\n  return Ok(buildChip);\n}\n","import { assert } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { bin, dec, hex } from \"../util/twos\";\nimport { Test } from \"./tst\";\n\nexport class Output {\n  private readonly fmt: \"B\" | \"X\" | \"D\" | \"S\";\n  private readonly lPad: number;\n  private readonly rPad: number;\n  private readonly len: number;\n  private readonly index: number;\n  private readonly builtin: boolean;\n\n  // new Output(inst.id, inst.style, inst.width, inst.lpad, inst.rpad)\n  constructor(\n    private variable: string,\n    format = \"%B1.1.1\",\n    len?: number,\n    lPad?: number,\n    rPad?: number,\n    builtin?: boolean,\n    index?: number\n  ) {\n    if (\n      format.startsWith(\"%\") &&\n      len === undefined &&\n      lPad === undefined &&\n      rPad === undefined\n    ) {\n      const { fmt, lPad, rPad, len } = format.match(\n        /^%(?<fmt>[BDXS])(?<lPad>\\d+)\\.(?<len>\\d+)\\.(?<rPad>\\d+)$/\n      )?.groups as {\n        fmt: \"B\" | \"X\" | \"D\" | \"S\";\n        lPad: string;\n        rPad: string;\n        len: string;\n      };\n      this.fmt = fmt;\n      this.lPad = parseInt(lPad);\n      this.rPad = parseInt(rPad);\n      this.len = parseInt(len);\n      this.builtin = false;\n      this.index = -1;\n    } else {\n      assert([\"B\", \"X\", \"D\", \"S\"].includes(format[0]));\n      this.fmt = format[0] as \"B\" | \"X\" | \"D\" | \"S\";\n      this.len = len ?? 3;\n      this.lPad = lPad ?? 1;\n      this.rPad = rPad ?? 1;\n      this.builtin = builtin ?? false;\n      this.index = index ?? -1;\n    }\n  }\n\n  header(test: Test) {\n    let variable = `${this.variable}`;\n    if (this.builtin) {\n      const index = this.index >= 0 ? this.index : \"\";\n      variable = `${variable}[${index}]`;\n    }\n    if (variable.length > this.len + this.lPad + this.rPad) {\n      return variable.substring(0, this.len + this.lPad + this.rPad);\n    }\n    return this.padCenter(variable);\n  }\n\n  print(test: Test) {\n    const val = test.getVar(this.variable, this.index);\n    if (this.fmt === \"S\") {\n      return this.padLeft(val as string);\n    }\n\n    const fmt = { B: bin, D: dec, X: hex }[this.fmt];\n    let value = fmt(val as number);\n    if (this.fmt === \"D\") {\n      return this.padRight(value);\n    } else {\n      return this.padCenter(value.slice(value.length - this.len));\n    }\n  }\n\n  private padCenter(value: string) {\n    const space = this.lPad + this.len + this.rPad;\n    const leftSpace = Math.floor((space - value.length) / 2);\n    const rightSpace = space - leftSpace - value.length;\n    const padLeft = leftSpace + value.length;\n    const padRight = padLeft + rightSpace;\n    value = value.padStart(padLeft);\n    value = value.padEnd(padRight);\n    return value;\n  }\n\n  private padLeft(value: string) {\n    value = value.substring(0, this.len);\n    const padRight = this.rPad + this.len;\n    const padLeft = this.lPad + padRight;\n    value = value.padEnd(padRight);\n    value = value.padStart(padLeft);\n    return value;\n  }\n\n  private padRight(value: string) {\n    value = value.substring(0, this.len);\n    const padLeft = this.lPad + this.len;\n    const padRight = this.rPad + padLeft;\n    value = value.padStart(padLeft);\n    value = value.padEnd(padRight);\n    return value;\n  }\n}\n","import { checkExhaustive } from \"@davidsouther/jiffies/lib/esm/assert\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Span } from \"../languages/base\";\nimport {\n  Tst,\n  TstLineStatement,\n  TstOperation,\n  TstOutputSpec,\n  TstStatement,\n} from \"../languages/tst\";\nimport { Bus, Chip, HIGH, Low, LOW } from \"./chip/chip\";\nimport { Clock } from \"./chip/clock\";\nimport { Output } from \"./output\";\n\nexport abstract class Test<IS extends TestInstruction = TestInstruction> {\n  protected readonly instructions: (IS | TestInstruction)[] = [];\n  protected _outputList: Output[] = [];\n  protected _log: string = \"\";\n  fs: FileSystem = new FileSystem();\n\n  setFileSystem(fs: FileSystem) {\n    this.fs = fs;\n  }\n\n  async load(filename: string) {}\n  async compareTo(filename: string) {}\n  outputFile(filename: string): void {}\n  outputList(outputs: Output[]): void {\n    this._outputList = outputs;\n  }\n\n  addInstruction(instruction: IS | TestInstruction) {\n    this.instructions.push(instruction);\n  }\n\n  reset() {\n    this._steps = this.instructions[Symbol.iterator]();\n    this._log = \"\";\n  }\n\n  _steps: IterableIterator<IS | TestInstruction> | undefined;\n  _step: IteratorResult<IS | TestInstruction, IS | TestInstruction> | undefined;\n\n  get steps(): Iterator<IS | TestInstruction> {\n    if (this._steps === undefined) {\n      this.reset();\n    }\n    return this._steps!;\n  }\n\n  get currentStep(): IS | TestInstruction | undefined {\n    return this._step?.value;\n  }\n\n  async step() {\n    this._step = this.steps.next();\n    if (!this._step.done) {\n      await this._step.value.do(this);\n      return true;\n    }\n    return false;\n  }\n\n  async run() {\n    while (await this.step());\n  }\n\n  echo(content: string) {}\n\n  clearEcho() {}\n\n  protected readonly breakpoints: Map<string, number> = new Map();\n  addBreakpoint(variable: string, value: number) {\n    this.breakpoints.set(variable, value);\n  }\n  clearBreakpoints() {\n    this.breakpoints.clear();\n  }\n\n  output() {\n    const values = this._outputList.map((output) => output.print(this));\n    this._log += `|${values.join(\"|\")}|\\n`;\n  }\n\n  header() {\n    const values = this._outputList.map((output) => output.header(this));\n    this._log += `|${values.join(\"|\")}|\\n`;\n  }\n\n  log() {\n    return this._log;\n  }\n\n  abstract hasVar(variable: string | number): boolean;\n  abstract getVar(variable: string | number, offset?: number): number | string;\n  abstract setVar(variable: string, value: number, offset?: number): void;\n}\n\nfunction isTstLineStatment(line: TstStatement): line is TstLineStatement {\n  return (line as TstLineStatement).ops !== undefined;\n}\n\nexport class ChipTest extends Test<ChipTestInstruction> {\n  private chip: Chip = new Low();\n  private clock = Clock.get();\n\n  static from(tst: Tst): ChipTest {\n    const test = new ChipTest();\n\n    for (const line of tst.lines) {\n      if (isTstLineStatment(line)) {\n        test.addInstruction(ChipTest.makeLineStatement(line));\n      } else {\n        const repeat = new TestRepeatInstruction(line.count);\n        test.addInstruction(repeat);\n        for (const statement of line.statements) {\n          repeat.addInstruction(ChipTest.makeLineStatement(statement));\n        }\n      }\n    }\n\n    return test;\n  }\n\n  private static makeLineStatement(line: TstLineStatement) {\n    const statement = new TestCompoundInstruction();\n    statement.span = line.span;\n    for (const op of line.ops) {\n      statement.addInstruction(ChipTest.makeInstruction(op));\n    }\n    return statement;\n  }\n\n  private static makeInstruction(inst: TstOperation) {\n    const { op } = inst;\n    switch (op) {\n      case \"tick\":\n        return new TestTickInstruction();\n      case \"tock\":\n        return new TestTockInstruction();\n      case \"eval\":\n        return new TestEvalInstruction();\n      case \"output\":\n        return new TestOutputInstruction();\n      case \"set\":\n        return new TestSetInstruction(inst.id, inst.value, inst.index);\n      case \"output-list\":\n        return new TestOutputListInstruction(inst.spec);\n      case \"echo\":\n        return new TestEchoInstruction(inst.message);\n      case \"clear-echo\":\n        return new TestClearEchoInstruction();\n      case \"load\":\n        return new TestLoadROMInstruction(inst.file);\n      default:\n        checkExhaustive(op, `Unknown tst operation ${op}`);\n    }\n  }\n\n  with(chip: Chip): this {\n    this.chip = chip;\n    return this;\n  }\n\n  hasVar(variable: string | number): boolean {\n    if (variable === \"time\") {\n      return true;\n    }\n    variable = `${variable}`;\n    // Look up built-in chip state variables\n    return (\n      this.chip.in(variable) !== undefined ||\n      this.chip.out(variable) !== undefined\n    );\n  }\n\n  getVar(variable: string | number, offset?: number): number | string {\n    variable = `${variable}`;\n    if (variable === \"time\") {\n      return this.clock.toString();\n    }\n    const pin = this.chip.get(variable, offset);\n    if (!pin) return 0;\n    return pin instanceof Bus ? pin.busVoltage : pin.voltage();\n  }\n\n  setVar(variable: string, value: number, offset?: number): void {\n    // Look up built-in chip state variables\n    const pinOrBus = this.chip.get(variable, offset);\n    if (pinOrBus instanceof Bus) {\n      pinOrBus.busVoltage = value;\n    } else {\n      pinOrBus?.pull(value === 0 ? LOW : HIGH);\n    }\n  }\n\n  eval(): void {\n    this.chip.eval();\n  }\n\n  tick(): void {\n    this.chip.eval();\n    this.clock.tick();\n  }\n\n  tock(): void {\n    this.chip.eval();\n    this.clock.tock();\n  }\n\n  override async load(filename: string) {\n    await this.chip.load(this.fs, filename);\n  }\n\n  override async run() {\n    this.clock.reset();\n    await super.run();\n  }\n}\n\nexport class CPUTest extends Test<CPUTestInstruction> {\n  hasVar(_variable: string | number): boolean {\n    return false;\n  }\n  getVar(_variable: string | number): number {\n    return 0;\n  }\n  setVar(_variable: string, _value: number): void {}\n  ticktock(): void {}\n}\n\nexport class VMTest extends Test<VMTestInstruction> {\n  hasVar(_variable: string | number): boolean {\n    return false;\n  }\n  getVar(_variable: string | number): number {\n    return 0;\n  }\n  setVar(_variable: string, _value: number): void {}\n  vmstep(): void {}\n}\n\nexport interface TestInstruction {\n  span?: Span;\n  do(test: Test): Promise<void> | void;\n}\n\nexport class TestSetInstruction implements TestInstruction {\n  constructor(\n    private variable: string,\n    private value: number,\n    private index?: number | undefined\n  ) {}\n\n  do(test: Test): void {\n    test.setVar(this.variable, this.value, this.index);\n  }\n}\n\nexport class TestOutputInstruction implements TestInstruction {\n  do(test: Test) {\n    test.output();\n  }\n}\n\nexport class TestOutputListInstruction implements TestInstruction {\n  private outputs: Output[] = [];\n\n  constructor(specs: TstOutputSpec[] = []) {\n    for (const spec of specs) {\n      this.addOutput(spec);\n    }\n  }\n\n  addOutput(inst: TstOutputSpec) {\n    this.outputs.push(\n      new Output(\n        inst.id,\n        inst.style,\n        inst.width,\n        inst.lpad,\n        inst.rpad,\n        inst.builtin,\n        inst.address\n      )\n    );\n  }\n\n  do(test: Test) {\n    test.outputList(this.outputs);\n    test.header();\n  }\n}\n\nexport class TestCompoundInstruction implements TestInstruction {\n  protected readonly instructions: TestInstruction[] = [];\n  span?: Span;\n\n  addInstruction(instruction: TestInstruction) {\n    this.instructions.push(instruction);\n  }\n\n  async do(test: Test) {\n    for (const instruction of this.instructions) {\n      await instruction.do(test);\n    }\n  }\n}\n\nexport class TestRepeatInstruction extends TestCompoundInstruction {\n  constructor(public readonly repeat: number) {\n    super();\n  }\n\n  override async do(test: Test) {\n    for (let i = 0; i < this.repeat; i++) {\n      await super.do(test);\n    }\n  }\n}\n\nexport class Condition {\n  constructor(\n    public readonly x: string | number,\n    public readonly y: string | number,\n    public readonly op: \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"<>\"\n  ) {}\n\n  check(test: Test): boolean {\n    const x = test.hasVar(this.x) ? test.getVar(this.x) : this.x;\n    const y = test.hasVar(this.y) ? test.getVar(this.y) : this.y;\n\n    if (typeof x === \"string\" || typeof y === \"string\") {\n      switch (this.op) {\n        case \"=\":\n          return `${x}` === `${y}`;\n        case \"<>\":\n          return `${x}` !== `${y}`;\n      }\n    } else {\n      switch (this.op) {\n        case \"<\":\n          return x < y;\n        case \"<=\":\n          return x <= y;\n        case \">\":\n          return x > y;\n        case \">=\":\n          return x >= y;\n        case \"=\":\n          return x === y;\n        case \"<>\":\n          return x !== y;\n      }\n    }\n    return false;\n  }\n}\n\nexport class TestWhileInstruction extends TestCompoundInstruction {\n  constructor(public readonly condition: Condition) {\n    super();\n  }\n\n  override async do(test: Test) {\n    while (this.condition.check(test)) {\n      for (const instruction of this.instructions) {\n        await instruction.do(test);\n      }\n    }\n  }\n}\n\nexport class TestEchoInstruction implements TestInstruction {\n  constructor(public readonly content: string) {}\n  do(test: Test) {\n    test.echo(this.content);\n  }\n}\n\nexport class TestClearEchoInstruction implements TestInstruction {\n  do(test: Test) {\n    test.clearEcho();\n  }\n}\n\nexport class TestLoadROMInstruction implements TestInstruction {\n  constructor(readonly file: string) {}\n  async do(test: Test) {\n    await test.load(this.file);\n  }\n}\n\nexport class TestBreakpointInstruction implements TestInstruction {\n  constructor(readonly variable: string, readonly value: number) {}\n\n  do(test: Test) {\n    test.addBreakpoint(this.variable, this.value);\n  }\n}\n\nexport class TestClearBreakpointsInstruction implements TestInstruction {\n  do(test: Test) {\n    test.clearBreakpoints();\n  }\n}\n\nexport interface ChipTestInstruction extends TestInstruction {\n  _chipTestInstruction_: true;\n  do(test: ChipTest): Promise<void> | void;\n}\n\nexport class TestEvalInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.eval();\n  }\n}\n\nexport class TestTickInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.tick();\n  }\n}\n\nexport class TestTockInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.tock();\n  }\n}\n\nexport interface CPUTestInstruction extends TestInstruction {\n  _cpuTestInstruction_: true;\n  do(test: CPUTest): Promise<void> | void;\n}\n\nexport class TestTickTockInstruction implements CPUTestInstruction {\n  readonly _cpuTestInstruction_ = true;\n  do(test: CPUTest) {\n    test.ticktock();\n  }\n}\n\nexport interface VMTestInstruction extends TestInstruction {\n  _vmTestInstruction_: true;\n  do(test: VMTest): Promise<void> | void;\n}\n\nexport class TestVMStepInstruction implements VMTestInstruction {\n  readonly _vmTestInstruction_ = true;\n  do(test: VMTest) {\n    test.vmstep();\n  }\n}\n","import {\n  FileSystem,\n  LocalStorageFileSystemAdapter,\n} from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { createContext } from \"react\";\n\nexport const StorageContext = createContext(\n  new FileSystem(new LocalStorageFileSystemAdapter())\n);\n","import { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { display } from \"@davidsouther/jiffies/lib/esm/display\";\nimport { t } from \"@lingui/macro\";\nimport { Dispatch, MutableRefObject, useContext, useMemo, useRef } from \"react\";\n\nimport { HDL } from \"../../languages/hdl\";\nimport { TST } from \"../../languages/tst\";\nimport { build as buildChip } from \"../../simulator/chip/builder\";\nimport { getBuiltinChip } from \"../../simulator/chip/builtins/index\";\nimport { Low, Pin, Chip as SimChip, Chip } from \"../../simulator/chip/chip\";\nimport { Clock } from \"../../simulator/chip/clock\";\nimport { ChipTest } from \"../../simulator/tst\";\nimport { StorageContext } from \"../util/storage\";\nimport { AppContext } from \"../App.context\";\nimport { ImmPin, reducePins } from \"../components/pinout\";\nimport { REGISTRY } from \"../../simulator/chip/builtins\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs\";\nimport { Span } from \"../../languages/base\";\nimport { PROJECTS } from \"../../projects\";\nimport { useImmerReducer } from \"../util/react\";\n\nexport const PROJECT_NAMES = [\n  [\"01\", t`Project 1`],\n  [\"02\", t`Project 2`],\n  [\"03\", t`Project 3`],\n  [\"05\", t`Project 5`],\n];\n\nfunction dropdowns(storage: Record<string, string>) {\n  const project = (storage[\"/chip/project\"] as keyof typeof PROJECTS) ?? \"01\";\n  const chips = PROJECTS[project];\n  const chipName = storage[\"/chip/chip\"] ?? chips[0];\n  return { project, chips, chipName };\n}\n\nfunction makeHdl(name: string) {\n  return `CHIP ${name} {\n    IN in;\n    OUT out;\n    PARTS:\n  }`;\n}\n\nfunction makeTst() {\n  return `repeat 10 {\n      tick,\n      tock;\n    }`;\n}\n\nfunction makeCmp() {\n  return `| in|out|`;\n}\n\nexport interface ChipPageState {\n  files: Files;\n  sim: ChipSim;\n  controls: ControlsState;\n}\n\nexport interface ChipSim {\n  clocked: boolean;\n  inPins: ImmPin[];\n  outPins: ImmPin[];\n  internalPins: ImmPin[];\n  parts: Set<Chip>;\n  pending: boolean;\n  invalid: boolean;\n}\n\nexport interface Files {\n  hdl: string;\n  cmp: string;\n  tst: string;\n  out: string;\n}\n\nexport interface ControlsState {\n  project: keyof typeof PROJECTS;\n  chips: string[];\n  chipName: string;\n  hasBuiltin: boolean;\n  runningTest: boolean;\n  span?: Span;\n}\n\nfunction reduceChip(chip: SimChip, pending = false, invalid = false): ChipSim {\n  return {\n    clocked: chip.clocked,\n    inPins: reducePins(chip.ins),\n    outPins: reducePins(chip.outs),\n    internalPins: reducePins(chip.pins),\n    parts: new Set(chip.parts),\n    pending,\n    invalid,\n  };\n}\n\nconst clock = Clock.get();\n\nexport type ChipStoreDispatch = Dispatch<{\n  action: keyof ReturnType<typeof makeChipStore>[\"reducers\"];\n  payload?: {};\n}>;\n\nexport function makeChipStore(\n  fs: FileSystem,\n  setStatus: (status: string) => void,\n  storage: Record<string, string>,\n  dispatch: MutableRefObject<ChipStoreDispatch>\n) {\n  let { project, chips, chipName } = dropdowns(storage);\n  let chip = new Low();\n  let test = new ChipTest();\n\n  const initialState: ChipPageState = (() => {\n    const controls: ControlsState = {\n      project,\n      chips,\n      chipName,\n      hasBuiltin: REGISTRY.has(chipName),\n      runningTest: false,\n    };\n\n    let maybeChip = getBuiltinChip(controls.chipName);\n    if (isErr(maybeChip)) {\n      setStatus(display(Err(maybeChip)));\n    } else {\n      chip = Ok(maybeChip);\n    }\n\n    const sim = reduceChip(chip);\n\n    setTimeout(() => {\n      actions.reloadChip();\n    });\n\n    return {\n      controls,\n      files: {\n        hdl: \"\",\n        cmp: \"\",\n        tst: \"\",\n        out: \"\",\n      },\n      sim,\n    };\n  })();\n\n  const reducers = {\n    setFiles(\n      state: ChipPageState,\n      {\n        hdl = state.files.hdl,\n        tst = state.files.tst,\n        cmp = state.files.cmp,\n        out = \"\",\n      }: {\n        hdl?: string;\n        tst?: string;\n        cmp?: string;\n        out?: string;\n      }\n    ) {\n      state.files.hdl = hdl;\n      state.files.tst = tst;\n      state.files.cmp = cmp;\n      state.files.out = out;\n    },\n\n    updateChip(\n      state: ChipPageState,\n      payload?: { pending?: boolean; invalid?: boolean }\n    ) {\n      state.sim = reduceChip(chip, payload?.pending, payload?.invalid);\n      state.controls.chips = PROJECTS[state.controls.project];\n      state.controls.chipName = chip.name ?? chipName;\n      if (!state.controls.chips.includes(state.controls.chipName)) {\n        state.controls.chips = [\n          ...state.controls.chips,\n          state.controls.chipName,\n        ];\n      }\n    },\n\n    setProject(state: ChipPageState, project: keyof typeof PROJECTS) {\n      const chips = PROJECTS[project];\n      const chipName =\n        state.controls.chipName && chips.includes(state.controls.chipName)\n          ? state.controls.chipName\n          : chips[0];\n      state.controls.project = project;\n      state.controls.chips = chips;\n      this.setChip(state, chipName);\n    },\n\n    setChip(state: ChipPageState, chipName: string) {\n      state.controls.chipName = chipName;\n      state.controls.hasBuiltin = REGISTRY.has(chipName);\n    },\n\n    testRunning(state: ChipPageState) {\n      state.controls.runningTest = true;\n    },\n    testFinished(state: ChipPageState) {\n      state.controls.runningTest = false;\n    },\n    updateTestStep(state: ChipPageState) {\n      state.files.out = test?.log() ?? \"\";\n      state.controls.span = test?.currentStep?.span;\n      this.updateChip(state, {\n        pending: state.sim.pending,\n        invalid: state.sim.invalid,\n      });\n    },\n  };\n\n  const actions = {\n    setProject(p: keyof typeof PROJECTS) {\n      project = storage[\"/chip/project\"] = p;\n      dispatch.current({ action: \"setProject\", payload: project });\n      this.setChip(PROJECTS[project][0]);\n    },\n\n    setChip(chip: string, project = storage[\"/chip/project\"]) {\n      chipName = storage[\"/chip/chip\"] = chip;\n      dispatch.current({ action: \"setChip\", payload: chipName });\n      this.loadChip(project, chipName);\n    },\n\n    reset() {\n      Clock.get().reset();\n      chip.reset();\n      test.reset();\n      dispatch.current({ action: \"setFiles\", payload: {} });\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    updateFiles({ hdl, tst, cmp }: { hdl: string; tst: string; cmp: string }) {\n      dispatch.current({ action: \"setFiles\", payload: { hdl, tst, cmp } });\n      try {\n        this.compileChip(hdl);\n        this.compileTest(tst);\n      } catch (e) {\n        setStatus(display(e));\n      }\n    },\n\n    compileChip(hdl: string) {\n      chip.remove();\n      const maybeParsed = HDL.parse(hdl);\n      if (isErr(maybeParsed)) {\n        setStatus(\"Failed to parse chip\");\n        dispatch.current({ action: \"updateChip\", payload: { invalid: true } });\n        return;\n      }\n      const maybeChip = buildChip(Ok(maybeParsed));\n      if (isErr(maybeChip)) {\n        setStatus(display(Err(maybeChip)));\n        dispatch.current({ action: \"updateChip\", payload: { invalid: true } });\n        return;\n      }\n      setStatus(t`Compiled ${chip.name}`);\n      this.replaceChip(Ok(maybeChip));\n    },\n\n    replaceChip(nextChip: SimChip) {\n      // Store current inPins\n      const inPins = chip.ins;\n      for (const [pin, { busVoltage }] of inPins) {\n        if (nextChip.ins.has(pin)) {\n          nextChip.ins.get(pin)!.busVoltage = busVoltage;\n        }\n      }\n      clock.reset();\n      nextChip.eval();\n      chip = nextChip;\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    async loadChip(project: string, name: string) {\n      storage[\"/chip/chip\"] = name;\n      const fsName = (ext: string) =>\n        `/projects/${project}/${name}/${name}.${ext}`;\n\n      const [hdl, tst, cmp] = await Promise.all([\n        fs.readFile(fsName(\"hdl\")).catch(() => makeHdl(name)),\n        fs.readFile(fsName(\"tst\")).catch(() => makeTst()),\n        fs.readFile(fsName(\"cmp\")).catch(() => makeCmp()),\n      ]);\n\n      dispatch.current({ action: \"setFiles\", payload: { hdl, tst, cmp } });\n      this.compileChip(hdl);\n      this.compileTest(tst);\n    },\n\n    async saveChip(hdl: string, prj = project, name = chipName) {\n      dispatch.current({ action: \"setFiles\", payload: { hdl } });\n      const path = `/projects/${prj}/${name}/${name}.hdl`;\n      await fs.writeFile(path, hdl);\n      setStatus(`Saved ${path}`);\n    },\n\n    toggle(pin: Pin, i: number | undefined) {\n      if (i !== undefined) {\n        pin.busVoltage = pin.busVoltage ^ (1 << i);\n      } else {\n        if (pin.width === 1) {\n          pin.toggle();\n        } else {\n          pin.busVoltage += 1;\n        }\n      }\n      dispatch.current({ action: \"updateChip\", payload: { pending: true } });\n    },\n\n    eval() {\n      chip.eval();\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    clock() {\n      clock.toggle();\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    useBuiltin() {\n      const nextChip = getBuiltinChip(chipName);\n      if (isErr(nextChip)) {\n        setStatus(\n          `Failed to load builtin ${chipName}: ${display(Err(nextChip))}`\n        );\n        return;\n      }\n      this.replaceChip(Ok(nextChip));\n    },\n\n    reloadChip() {\n      this.loadChip(project, chipName);\n    },\n\n    compileTest(file: string) {\n      dispatch.current({ action: \"setFiles\", payload: { tst: file } });\n      const tst = TST.parse(file);\n\n      if (isErr(tst)) {\n        setStatus(t`Failed to parse test`);\n        return false;\n      }\n      setStatus(t`Parsed tst`);\n\n      test = ChipTest.from(Ok(tst)).with(chip);\n      test.setFileSystem(fs);\n      dispatch.current({ action: \"updateTestStep\" });\n      return true;\n    },\n\n    async runTest(file: string) {\n      if (!this.compileTest(file)) {\n        return;\n      }\n      dispatch.current({ action: \"testRunning\" });\n\n      fs.pushd(\"/samples\");\n      await test.run();\n      fs.popd();\n\n      dispatch.current({ action: \"updateTestStep\" });\n    },\n\n    async tick() {\n      await test.step();\n    },\n  };\n\n  return { initialState, reducers, actions };\n}\n\nexport function useChipPageStore() {\n  const fs = useContext(StorageContext);\n  const { setStatus } = useContext(AppContext);\n  const storage: Record<string, string> = useMemo(() => localStorage, []);\n\n  const dispatch = useRef<ChipStoreDispatch>(() => {});\n\n  const { initialState, reducers, actions } = useMemo(\n    () => makeChipStore(fs, setStatus, storage, dispatch),\n    [fs, setStatus, storage, dispatch]\n  );\n\n  const [state, dispatcher] = useImmerReducer(reducers, initialState);\n  dispatch.current = dispatcher;\n\n  return { state, dispatch, actions };\n}\n","import ohm from \"ohm-js\";\nimport raw from \"raw.macro\";\nimport { grammars, makeParser, baseSemantics } from \"./base\";\n\nexport type Cell = string;\nexport type Line = Cell[];\nexport type Cmp = Line[];\n\nexport const cmpGrammar = raw(\"./grammars/cmp.ohm\");\nexport const grammar = ohm.grammar(cmpGrammar, grammars);\nexport const cmpSemantics = grammar.extendSemantics(baseSemantics);\n\ncmpSemantics.addAttribute<Cell>(\"cell\", {\n  cell(value, _) {\n    return value.sourceString;\n  },\n});\n\ncmpSemantics.addAttribute<Line>(\"line\", {\n  line(_a, cells, _b) {\n    return cells.children.map((c) => c.cell);\n  },\n});\n\ncmpSemantics.addAttribute<Cmp>(\"root\", {\n  Root(lines) {\n    return lines.children.map((c) => c.line);\n  },\n});\n\nexport const CMP = {\n  grammar: cmpGrammar,\n  semantics: cmpSemantics,\n  parser: grammar,\n  parse: makeParser<Cmp>(grammar, cmpSemantics),\n};\n","import { Plural, Trans } from \"@lingui/macro\";\nimport { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result\";\nimport { display } from \"@davidsouther/jiffies/lib/esm/display\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range\";\nimport { CMP } from \"../../languages/cmp\";\n\nexport const DiffTable = ({\n  className = \"\",\n  out,\n  cmp,\n}: {\n  out: string;\n  cmp: string;\n  className?: string;\n}) => {\n  const output = CMP.parse(out);\n  const compare = CMP.parse(cmp);\n\n  if (isErr(output)) {\n    return (\n      <details>\n        <summary>\n          <Trans>Failed to parse output</Trans>\n        </summary>\n        <pre>{display(Err(output))}</pre>\n        <code>\n          <pre>{out}</pre>\n        </code>\n      </details>\n    );\n  }\n\n  if (isErr(compare)) {\n    return (\n      <details>\n        <summary>\n          <Trans>Failed to parse compare</Trans>\n        </summary>\n        <code>\n          <pre>{display(Err(compare))}</pre>\n          <pre>{cmp}</pre>\n        </code>\n      </details>\n    );\n  }\n\n  const cmpData = Ok(compare);\n  const outData = Ok(output);\n  let failures = 0;\n  const table = range(0, Math.max(cmpData.length, outData.length)).map((i) => {\n    const cmpI = cmpData[i] ?? [];\n    const outI = outData[i] ?? [];\n    return range(0, Math.max(cmpI.length, outI.length))\n      .map((_, j) => [cmpI[j] ?? \"\", outI[j] ?? \"\"])\n      .map(([cmp, out]) => {\n        const cell = {\n          cmp: cmp ?? '\"',\n          out: out ?? '\"',\n          pass:\n            cmp?.trim().match(/^\\*+$/) !== null || out?.trim() === cmp?.trim(),\n        };\n        if (!cell.pass) {\n          failures += 1;\n        }\n        return cell;\n      });\n  });\n\n  return (\n    <div className={\"scroll-x \" + className}>\n      <p>\n        <Plural\n          value={failures}\n          one={`${failures} failure`}\n          other={`${failures} failures`}\n        />\n      </p>\n      <table\n        style={{\n          fontFamily: \"var(--font-family-monospace)\",\n          marginBottom: \"none\",\n        }}\n      >\n        <tbody>\n          {table.map((row, i) => (\n            <tr key={i}>\n              {row.map(({ cmp, out, pass }, i) => (\n                <DiffCell cmp={cmp} out={out} pass={pass} key={i} />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst DiffCell = ({\n  cmp,\n  out,\n  pass,\n}: {\n  cmp: string;\n  out: string;\n  pass: boolean;\n}) => {\n  return pass ? (\n    <>\n      <td>{cmp}</td>\n      <td></td>\n    </>\n  ) : (\n    <>\n      <td>\n        <ins>{cmp}</ins>\n      </td>\n      <td>\n        <del>{out}</del>\n      </td>\n    </>\n  );\n};\n","import { debounce } from \"@davidsouther/jiffies/lib/esm/debounce\";\nimport { Trans } from \"@lingui/macro\";\nimport MonacoEditor, { useMonaco } from \"@monaco-editor/react\";\nimport * as monacoT from \"monaco-editor/esm/vs/editor/editor.api\";\nimport { OnMount } from \"@monaco-editor/react\";\nimport ohm from \"ohm-js\";\nimport {\n  CSSProperties,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { AppContext } from \"../App.context\";\n\nimport { Span, UNKNOWN_PARSE_ERROR } from \"../../languages/base\";\n\nimport \"./editor.scss\";\n\nexport const ErrorPanel = ({ error }: { error?: ohm.MatchResult }) => {\n  return error?.failed() ? (\n    <details className=\"ErrorPanel\" open>\n      <summary role=\"button\" className=\"secondary\">\n        <Trans>Parse Error</Trans>\n      </summary>\n      <pre>\n        <code>\n          {error?.message ?? error?.shortMessage ?? UNKNOWN_PARSE_ERROR}\n        </code>\n      </pre>\n    </details>\n  ) : (\n    <></>\n  );\n};\n\nconst Textarea = ({\n  value,\n  onChange,\n  language,\n  disabled = false,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n  language: string;\n  disabled?: boolean;\n}) => {\n  const [text, setText] = useState(value);\n  return (\n    <textarea\n      data-testid={`editor-${language}`}\n      disabled={disabled}\n      value={text}\n      onChange={(e) => {\n        const value = e.target?.value;\n        setText(value);\n        onChange(value);\n      }}\n    />\n  );\n};\n\nconst Monaco = ({\n  value,\n  onChange,\n  language,\n  error,\n  disabled = false,\n  highlight,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n  language: string;\n  error?: ohm.MatchResult | undefined;\n  disabled?: boolean;\n  highlight?: Span;\n}) => {\n  const { theme } = useContext(AppContext);\n  const monaco = useMonaco();\n\n  const editor = useRef<monacoT.editor.IStandaloneCodeEditor>();\n  const decorations = useRef<string[]>([]);\n\n  // Set options when mounting\n  const onMount: OnMount = useCallback((ed) => {\n    editor.current = ed;\n    editor.current?.updateOptions({\n      fontFamily: `\"JetBrains Mono\", source-code-pro, Menlo, Monaco,\n      Consolas, \"Roboto Mono\", \"Ubuntu Monospace\", \"Noto Mono\", \"Oxygen Mono\",\n      \"Liberation Mono\", monospace, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\", \"Noto Color Emoji\"`,\n      fontSize: 16,\n      minimap: {\n        enabled: false,\n      },\n      scrollBeyondLastLine: false,\n    });\n  }, []);\n\n  // Mark and center highlighted spans\n  useEffect(() => {\n    if (!editor.current) return;\n    const model = editor.current.getModel();\n    const nextDecoration: monacoT.editor.IModelDeltaDecoration[] = [];\n    if (model && highlight) {\n      const start = model.getPositionAt(highlight.start);\n      const end = model.getPositionAt(highlight.end);\n      const range = monaco?.Range.fromPositions(start, end);\n      if (range) {\n        nextDecoration.push({\n          range,\n          options: { inlineClassName: \"highlight\" },\n        });\n        editor.current.revealRangeInCenter(range);\n      }\n    }\n    decorations.current = editor.current.deltaDecorations(\n      decorations.current,\n      nextDecoration\n    );\n  }, [editor, highlight, monaco]);\n\n  // Set themes\n  useEffect(() => {\n    const isDark =\n      theme === \"system\"\n        ? window.matchMedia(\"prefers-color-scheme: dark\").matches\n        : theme === \"dark\";\n    editor.current?.updateOptions({\n      theme: isDark ? \"vs-dark\" : \"vs\",\n    });\n  }, [editor, theme]);\n\n  // Prevent editing disabled editors\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    editor.current.updateOptions({ readOnly: disabled });\n  }, [editor, disabled]);\n\n  // Add error markers on parse failure\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    if (monaco === null) return;\n    const model = editor.current.getModel();\n    if (model === null) return;\n    if (error === undefined || error.succeeded()) {\n      monaco.editor.setModelMarkers(model, language, []);\n      return;\n    }\n    // Line 7, col 5:\n    const { line, column, message } =\n      /Line (?<line>\\d+), col (?<column>\\d+): (?<message>.*)/.exec(\n        error.shortMessage ?? \"\"\n      )?.groups ?? { line: 1, column: 1, message: \"could not parse error\" };\n    const startLineNumber = Number(line);\n    const endLineNumber = startLineNumber;\n    const startColumn = Number(column);\n    const restOfLine = model\n      .getLineContent(startLineNumber)\n      .substring(startColumn - 1);\n    let endColumn =\n      startColumn + (restOfLine.match(/([^\\s]+)/)?.[0].length ?? 1);\n    if (endColumn <= startColumn) {\n      endColumn = startColumn + 1;\n    }\n\n    monaco.editor.setModelMarkers(model, language, [\n      {\n        message,\n        startColumn,\n        startLineNumber,\n        endColumn,\n        endLineNumber,\n        severity: monacoT.MarkerSeverity.Error,\n      },\n    ]);\n  }, [error, editor, monaco, language]);\n\n  return (\n    <>\n      <MonacoEditor\n        value={value}\n        onChange={(v = \"\") => onChange(v)}\n        language={language}\n        onMount={onMount}\n      />\n      {disabled && <div className=\"overlay\" />}\n    </>\n  );\n};\n\nexport const Editor = ({\n  className = \"\",\n  style = {},\n  disabled = false,\n  value,\n  onChange,\n  grammar,\n  language,\n  highlight,\n}: {\n  className?: string;\n  style?: CSSProperties;\n  disabled?: boolean;\n  value: string;\n  onChange: (source: string) => void;\n  grammar: ohm.Grammar;\n  language: string;\n  highlight?: Span;\n}) => {\n  const [error, setError] = useState<ohm.MatchResult>();\n  const { monaco } = useContext(AppContext);\n\n  const parse = useCallback(\n    (text: string = \"\") => {\n      const parsed = grammar.match(text);\n      setError(parsed.failed() ? parsed : undefined);\n    },\n    [setError, grammar]\n  );\n\n  useEffect(() => parse(value), [parse, value]);\n  const doParse = useMemo(() => debounce(parse, 500), [parse]);\n\n  const onChangeCB = useCallback(\n    (text: string = \"\") => {\n      onChange(text);\n      doParse(text);\n    },\n    [doParse, onChange]\n  );\n\n  return (\n    <div className={`Editor ${className}`} style={style}>\n      {monaco.canUse && monaco.wants ? (\n        <Monaco\n          value={value}\n          onChange={onChangeCB}\n          language={language}\n          error={error}\n          disabled={disabled}\n          highlight={highlight}\n        />\n      ) : (\n        <>\n          <Textarea\n            value={value}\n            onChange={onChangeCB}\n            language={language}\n            disabled={disabled}\n          />\n          <ErrorPanel error={error} />\n        </>\n      )}\n    </div>\n  );\n};\n","import { Dispatch, MutableRefObject, useMemo, useRef } from \"react\";\nimport { useImmerReducer } from \"../app/util/react\";\n\nexport const MAX_STEPS = 1000;\n\nexport abstract class Timer {\n  frame() {\n    this.tick();\n    this.finishFrame();\n  }\n\n  abstract tick(): void;\n\n  abstract finishFrame(): void;\n\n  abstract reset(): void;\n\n  abstract toggle(): void;\n\n  steps = 1; // How many steps to take per update\n  speed = 1000; // how often to update, in ms\n  get running() {\n    return this.#running;\n  }\n\n  #running = false;\n  #sinceLastFrame = 0;\n  #lastUpdate = 0;\n  #run = () => {\n    if (!this.#running) {\n      return;\n    }\n    const now = Date.now();\n    const delta = now - this.#lastUpdate;\n    this.#lastUpdate = now;\n    this.#sinceLastFrame += delta;\n    if (this.#sinceLastFrame > this.speed) {\n      for (let i = 0; i < Math.min(this.steps, MAX_STEPS); i++) {\n        this.tick();\n      }\n      this.finishFrame();\n      this.#sinceLastFrame -= this.speed;\n    }\n    requestAnimationFrame(this.#run);\n  };\n\n  start() {\n    this.#running = true;\n    this.#lastUpdate = Date.now() - this.speed;\n    this.#run();\n    this.toggle();\n  }\n\n  stop() {\n    this.#running = false;\n    this.toggle();\n  }\n}\n\nexport interface TimerStoreState {\n  steps: number;\n  speed: number;\n  running: boolean;\n}\n\nexport type TimerStoreDispatch = Dispatch<{\n  action: keyof ReturnType<typeof makeTimerStore>[\"reducers\"];\n  payload?: {};\n}>;\n\nconst makeTimerStore = (\n  timer: Timer,\n  dispatch: MutableRefObject<TimerStoreDispatch>\n) => {\n  const initialState: TimerStoreState = {\n    running: timer.running,\n    speed: timer.speed,\n    steps: timer.steps,\n  };\n\n  const finishFrame = timer.finishFrame.bind(timer);\n  timer.finishFrame = function () {\n    finishFrame();\n    dispatch.current({ action: \"update\" });\n  };\n\n  const reducers = {\n    update(state: TimerStoreState) {\n      state.running = timer.running;\n      state.speed = timer.speed;\n      state.steps = timer.steps;\n    },\n    setSteps(state: TimerStoreState, steps: number) {\n      state.steps = steps;\n    },\n    setSpeed(state: TimerStoreState, speed: number) {\n      state.speed = speed;\n    },\n  };\n\n  const actions = {\n    frame() {\n      timer.frame();\n    },\n    start() {\n      timer.start();\n      dispatch.current({ action: \"update\" });\n    },\n    stop() {\n      timer.stop();\n      dispatch.current({ action: \"update\" });\n    },\n    reset() {\n      timer.reset();\n      dispatch.current({ action: \"update\" });\n    },\n  };\n\n  return { initialState, reducers, actions };\n};\n\nexport function useTimer(timer: Timer) {\n  const dispatch = useRef<TimerStoreDispatch>(() => {});\n\n  const { initialState, reducers, actions } = useMemo(\n    () => makeTimerStore(timer, dispatch),\n    [timer, dispatch]\n  );\n\n  const [state, dispatcher] = useImmerReducer(reducers, initialState);\n\n  dispatch.current = dispatcher;\n\n  return { state, dispatch: dispatch.current, actions };\n}\n","import { ReactNode } from \"react\";\nimport { t } from \"@lingui/macro\";\nimport { Timer, useTimer } from \"../../simulator/timer\";\nimport { Icon } from \"./pico/icon\";\n\nimport \"./pico/tooltip.scss\";\n\nexport const Runbar = (props: { runner: Timer; children?: ReactNode }) => {\n  const runner = useTimer(props.runner);\n  return (\n    <fieldset role=\"group\">\n      <button\n        className=\"flex-0\"\n        onClick={() => runner.actions.frame()}\n        data-tooltip={t`Step`}\n        data-placement=\"bottom\"\n      >\n        <Icon name=\"play_arrow\"></Icon>\n      </button>\n      <button\n        className=\"flex-0\"\n        onClick={() =>\n          runner.state.running ? runner.actions.stop() : runner.actions.start()\n        }\n        data-tooltip={runner.state.running ? t`Pause` : t`Play`}\n        data-placement=\"bottom\"\n      >\n        <Icon name={runner.state.running ? \"pause\" : \"fast_forward\"}></Icon>\n      </button>\n      <button\n        className=\"flex-0\"\n        onClick={() => runner.actions.reset()}\n        data-tooltip={t`Reset`}\n        data-placement=\"bottom\"\n      >\n        <Icon name=\"fast_rewind\"></Icon>\n      </button>\n      <select\n        className=\"flex-1\"\n        name=\"speed\"\n        value={runner.state.speed}\n        onChange={(e) => {\n          runner.dispatch({\n            action: \"setSpeed\",\n            payload: Number(e.target?.value ?? runner.state.speed),\n          });\n        }}\n        disabled={runner.state.running}\n      >\n        {[\n          [16, t`60FPS`],\n          [500, t`Fast`],\n          [1000, t`Normal`],\n          [2000, t`Slow`],\n        ].map(([speed, label]) => (\n          <option key={speed} value={speed}>\n            {label}\n          </option>\n        ))}\n      </select>\n      <select\n        className=\"flex-1\"\n        name=\"steps\"\n        value={runner.state.steps}\n        onChange={(e) => {\n          runner.dispatch({\n            action: \"setSteps\",\n            payload: Number(e.target?.value ?? runner.state.steps),\n          });\n        }}\n        disabled={runner.state.running}\n      >\n        {[\n          [1, t`1 Step`],\n          [500, \"500\"],\n          [1000, \"1000\"],\n          [2000, \"2000\"],\n        ].map(([steps, label]) => (\n          <option key={steps} value={steps}>\n            {label}\n          </option>\n        ))}\n      </select>\n      {props.children}\n    </fieldset>\n  );\n};\n","import { useClockface } from \"../../simulator/chip/clock\";\n\nexport const Clockface = () => {\n  const clockface = useClockface();\n  return <span style={{ whiteSpace: \"nowrap\" }}>{clockface}</span>;\n};\n","import {\n  CSSProperties,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Trans } from \"@lingui/macro\";\n\nimport \"./chip.scss\";\n\nimport { FullPinout } from \"../components/pinout\";\nimport { Files, PROJECT_NAMES, useChipPageStore } from \"./chip.store\";\nimport { DiffTable } from \"../components/difftable\";\nimport { Editor } from \"../components/editor\";\nimport { HDL } from \"../../languages/hdl\";\nimport { TST } from \"../../languages/tst\";\nimport { CMP } from \"../../languages/cmp\";\nimport { Accordian, Panel } from \"../components/shell/panel\";\nimport { Runbar } from \"../components/runbar\";\nimport { Timer } from \"../../simulator/timer\";\nimport { useStateInitializer } from \"../util/react\";\nimport { Clockface } from \"../components/clockface\";\nimport { PROJECTS } from \"../../projects\";\n\nexport const Chip = () => {\n  const { state, actions, dispatch } = useChipPageStore();\n\n  const [hdl, setHdl] = useStateInitializer(state.files.hdl);\n  const [tst, setTst] = useStateInitializer(state.files.tst);\n  const [cmp, setCmp] = useStateInitializer(state.files.cmp);\n  const [out] = useStateInitializer(state.files.out);\n\n  const saveChip = () => {\n    actions.saveChip(hdl);\n  };\n\n  const compile = useRef<(files?: Partial<Files>) => void>(() => {});\n  compile.current = async (files: Partial<Files> = {}) => {\n    await actions.updateFiles({\n      hdl: files.hdl ?? hdl,\n      tst: files.tst ?? tst,\n      cmp: files.cmp ?? cmp,\n    });\n  };\n\n  const runner = useRef<Timer>();\n  useEffect(() => {\n    runner.current = new (class ChipTimer extends Timer {\n      async reset(): Promise<void> {\n        await compile.current();\n        await actions.reset();\n      }\n\n      finishFrame(): void {\n        dispatch.current({ action: \"updateTestStep\" });\n      }\n\n      async tick(): Promise<void> {\n        actions.tick();\n      }\n\n      toggle(): void {\n        dispatch.current({ action: \"updateTestStep\" });\n      }\n    })();\n\n    return () => {\n      runner.current?.stop();\n    };\n  }, [compile, actions, dispatch]);\n\n  const clockActions = useMemo(\n    () => ({\n      toggle() {\n        actions.clock();\n      },\n      reset() {\n        actions.reset();\n      },\n    }),\n    [actions]\n  );\n\n  const [useBuiltin, setUseBuiltin] = useState(false);\n  const toggleUseBuiltin = async () => {\n    if (useBuiltin) {\n      compile.current();\n      setUseBuiltin(false);\n    } else {\n      actions.useBuiltin();\n      setUseBuiltin(true);\n    }\n  };\n\n  const selectors = (\n    <>\n      <fieldset role=\"group\">\n        <select\n          value={state.controls.project}\n          onChange={({ target: { value } }) => {\n            actions.setProject(value as keyof typeof PROJECTS);\n          }}\n          data-testid=\"project-picker\"\n        >\n          {PROJECT_NAMES.map(([number, label]) => (\n            <option key={number} value={number}>\n              {label}\n            </option>\n          ))}\n        </select>\n        <select\n          value={state.controls.chipName}\n          onChange={({ target: { value } }) => {\n            actions.setChip(value);\n          }}\n          data-testid=\"chip-picker\"\n        >\n          {state.controls.chips.map((chip) => (\n            <option key={chip} value={chip}>\n              {chip}\n            </option>\n          ))}\n        </select>\n        <button className=\"flex-0\" onClick={saveChip} disabled={useBuiltin}>\n          <Trans>Save</Trans>\n        </button>\n      </fieldset>\n    </>\n  );\n  const hdlPanel = (\n    <Panel\n      className=\"_hdl_panel\"\n      header={\n        <>\n          <div tabIndex={0}>HDL</div>\n          <fieldset>\n            {state.controls.hasBuiltin && (\n              <label>\n                <input\n                  type=\"checkbox\"\n                  role=\"switch\"\n                  checked={useBuiltin}\n                  onChange={toggleUseBuiltin}\n                />\n                <Trans>Builtin</Trans>\n              </label>\n            )}\n          </fieldset>\n          {selectors}\n        </>\n      }\n    >\n      <Editor\n        className=\"flex-1\"\n        value={hdl}\n        onChange={(source) => {\n          setHdl(source);\n          compile.current({ hdl: source });\n        }}\n        grammar={HDL.parser}\n        language={\"hdl\"}\n        disabled={useBuiltin}\n      />\n    </Panel>\n  );\n\n  const chipButtons = (\n    <fieldset role=\"group\">\n      <button\n        onClick={actions.eval}\n        onKeyDown={actions.eval}\n        disabled={!state.sim.pending}\n      >\n        <Trans>Eval</Trans>\n      </button>\n      <button\n        onClick={clockActions.toggle}\n        style={{ maxWidth: \"initial\" }}\n        disabled={!state.sim.clocked}\n      >\n        <Trans>Clock</Trans>:{\"\\u00a0\"}\n        <Clockface />\n      </button>\n      <button\n        onClick={clockActions.reset}\n        style={{ maxWidth: \"initial\" }}\n        disabled={!state.sim.clocked}\n      >\n        <Trans>Reset</Trans>\n      </button>\n    </fieldset>\n  );\n\n  const visualizations: [string, ReactNode][] = [...state.sim.parts].flatMap(\n    (part) =>\n      part.render().map((v, i) => [`${part.id}_${i}`, v] as [string, ReactNode])\n  );\n\n  const pinsPanel = (\n    <Panel\n      className=\"_parts_panel\"\n      header={\n        <>\n          <div>\n            <Trans>Chip</Trans>\n          </div>\n          {chipButtons}\n        </>\n      }\n    >\n      {state.sim.invalid ? (\n        <Trans>Invalid Chip</Trans>\n      ) : (\n        <>\n          <FullPinout sim={state.sim} toggle={actions.toggle} />\n          {visualizations.length > 0 && (\n            <Accordian summary={<Trans>Visualizations</Trans>} open={true}>\n              <main>\n                {visualizations.map(([p, v]) => (\n                  <div key={p}>{v}</div>\n                ))}\n              </main>\n            </Accordian>\n          )}\n        </>\n      )}\n    </Panel>\n  );\n\n  const [selectedTestTab, setSelectedTestTab] = useState<\"tst\" | \"cmp\" | \"out\">(\n    \"tst\"\n  );\n\n  const testPanel = (\n    <Panel\n      className=\"_test_panel\"\n      header={\n        <>\n          <div className=\"flex-1\">\n            <Trans>Test</Trans>\n          </div>\n          <div className=\"flex-2\">\n            {runner.current && <Runbar runner={runner.current} />}\n          </div>\n        </>\n      }\n    >\n      <div role=\"tablist\" style={{ \"--tab-count\": \"3\" } as CSSProperties}>\n        <div\n          role=\"tab\"\n          id=\"test-tab-tst\"\n          aria-controls=\"test-tabpanel-tst\"\n          aria-selected={selectedTestTab === \"tst\"}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              name=\"test-tabs\"\n              aria-controls=\"test-tabpanel-tst\"\n              value=\"tst\"\n              checked={selectedTestTab === \"tst\"}\n              onChange={() => setSelectedTestTab(\"tst\")}\n            />\n            Test Script\n          </label>\n        </div>\n        <div\n          role=\"tabpanel\"\n          aria-labelledby=\"test-tab-tst\"\n          id=\"test-tabpanel-tst\"\n        >\n          <Editor\n            value={tst}\n            onChange={setTst}\n            grammar={TST.parser}\n            language={\"tst\"}\n            highlight={state.controls.span}\n          />\n        </div>\n        <div\n          role=\"tab\"\n          id=\"test-tab-cmp\"\n          aria-controls=\"test-tablpanel-cmp\"\n          aria-selected={selectedTestTab === \"cmp\"}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              name=\"test-tabs\"\n              aria-controls=\"test-tabpanel-cmp\"\n              value=\"cmp\"\n              checked={selectedTestTab === \"cmp\"}\n              onChange={() => setSelectedTestTab(\"cmp\")}\n            />\n            Compare File\n          </label>\n        </div>\n        <div\n          role=\"tabpanel\"\n          aria-labelledby=\"test-tab-cmp\"\n          id=\"test-tabpanel-cmp\"\n          style={{ position: \"relative\" }}\n        >\n          <Editor\n            value={cmp}\n            onChange={setCmp}\n            grammar={CMP.parser}\n            language={\"cmp\"}\n          />\n        </div>\n        <div\n          role=\"tab\"\n          id=\"test-tab-out\"\n          aria-controls=\"test-tabpanel-out\"\n          aria-selected={selectedTestTab === \"out\"}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              name=\"test-tabs\"\n              aria-controls=\"test-tabpanel-out\"\n              value=\"out\"\n              checked={selectedTestTab === \"out\"}\n              onChange={() => setSelectedTestTab(\"out\")}\n            />\n            Output File\n          </label>\n        </div>\n        <div\n          role=\"tabpanel\"\n          id=\"test-tabpanel-out\"\n          aria-labelledby=\"test-tab-out\"\n        >\n          <DiffTable cmp={cmp} out={out} />\n        </div>\n      </div>\n    </Panel>\n  );\n\n  return (\n    <div className=\"ChipPage grid\">\n      {hdlPanel}\n      {pinsPanel}\n      {testPanel}\n    </div>\n  );\n};\n\nexport default Chip;\n","export type COMMANDS_ASM =\n  | \"0\"\n  | \"1\"\n  | \"-1\"\n  | \"D\"\n  | \"A\"\n  | \"M\"\n  | \"!D\"\n  | \"!A\"\n  | \"-D\"\n  | \"-A\"\n  | \"D+1\"\n  | \"A+1\"\n  | \"D-1\"\n  | \"A-1\"\n  | \"D+A\"\n  | \"D-A\"\n  | \"D-M\"\n  | \"A-D\"\n  | \"D&A\"\n  | \"D&M\"\n  | \"D|A\"\n  | \"D|M\";\n\nexport type COMMANDS_OP =\n  | 0b101010\n  | 0b111111\n  | 0b111010\n  | 0b001100\n  | 0b110000\n  | 0b110000\n  | 0b001101\n  | 0b110001\n  | 0b001111\n  | 0b110011\n  | 0b011111\n  | 0b110111\n  | 0b001110\n  | 0b110010\n  | 0b000010\n  | 0b010011\n  | 0b010011\n  | 0b000111\n  | 0b000000\n  | 0b000000\n  | 0b010101\n  | 0b010101;\n\nexport const COMMANDS: {\n  asm: Record<COMMANDS_ASM, COMMANDS_OP>;\n  op: Record<COMMANDS_OP, COMMANDS_ASM>;\n} = {\n  asm: {\n    \"0\": 0b101010, // 42 0x2A\n    \"1\": 0b111111, // 63 0x3F\n    \"-1\": 0b111010, // 58 0x3A\n    D: 0b001100, // 12 0x0C\n    A: 0b110000, // 48 0x30\n    M: 0b110000, // 48 0x30\n    \"!D\": 0b001101, // 13 0x0D\n    \"!A\": 0b110001, // 49 0x31\n    \"-D\": 0b001111, // 15 0x0F\n    \"-A\": 0b110011, // 51 0x33\n    \"D+1\": 0b011111, // 31 0x1F\n    \"A+1\": 0b110111, // 55 0x37\n    \"D-1\": 0b001110, // 14 0x0E\n    \"A-1\": 0b110010, // 50 0x32\n    \"D+A\": 0b000010, //  2 0x02\n    \"D-A\": 0b010011, // 19 0x13\n    \"D-M\": 0b010011, // 19 0x13\n    \"A-D\": 0b000111, //  7 0x07\n    \"D&A\": 0b000000, //  0 0x00\n    \"D&M\": 0b000000, //  0 0x00\n    \"D|A\": 0b010101, // 21 0x15\n    \"D|M\": 0b010101, // 21 0x15\n  },\n  op: {\n    0x2a: \"0\",\n    0x3f: \"1\",\n    0x3a: \"-1\",\n    0x0c: \"D\",\n    0x30: \"A\",\n    0x0d: \"!D\",\n    0x31: \"!A\",\n    0x0f: \"-D\",\n    0x33: \"-A\",\n    0x1f: \"D+1\",\n    0x37: \"A+1\",\n    0x0e: \"D-1\",\n    0x32: \"A-1\",\n    0x02: \"D+A\",\n    0x13: \"D-A\",\n    0x07: \"A-D\",\n    0x00: \"D&A\",\n    0x15: \"D|A\",\n  },\n};\n\nexport type ASSIGN_ASM = \"\" | \"M\" | \"D\" | \"MD\" | \"A\" | \"AM\" | \"AD\" | \"AMD\";\nexport type ASSIGN_OP = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\nexport const ASSIGN: {\n  asm: Record<ASSIGN_ASM, ASSIGN_OP>;\n  op: Record<ASSIGN_OP, ASSIGN_ASM>;\n} = {\n  asm: {\n    \"\": 0x0,\n    M: 0b001,\n    D: 0b010,\n    MD: 0b011,\n    A: 0b100,\n    AM: 0b101,\n    AD: 0b110,\n    AMD: 0b111,\n  },\n  op: {\n    0x0: \"\",\n    0x1: \"M\",\n    0x2: \"D\",\n    0x3: \"MD\",\n    0x4: \"A\",\n    0x5: \"AM\",\n    0x6: \"AD\",\n    0x7: \"AMD\",\n  },\n};\n\nexport type JUMP_ASM =\n  | \"\"\n  | \"JGT\"\n  | \"JEQ\"\n  | \"JGE\"\n  | \"JLT\"\n  | \"JNE\"\n  | \"JLE\"\n  | \"JMP\";\nexport type JUMP_OP = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\nexport const JUMP: {\n  asm: Record<JUMP_ASM, JUMP_OP>;\n  op: Record<JUMP_OP, JUMP_ASM>;\n} = {\n  asm: {\n    \"\": 0b0,\n    JGT: 0b001,\n    JEQ: 0b010,\n    JGE: 0b011,\n    JLT: 0b100,\n    JNE: 0b101,\n    JLE: 0b110,\n    JMP: 0b111,\n  },\n  op: {\n    0x0: \"\",\n    0x1: \"JGT\",\n    0x2: \"JEQ\",\n    0x3: \"JGE\",\n    0x4: \"JLT\",\n    0x5: \"JNE\",\n    0x6: \"JLE\",\n    0x7: \"JMP\",\n  },\n};\n\nexport const Flags = {\n  0x01: \"Positive\",\n  0x00: \"Zero\",\n  0x0f: \"Negative\",\n  Positive: 0x01,\n  Zero: 0x00,\n  Negative: 0x0f,\n};\n\nexport function alu(op: number, d: number, a: number): [number, number] {\n  let o = 0;\n  switch (op) {\n    case 0x2a:\n      o = 0;\n      break;\n    case 0x3f:\n      o = 1;\n      break;\n    case 0x3a:\n      o = -1;\n      break;\n    case 0x0c:\n      o = d;\n      break;\n    case 0x30:\n      o = a;\n      break;\n    case 0x0d:\n      o = ~d;\n      break;\n    case 0x31:\n      o = ~a;\n      break;\n    case 0x0f:\n      o = -d;\n      break;\n    case 0x33:\n      o = -a;\n      break;\n    case 0x1f:\n      o = d + 1;\n      break;\n    case 0x37:\n      o = a + 1;\n      break;\n    case 0x0e:\n      o = d - 1;\n      break;\n    case 0x32:\n      o = a - 1;\n      break;\n    case 0x02:\n      o = d + a;\n      break;\n    case 0x13:\n      o = d - a;\n      break;\n    case 0x07:\n      o = a - d;\n      break;\n    case 0x00:\n      o = d & a;\n      break;\n    case 0x15:\n      o = d | a;\n      break;\n  }\n\n  o = o & 0xffff;\n  const flags =\n    o === 0 ? Flags.Zero : o & 0x8000 ? Flags.Negative : Flags.Positive;\n  return [o, flags];\n}\n","import {\n  ASSIGN,\n  ASSIGN_ASM,\n  ASSIGN_OP,\n  COMMANDS,\n  COMMANDS_ASM,\n  COMMANDS_OP,\n  JUMP,\n  JUMP_ASM,\n  JUMP_OP,\n} from \"../simulator/cpu/alu\";\n\nexport type CommandOps = keyof typeof COMMANDS.op;\nexport type JumpOps = keyof typeof JUMP.op;\nexport type StoreOps = keyof typeof ASSIGN.op;\n\nexport function asm(op: number): string {\n  if (op & 0x8000) {\n    return cInstruction(op);\n  }\n  return aInstruction(op);\n}\n\nfunction cInstruction(op: number): string {\n  op = op & 0xffff; // Clear high order bits\n  const mop = (op & 0x1000) >> 12;\n  let cop: CommandOps = ((op & 0b0000111111000000) >> 6) as CommandOps;\n  let sop: StoreOps = ((op & 0b0000000000111000) >> 3) as StoreOps;\n  let jop: JumpOps = (op & 0b0000000000000111) as JumpOps;\n\n  if (COMMANDS.op[cop] === undefined) {\n    // Invalid commend\n    return \"#ERR\";\n  }\n\n  let command = COMMANDS.op[cop];\n  if (mop) {\n    command = command.replace(/A/g, \"M\") as COMMANDS_ASM;\n  }\n\n  const store = ASSIGN.op[sop];\n  const jump = JUMP.op[jop];\n\n  let instruction: string = command;\n  if (store) {\n    instruction = `${store}=${instruction}`;\n  }\n  if (jump) {\n    instruction = `${instruction};${jump}`;\n  }\n\n  return instruction;\n}\n\nfunction aInstruction(op: number): string {\n  return \"@\" + (op & 0x7fff).toString(10);\n}\n\nexport function op(asm: string): number {\n  if (asm[0] === \"@\") {\n    return aop(asm);\n  } else {\n    return cop(asm);\n  }\n}\n\nfunction aop(asm: string): number {\n  return parseInt(asm.substring(1), 10);\n}\n\nfunction cop(asm: string): number {\n  let parts = asm.match(\n    /(?:(?<assign>[AMD]{1,3})=)?(?<operation>[-!01ADM&|]{1,3})(?:;(?<jump>JGT|JLT|JGE|JLE|JEQ|JMP))?/\n  );\n  const { assign, operation, jump } = parts?.groups ?? {};\n  const mode = operation.includes(\"M\") || assign.includes(\"M\");\n  const aop = ASSIGN.asm[(assign as ASSIGN_ASM) ?? \"\"];\n  const jop = JUMP.asm[(jump as JUMP_ASM) ?? \"\"];\n  const cop = COMMANDS.asm[(operation as COMMANDS_ASM) ?? \"\"];\n\n  return makeC(mode, cop, aop, jop);\n}\n\nexport function makeC(\n  isM: boolean,\n  op: COMMANDS_OP,\n  assign: ASSIGN_OP = 0,\n  jmp: JUMP_OP = 0\n): number {\n  const C = 0xe000;\n  const A = isM ? 0x1000 : 0;\n  const O = op << 6;\n  const D = (assign ?? 0) << 3;\n  const J = jmp ?? 0;\n  return C + A + O + D + J;\n}\n","const Hex = [\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n];\n\nexport function chars(i: number): string {\n  return Hex[i] ?? \"X\";\n}\n\nexport function bits(i: number): string {\n  switch (i) {\n    case 0x0:\n      return \"0000\";\n    case 0x1:\n      return \"0001\";\n    case 0x2:\n      return \"0010\";\n    case 0x3:\n      return \"0011\";\n    case 0x4:\n      return \"0100\";\n    case 0x5:\n      return \"0101\";\n    case 0x6:\n      return \"0110\";\n    case 0x7:\n      return \"0111\";\n    case 0x8:\n      return \"1000\";\n    case 0x9:\n      return \"1001\";\n    case 0xa:\n      return \"1010\";\n    case 0xb:\n      return \"1011\";\n    case 0xc:\n      return \"1100\";\n    case 0xd:\n      return \"1101\";\n    case 0xe:\n      return \"1110\";\n    case 0xf:\n      return \"1111\";\n    default:\n      return \"erro\";\n  }\n}\n\nexport function int(n: string, radix: number): number {\n  let i = parseInt(n.replace(/[^\\d+-.xa-fA-F]/g, \"\"), radix);\n  return i & 0xffff;\n}\n\nexport function int16(i: string): number {\n  return int(i, 16);\n}\n\nexport function int10(i: string): number {\n  return int(i, 10);\n}\n\nexport function int2(i: string): number {\n  return int(i, 2);\n}\n\nexport function hex(i: number): string {\n  const hu = chars((i & 0xf000) >> 12);\n  const hl = chars((i & 0x0f00) >> 8);\n  const lu = chars((i & 0x00f0) >> 4);\n  const ll = chars(i & 0x000f);\n\n  return `0x${hu}${hl}${lu}${ll}`;\n}\n\nexport function bin(i: number, precision = 16): string {\n  const hu = bits((i & 0xf000) >> 12);\n  const hl = bits((i & 0x0f00) >> 8);\n  const lu = bits((i & 0x00f0) >> 4);\n  const ll = bits(i & 0x000f);\n\n  // return `${hu} ${hl} ${lu} ${ll}`;\n  return `${hu}${hl}${lu}${ll}`.substring(16 - precision); // Match the book's formatting\n}\n\nexport function dec(i: number): string {\n  i = i & 0xffff;\n  if (i === 0x8000) {\n    return \"-32768\";\n  }\n  if (i & 0x8000) {\n    i = (~i + 1) & 0x7fff;\n    return `-${i}`;\n  }\n  return `${i}`;\n}\n\nexport function uns(i: number): string {\n  i = i & 0xffff;\n  return `${i}`;\n}\n\nexport function nand16(a: number, b: number): number {\n  a = a & 0xffff;\n  b = b & 0xffff;\n  let c = ~(a & b);\n  c = c & 0xffff;\n  return c;\n}\n"],"names":["reducePin","pin","bits","range","width","map","i","voltage","reverse","reducePins","pins","entries","FullPinout","props","sim","inPins","outPins","internalPins","className","PinoutBlock","header","length","toggle","disabled","pending","colSpan","immPin","name","Pin","role","style","v","onClick","UNKNOWN_PARSE_ERROR","grammars","Base","ohm","baseSemantics","createSemantics","makeParser","grammar","semantics","property","root","source","match","succeeded","parsed","parse","Ok","Err","message","shortMessage","e","extendOperation","List","list","_","asIteration","addAttribute","decNumber","digits","int10","sourceString","wholeDec","binNumber","int2","hexNumber","int16","Number","num","value","identifier","__","this","Name","child","String","_a","str","_b","hdlGrammar","hdlSemantics","extendSemantics","SubBus","startNode","endNode","start","end","WireSide","index","undefined","Wire","left","right","rhs","isTerminal","lhs","Wires","children","Part","_c","wires","Parts","parts","c","BuiltinPart","PartList","ClockedList","clocked","PinDecl","PinList","Chip","body","ins","outs","Clocked","Root","HDL","parser","n","tstGrammar","tstSemantics","extendAttribute","Index","idx","FileName","_dot","ext","_open","dec","_close","OutputFormat","id","lpad","rpad","builtin","address","TstEvalOperation","op","TstOutputOperation","TstOutputListOperation","formats","spec","format","TstSetOperation","setOp","TstEchoOperation","TstClearEchoOperation","TstLoadROMOperation","_r","_l","file","TstRepeat","_o","statements","count","statement","TstStatement","stmt","ops","operation","span","startIdx","endIdx","break","Tst","lines","tst","clock","TST","Clock","level","LOW","ticks","subject","BehaviorSubject","$","update","Subject","next","assert","HIGH","tock","tick","Bus","state","newWidth","push","busVoltage","bit","forEach","pull","reduce","b","nextVoltage","InSubBus","bus","connect","mask","high","low","mid","OutSubBus","ConstantBus","TRUE_BUS","FALSE_BUS","parsePinDecl","toPin","groups","w","Symbol","iterator","Pins","Map","has","set","minWidth","get","insert","values","internals","Set","clockedPins","inn","out","internal","subscribe","eval","size","offset","getBuiltin","BUILTIN_NAMES","includes","part","connections","add","to","from","isOutPin","wireOutPin","wireInPin","render","filter","toLowerCase","emplace","partPin","assertExists","chipPin","findPin","isInternal","Error","ensureWidth","remove","fs","path","load","Low","ClockedChip","unsubscribe","Math","pow","And","a","and","in","And16","and16","DMux","sel","dmux","DMux4Way","dmux4way","d","DMux8Way","dmux8way","f","g","h","mux16","mux16_4","s2","Mux","mux","Mux16","Mux4Way16","Mux8Way16","mux16_8","Nand","nand","Nand16","nand16","Not","Not16","or","Or","Or16","or16","Or8way","Xor","xor","Xor16","xor16","add16","Add16","ALUComponent","A","D","flag","bin","COMMANDS","Flags","ALUNoStat","x","y","alu","ALU","flags","ng","zr","halfAdder","HalfAdder","sum","carry","FullAdder","s","ca","fullAdder","Inc16","RegisterComponent","Bit","Register","VRegister","PC","DFF","t","asmGrammar","asmSemantics","isALabelInstruction","inst","label","asm","instructions","instruction","AInstruction","_at","val","type","CInstruction","assignN","opN","jmpN","assign","jmp","isM","jump","JUMP","store","ASSIGN","Label","ASM","passes","fillLabel","symbols","SCREEN","KEYBOARD","unfilled","line","emit","makeC","endsWith","loadHack","loadAsm","readFile","isErr","split","trim","FORMATS","Memory","memory","Int16Array","cell","current","isFinite","slice","fn","useImmerReducer","reducers","initialState","useReducer","command","produce","draft","action","payload","useStateInitializer","init","useState","setState","useEffect","Mode","mode","setMode","setValue","view","cursor","doSelect","useCallback","ref","select","doChange","target","onChange","edit","display","position","zIndex","marginTop","onBlur","onKeyPress","key","defaultValue","doScroll","scrollTop","totalHeight","toleranceHeight","bufferedItems","settings","itemHeight","minIndex","maxIndex","floor","data","limit","max","min","getData","topPaddingHeight","bottomPaddingHeight","viewportRef","useRef","useMemo","MAX_SAFE_INTEGER","startIndex","tolerance","fillVirtualScrollSettings","startState","adapter","viewportHeight","reducer","scrollReducer","dispatchScroll","row","initialScroll","div","rows","height","rowKey","overflowY","overflowAnchor","onScroll","MemoryBlock","highlight","editable","MemoryCell","rounded","background","hex","flex","textAlign","newValue","fmt","setFormat","setJmp","goto","setGoto","jumpTo","useContext","AppContext","filePicker","setStatus","doLoad","console","error","placeholder","onKeyDown","option","checked","doFormat","RAM","nextData","MemoryChip","RamBus","ram","RAM8","RAM64","RAM512","RAM4K","RAM16K","Panel","join","footer","Accordian","open","summary","WHITE","pixel","color","Screen","canvas","ctx","getContext","image","getImageData","col","putImageData","maxWidth","boxSizing","marginInline","margin","borderTop","borderLeft","borderBottom","borderRight","KeyMap","Enter","Backspace","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Home","End","PageUp","PageDown","Insert","Delete","Escape","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","Keyboard","keyboard","showPicker","setShowPicker","setBits","setKey","event","keypress","code","charCodeAt","keyPressToHackCharacter","preventDefault","changeKey","focus","BITS","decode","x1","x2","am","d1","d2","d3","j1","j2","j3","cpuTick","inM","cpuTock","reset","alu2","addressM","outM","writeM","ROM32K","at","OFFSET","screen","startsWith","CPU","cpuInput","output","Computer","wire","REGISTRY","ChipCtor","chip","getBuiltinChip","pinWidth","build","toString","buildChip","partChip","Output","variable","len","lPad","rPad","parseInt","test","substring","padCenter","getVar","padLeft","B","X","padRight","space","leftSpace","rightSpace","padStart","padEnd","Test","_outputList","_log","FileSystem","_steps","_step","breakpoints","filename","outputs","steps","done","do","step","content","clear","print","isTstLineStatment","ChipTest","pinOrBus","addInstruction","makeLineStatement","repeat","TestRepeatInstruction","TestCompoundInstruction","makeInstruction","TestTickInstruction","TestTockInstruction","TestEvalInstruction","TestOutputInstruction","TestSetInstruction","TestOutputListInstruction","TestEchoInstruction","TestClearEchoInstruction","TestLoadROMInstruction","checkExhaustive","setVar","specs","addOutput","outputList","echo","clearEcho","_chipTestInstruction_","StorageContext","createContext","LocalStorageFileSystemAdapter","PROJECT_NAMES","makeHdl","reduceChip","invalid","makeChipStore","storage","dispatch","project","chips","PROJECTS","chipName","dropdowns","controls","hasBuiltin","runningTest","maybeChip","setTimeout","actions","reloadChip","files","hdl","cmp","setFiles","updateChip","setProject","setChip","testRunning","testFinished","updateTestStep","log","currentStep","p","loadChip","updateFiles","compileChip","compileTest","maybeParsed","replaceChip","nextChip","fsName","Promise","all","catch","saveChip","prj","writeFile","useBuiltin","with","setFileSystem","runTest","pushd","run","popd","cmpGrammar","cmpSemantics","cells","CMP","DiffTable","compare","cmpData","outData","failures","table","cmpI","outI","j","pass","fontFamily","marginBottom","DiffCell","ErrorPanel","failed","Textarea","language","text","setText","Monaco","theme","monaco","useMonaco","editor","decorations","onMount","ed","updateOptions","fontSize","minimap","enabled","scrollBeyondLastLine","model","getModel","nextDecoration","getPositionAt","Range","fromPositions","options","inlineClassName","revealRangeInCenter","deltaDecorations","isDark","window","matchMedia","matches","readOnly","setModelMarkers","exec","column","startLineNumber","endLineNumber","startColumn","endColumn","getLineContent","severity","monacoT","Editor","setError","doParse","debounce","onChangeCB","canUse","wants","Timer","speed","now","Date","delta","finishFrame","requestAnimationFrame","Runbar","runner","timer","running","bind","setSteps","setSpeed","frame","stop","makeTimerStore","dispatcher","useTimer","Clockface","clockface","setClockface","subscription","useClockface","whiteSpace","localStorage","useChipPageStore","setHdl","setTst","setCmp","compile","clockActions","setUseBuiltin","toggleUseBuiltin","selectors","number","hdlPanel","tabIndex","chipButtons","visualizations","flatMap","pinsPanel","selectedTestTab","setSelectedTestTab","testPanel","M","MD","AM","AD","AMD","JGT","JEQ","JGE","JLT","JNE","JLE","JMP","Positive","Zero","Negative","o","mop","cop","sop","jop","replace","cInstruction","aInstruction","aop","C","O","J","Hex","chars","int","radix","hu","hl","lu","ll","precision","uns"],"sourceRoot":""}