{"version":3,"file":"static/js/331.bb502eaf.chunk.js","mappings":"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","sources":["../../simulator/src/chip/clock.ts","../../simulator/src/chip/chip.tsx","../../simulator/src/languages/base.ts","../../simulator/src/languages/grammars/base.ohm.js","../../simulator/src/languages/grammars/asm.ohm.js","../../simulator/src/languages/asm.ts","../../simulator/src/fs.ts","../../simulator/src/cpu/memory.ts","../../simulator/src/chip/builtins/sequential/ram.tsx","../../simulator/src/cpu/cpu.ts","../../simulator/src/chip/builtins/computer/computer.tsx","../../simulator/src/chip/builtins/logic/and.ts","../../simulator/src/chip/builtins/logic/dmux.ts","../../simulator/src/chip/builtins/logic/mux.ts","../../simulator/src/chip/builtins/logic/nand.ts","../../simulator/src/chip/builtins/logic/not.ts","../../simulator/src/chip/builtins/logic/or.ts","../../simulator/src/chip/builtins/logic/xor.ts","../../simulator/src/chip/builtins/arithmetic/add_16.ts","../../simulator/src/chip/builtins/arithmetic/alu.tsx","../../simulator/src/chip/builtins/arithmetic/half_adder.ts","../../simulator/src/chip/builtins/arithmetic/full_adder.ts","../../simulator/src/chip/builtins/arithmetic/inc16.ts","../../simulator/src/chip/builtins/sequential/bit.tsx","../../simulator/src/chip/builtins/index.ts","../../simulator/src/chip/builtins/sequential/dff.ts","../../components/src/chips/alu.tsx","../../components/src/chips/register.tsx","../../components/src/chips/keyboard.tsx","../../components/src/react.ts","../../components/src/inline_edit.tsx","../../components/src/virtual_scroll.tsx","../../components/src/chips/memory.tsx","../../components/src/clockface.tsx","../../components/src/chips/screen.tsx","../../components/src/chips/visualizations.tsx","../../simulator/src/languages/grammars/cmp.ohm.js","../../simulator/src/languages/cmp.ts","../../components/src/difftable.tsx","../../components/src/pinout.tsx","../../components/src/runbar.tsx","../../components/src/timer.tsx","../../simulator/src/languages/grammars/hdl.ohm.js","../../simulator/src/languages/hdl.ts","../../simulator/src/languages/grammars/tst.ohm.js","../../simulator/src/languages/tst.ts","../../simulator/src/timer.ts","shell/editor.tsx","shell/panel.tsx","../../simulator/src/chip/builder.ts","../../simulator/src/output.ts","../../simulator/src/tst.ts","../../components/src/stores/chip.store.ts","pages/chip.tsx","../../simulator/src/cpu/alu.ts","../../simulator/src/util/asm.ts","../../simulator/src/util/twos.ts"],"sourcesContent":["import { BehaviorSubject, Observable, Subject } from \"rxjs\";\nimport { assert } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { HIGH, LOW, Voltage } from \"./chip.js\";\n\ninterface Tick {\n  readonly level: Voltage;\n  readonly ticks: number;\n}\n\nlet clock: Clock;\nexport class Clock {\n  private level: Voltage = LOW;\n  private ticks = 0;\n\n  static get() {\n    if (clock === undefined) {\n      clock = new Clock();\n    }\n    return clock;\n  }\n\n  get isHigh(): boolean {\n    return this.level === HIGH;\n  }\n\n  get isLow(): boolean {\n    return this.level === LOW;\n  }\n\n  private subject = new BehaviorSubject<Tick>({\n    level: this.level,\n    ticks: this.ticks,\n  });\n  readonly frameSubject = new Subject<void>();\n\n  readonly $: Observable<Tick> = this.subject;\n  readonly frame$: Observable<void> = this.frameSubject;\n\n  private next() {\n    this.subject.next({\n      level: this.level,\n      ticks: this.ticks,\n    });\n  }\n\n  private constructor() {\n    // private\n  }\n\n  reset() {\n    this.level = LOW;\n    this.ticks = 0;\n    this.next();\n  }\n\n  tick() {\n    assert(this.level === LOW, \"Can only tick up from LOW\");\n    this.level = HIGH;\n    this.next();\n  }\n\n  tock() {\n    assert(this.level === HIGH, \"Can only tock down from HIGH\");\n    this.level = LOW;\n    this.ticks += 1;\n    this.next();\n  }\n\n  toggle() {\n    this.level === HIGH ? this.tock() : this.tick();\n  }\n\n  eval() {\n    this.tick();\n    this.tock();\n  }\n\n  frame() {\n    this.frameSubject.next();\n  }\n\n  toString() {\n    return `${this.ticks}${this.level === HIGH ? \"+\" : \"\"}`;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { assert, assertExists } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs.js\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range.js\";\nimport { bin } from \"../util/twos.js\";\nimport { Clock } from \"./clock.js\";\n\nexport const HIGH = 1;\nexport const LOW = 0;\nexport type Voltage = typeof HIGH | typeof LOW;\n\nexport interface Pin {\n  readonly name: string;\n  readonly width: number;\n  busVoltage: number;\n  pull(voltage: Voltage, bit?: number): void;\n  toggle(bit?: number): void;\n  voltage(bit?: number): Voltage;\n  connect(pin: Pin): void;\n}\n\nexport class Bus implements Pin {\n  state: Voltage[];\n  next: Pin[] = [];\n\n  constructor(readonly name: string, readonly width = 1) {\n    this.state = range(0, this.width).map(() => LOW);\n  }\n\n  ensureWidth(newWidth: number) {\n    assert(newWidth <= 16, `Cannot widen past 16 to ${newWidth} bits`);\n    if (this.width < newWidth) {\n      (this as { width: number }).width = newWidth;\n      this.state = [\n        ...this.state,\n        ...range(this.width, newWidth).map(() => LOW as Voltage),\n      ];\n    }\n  }\n\n  connect(next: Pin) {\n    this.next.push(next);\n    next.busVoltage = this.busVoltage;\n  }\n\n  pull(voltage: Voltage, bit = 0) {\n    assert(\n      bit >= 0 && bit < this.width,\n      `Bit out of bounds: ${this.name}@${bit}`\n    );\n    this.state[bit] = voltage;\n    this.next.forEach((n) => n.pull(voltage, bit));\n  }\n\n  voltage(bit = 0): Voltage {\n    assert(bit >= 0 && bit < this.width);\n    return this.state[bit];\n  }\n\n  set busVoltage(voltage: number) {\n    for (const i of range(0, this.width)) {\n      this.state[i] = ((voltage & (1 << i)) >> i) as Voltage;\n    }\n    this.next.forEach((n) => (n.busVoltage = this.busVoltage));\n  }\n\n  get busVoltage(): number {\n    return range(0, this.width).reduce((b, i) => b | (this.state[i] << i), 0);\n  }\n\n  toggle(bit = 0) {\n    const nextVoltage = this.voltage(bit) === LOW ? HIGH : LOW;\n    this.pull(nextVoltage, bit);\n  }\n}\n\nexport class InSubBus extends Bus {\n  constructor(\n    private bus: Pin,\n    private start: number,\n    override readonly width = 1\n  ) {\n    super(bus.name);\n    assert(\n      start >= 0 && start + width <= bus.width,\n      `Mismatched InSubBus dimensions on ${bus.name} (${width} + ${start} > ${bus.width})`\n    );\n    this.connect(bus);\n  }\n\n  override pull(voltage: Voltage, bit = 0) {\n    assert(bit >= 0 && bit < this.width);\n    this.bus.pull(voltage, this.start + bit);\n  }\n\n  override voltage(bit = 0): Voltage {\n    assert(bit >= 0 && bit < this.width);\n    return this.bus.voltage(this.start + bit);\n  }\n\n  override set busVoltage(voltage: number) {\n    const high = this.bus.busVoltage & ~mask(this.width + this.start);\n    const low = this.bus.busVoltage & mask(this.start);\n    const mid = (voltage & mask(this.width)) << this.start;\n    this.bus.busVoltage = high | mid | low;\n  }\n\n  override get busVoltage(): number {\n    return (this.bus.busVoltage >> this.start) & mask(this.width);\n  }\n\n  override connect(bus: Pin): void {\n    assert(\n      this.start + this.width <= bus.width,\n      `Mismatched InSubBus connection dimensions (From ${bus.name} to ${this.name})`\n    );\n    this.bus = bus;\n  }\n}\n\nexport class OutSubBus extends Bus {\n  constructor(\n    private bus: Pin,\n    private start: number,\n    override readonly width = 1\n  ) {\n    super(bus.name);\n    assert(start >= 0 && width <= bus.width, `Mismatched OutSubBus dimensions`);\n    this.connect(bus);\n  }\n\n  override set busVoltage(voltage: number) {\n    this.bus.busVoltage =\n      (voltage & mask(this.width + this.start)) >> this.start;\n  }\n\n  override get busVoltage(): number {\n    return this.bus.busVoltage & mask(this.width);\n  }\n\n  override connect(bus: Pin): void {\n    assert(\n      this.width <= bus.width,\n      `Mismatched OutSubBus connection dimensions`\n    );\n    this.bus = bus;\n  }\n}\n\nexport class ConstantBus extends Bus {\n  constructor(name: string, private readonly value: number) {\n    super(name, 16 /* TODO: get high bit index */);\n  }\n\n  pullHigh(_ = 0) {\n    return undefined;\n  }\n  pullLow(_ = 0) {\n    return undefined;\n  }\n  override voltage(_ = 0): Voltage {\n    return (this.busVoltage & 0x1) as Voltage;\n  }\n\n  override set busVoltage(voltage: number) {\n    // Noop\n  }\n  override get busVoltage(): number {\n    return this.value;\n  }\n}\n\nexport const TRUE_BUS = new ConstantBus(\"true\", 0xffff);\nexport const FALSE_BUS = new ConstantBus(\"false\", 0);\n\nexport function parsePinDecl(toPin: string): {\n  pin: string;\n  width: number;\n} {\n  const { pin, w } = toPin.match(/(?<pin>[a-zA-Z]+)(\\[(?<w>\\d+)\\])?/)\n    ?.groups as {\n    pin: string;\n    w?: string;\n  };\n  return {\n    pin,\n    width: w ? Number(w) : 1,\n  };\n}\n\nexport function parseToPin(toPin: string): {\n  pin: string;\n  start?: number;\n  end?: number;\n} {\n  const { pin, i, j } = toPin.match(\n    /(?<pin>[a-z]+)(\\[(?<i>\\d+)(\\.\\.(?<j>\\d+))?\\])?/\n  )?.groups as { pin: string; i?: string; j?: string };\n  return {\n    pin,\n    start: i ? Number(i) : undefined,\n    end: j ? Number(j) : undefined,\n  };\n}\n\nexport class Pins {\n  private readonly map = new Map<string, Pin>();\n\n  insert(pin: Pin) {\n    const { name } = pin;\n    assert(!this.map.has(name), `Pins already has ${name}!`);\n    this.map.set(name, pin);\n  }\n\n  emplace(name: string, minWidth?: number) {\n    if (this.has(name)) {\n      return this.get(name)!;\n    } else {\n      const pin = new Bus(name, minWidth);\n      this.insert(pin);\n      return pin;\n    }\n  }\n\n  has(pin: string): boolean {\n    return this.map.has(pin);\n  }\n\n  get(pin: string): Pin | undefined {\n    return this.map.get(pin);\n  }\n\n  entries(): Iterable<Pin> {\n    return this.map.values();\n  }\n\n  [Symbol.iterator]() {\n    return this.map[Symbol.iterator]();\n  }\n}\n\nlet id = 0;\nexport class Chip {\n  readonly id = id++;\n  ins = new Pins();\n  outs = new Pins();\n  pins = new Pins();\n  parts = new Set<Chip>();\n  clockedPins: Set<string>;\n\n  get clocked() {\n    if (this.clockedPins.size > 0) {\n      return true;\n    }\n    for (const part of this.parts) {\n      if (part.clocked) return true;\n    }\n    return false;\n  }\n\n  constructor(\n    ins: (string | { pin: string; width: number })[],\n    outs: (string | { pin: string; width: number })[],\n    public name?: string,\n    internals: (string | { pin: string; width: number })[] = [],\n    clocked: string[] = []\n  ) {\n    for (const inn of ins) {\n      const { pin, width = 1 } =\n        (inn as { pin: string }).pin !== undefined\n          ? (inn as { pin: string; width: number })\n          : parsePinDecl(inn as string);\n      this.ins.insert(new Bus(pin, width));\n    }\n\n    for (const out of outs) {\n      const { pin, width = 1 } =\n        (out as { pin: string }).pin !== undefined\n          ? (out as { pin: string; width: number })\n          : parsePinDecl(out as string);\n      this.outs.insert(new Bus(pin, width));\n    }\n\n    for (const internal of internals) {\n      const { pin, width = 1 } =\n        (internal as { pin: string }).pin !== undefined\n          ? (internal as { pin: string; width: number })\n          : parsePinDecl(internal as string);\n      this.pins.insert(new Bus(pin, width));\n    }\n\n    this.clockedPins = new Set(clocked);\n\n    Clock.get().$.subscribe(() => this.eval());\n  }\n\n  reset() {\n    for (const [_, pin] of this.ins) {\n      pin.busVoltage = 0;\n    }\n    for (const part of this.parts) {\n      part.reset();\n    }\n    this.eval();\n  }\n\n  in(pin = \"in\"): Pin {\n    assert(this.hasIn(pin), `No in pin ${pin}`);\n    return this.ins.get(pin)!;\n  }\n\n  out(pin = \"out\"): Pin {\n    assert(this.hasOut(pin), `No in pin ${pin}`);\n    return this.outs.get(pin)!;\n  }\n\n  hasIn(pin: string): boolean {\n    return this.ins.has(pin);\n  }\n\n  hasOut(pin: string): boolean {\n    return this.outs.has(pin);\n  }\n\n  pin(name: string): Pin {\n    assert(this.pins.has(name));\n    return this.pins.get(name)!;\n  }\n\n  get(name: string, offset?: number): Pin | undefined {\n    if (this.ins.has(name)) {\n      return this.ins.get(name)!;\n    }\n    if (this.outs.has(name)) {\n      return this.outs.get(name)!;\n    }\n    if (this.pins.has(name)) {\n      return this.pins.get(name)!;\n    }\n    return this.getBuiltin(name, offset);\n  }\n\n  private getBuiltin(name: string, offset = 0): Pin | undefined {\n    if (BUILTIN_NAMES.includes(name)) {\n      for (const part of this.parts) {\n        const pin = part.get(name, offset);\n        if (pin) {\n          return pin;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  isOutPin(pin: string): boolean {\n    return this.outs.has(pin);\n  }\n\n  wire(part: Chip, connections: Connection[]) {\n    this.parts.add(part);\n    for (const { to, from } of connections) {\n      if (part.isOutPin(to.name)) {\n        this.wireOutPin(part, to, from);\n      } else {\n        this.wireInPin(part, to, from);\n      }\n    }\n  }\n\n  private findPin(from: string, minWidth?: number): Pin {\n    if (from.toLowerCase() === \"true\" || from === \"1\") {\n      return TRUE_BUS;\n    }\n    if (from.toLowerCase() === \"false\" || from === \"0\") {\n      return FALSE_BUS;\n    }\n    if (this.ins.has(from)) {\n      return this.ins.get(from)!;\n    }\n    if (this.outs.has(from)) {\n      return this.outs.get(from)!;\n    }\n    return this.pins.emplace(from, minWidth);\n  }\n\n  private wireOutPin(part: Chip, to: PinSide, from: PinSide) {\n    const partPin = assertExists(\n      part.outs.get(to.name),\n      () => `Cannot wire to missing pin ${to.name}`\n    );\n    to.width ??= partPin.width;\n\n    let chipPin = this.findPin(from.name, from.width ?? to.width);\n    const isInternal = this.pins.has(chipPin.name);\n\n    from.width ??= chipPin.width;\n\n    if (chipPin instanceof ConstantBus) {\n      throw new Error(`Cannot wire to constant bus`);\n    }\n\n    // Widen internal pins\n    if (isInternal && chipPin instanceof Bus) {\n      chipPin.ensureWidth(from.start + from.width);\n    }\n\n    // Wrap the chipPin in an InBus when the chip side is dimensioned\n    if (from.start > 0 || from.width !== chipPin.width) {\n      chipPin = new InSubBus(chipPin, from.start, from.width);\n    }\n\n    // Wrap the chipPin in an OutBus when the part side is dimensioned\n    if (to.start > 0 || to.width !== chipPin.width) {\n      chipPin = new OutSubBus(chipPin, to.start, to.width);\n    }\n\n    partPin.connect(chipPin);\n  }\n\n  private wireInPin(part: Chip, to: PinSide, from: PinSide) {\n    let partPin = assertExists(\n      part.ins.get(to.name),\n      () => `Cannot wire to missing pin ${to.name}`\n    );\n    to.width ??= partPin.width;\n\n    const chipPin = this.findPin(from.name, from.width ?? to.width);\n\n    from.width ??= chipPin.width;\n\n    // Wrap the partPin in an InBus when the part side is dimensioned\n    if (to.start > 0 || to.width !== chipPin.width) {\n      partPin = new InSubBus(partPin, to.start, to.width);\n    }\n\n    // Wrap the partPin in an OutBus when the chip side is dimensioned\n    if (![\"true\", \"false\"].includes(chipPin.name)) {\n      if (from.start > 0 || from.width !== chipPin.width) {\n        partPin = new OutSubBus(partPin, from.start, from.width);\n      }\n    }\n    chipPin.connect(partPin);\n  }\n\n  eval() {\n    for (const chip of this.parts) {\n      // TODO topological sort\n      // eval chip input busses\n      chip.eval();\n      // eval output busses\n    }\n  }\n\n  tick() {\n    this.eval();\n  }\n\n  tock() {\n    this.eval();\n  }\n\n  remove() {\n    for (const part of this.parts) {\n      part.remove();\n    }\n  }\n\n  // For the ROM32K builtin to load from a file system\n  async load(fs: FileSystem, path: string): Promise<void> {\n    for (const part of this.parts) {\n      if (part.name === \"ROM32K\") {\n        await part.load(fs, path);\n      }\n    }\n  }\n}\n\nexport class Low extends Chip {\n  constructor() {\n    super([], []);\n    this.outs.insert(FALSE_BUS);\n  }\n}\n\nexport class High extends Chip {\n  constructor() {\n    super([], []);\n    this.outs.insert(TRUE_BUS);\n  }\n}\n\nexport class ClockedChip extends Chip {\n  override get clocked(): boolean {\n    return true;\n  }\n\n  #subscription = Clock.get().$.subscribe(({ level }) => {\n    if (level === LOW) {\n      this.tock();\n    } else {\n      this.tick();\n    }\n  });\n\n  override remove() {\n    this.#subscription.unsubscribe();\n    super.remove();\n  }\n}\n\nexport interface PinSide {\n  name: string;\n  start: number;\n  width?: number;\n}\n\nexport interface Connection {\n  // To is the part side\n  to: PinSide;\n  // From is the chip side\n  from: PinSide;\n}\n\nexport type Pinout = Record<string, string>;\nexport interface SerializedChip {\n  id: number;\n  name: string;\n  ins: Pinout;\n  outs: Pinout;\n  pins: Pinout;\n  children: SerializedChip[];\n}\n\nfunction mask(width: number) {\n  return Math.pow(2, width) - 1;\n}\n\nfunction setBus(busses: Pinout, pin: Pin) {\n  busses[pin.name] = bin(\n    (pin.busVoltage & mask(pin.width)) <<\n      (pin as unknown as { start: number }).start ?? 0\n  );\n  return busses;\n}\n\nexport function printChip(chip: Chip): SerializedChip {\n  return {\n    id: chip.id,\n    name: chip.name ?? chip.constructor.name,\n    ins: [...chip.ins.entries()].reduce(setBus, {} as Pinout),\n    outs: [...chip.outs.entries()].reduce(setBus, {} as Pinout),\n    pins: [...chip.pins.entries()].reduce(setBus, {} as Pinout),\n    children: [...chip.parts.values()].map(printChip),\n  };\n}\n\nexport const BUILTIN_NAMES = [\n  \"Register\",\n  \"ARegister\",\n  \"DRegister\",\n  \"PC\",\n  \"RAM8\",\n  \"RAM64\",\n  \"RAM512\",\n  \"RAM4K\",\n  \"RAM16K\",\n  \"ROM32K\",\n  \"Screen\",\n  \"Keyboard\",\n  \"Memory\",\n];\n","import ohm from \"ohm-js\";\nimport { int10, int16, int2 } from \"../util/twos.js\";\nimport { Err, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result.js\";\n\nexport const UNKNOWN_PARSE_ERROR = `Unknown parse error`;\n\nimport baseGrammar from \"./grammars/base.ohm.js\";\nexport const grammars = {\n  Base: ohm.grammar(baseGrammar),\n};\n\nexport const baseSemantics = grammars.Base.createSemantics();\n\nbaseSemantics.extendOperation(\"asIteration\", {\n  List(list, _) {\n    return list.asIteration();\n  },\n});\n\nbaseSemantics.addAttribute(\"value\", {\n  decNumber(_, digits): number {\n    return int10(digits.sourceString);\n  },\n  wholeDec(_, digits): number {\n    return int10(digits.sourceString);\n  },\n  binNumber(_, digits) {\n    return int2(digits.sourceString);\n  },\n  hexNumber(_, digits) {\n    return int16(digits.sourceString);\n  },\n  Number(num) {\n    return num.value;\n  },\n  Name(ident) {\n    return ident.name;\n  },\n  identifier(_, __): string {\n    return this.sourceString;\n  },\n});\n\nbaseSemantics.addAttribute(\"name\", {\n  identifier(_, __): string {\n    return this.sourceString;\n  },\n  Name(_): string {\n    return this.child(0)?.name;\n  },\n});\n\nbaseSemantics.addAttribute(\"String\", {\n  String(_a, str, _b) {\n    return str.sourceString;\n  },\n});\n\nexport type ParseError = Error | { message: string; shortMessage: string };\n\nexport function makeParser<ResultType>(\n  grammar: ohm.Grammar,\n  semantics: ohm.Semantics,\n  property: (obj: ohm.Dict) => ResultType = ({ root }) => root\n): (source: string) => Result<ResultType, ParseError> {\n  return function parse(source) {\n    try {\n      const match = grammar.match(source);\n      if (match.succeeded()) {\n        const parsed = semantics(match);\n        const parse = property(parsed);\n        return Ok(parse);\n      } else {\n        return Err({\n          message: match.message ?? UNKNOWN_PARSE_ERROR,\n          shortMessage: match.shortMessage ?? UNKNOWN_PARSE_ERROR,\n        });\n      }\n    } catch (e) {\n      return Err(e as Error);\n    }\n  };\n}\n\nexport interface Span {\n  start: number;\n  end: number;\n}\n","const base = `\nBase {\n  Root = Value*\n\n  At = at\n  Bang = bang\n  Bar = bar\n  CloseAngle = closeAngle\n  CloseBrace = closeBrace\n  CloseParen = closeParen\n  CloseSquare = closeSquare\n  Comma = comma\n  Dollar = dollar\n  Dot = dot\n  DoubleQuote = doubleQuote\n  Equal = equal\n  OpenAngle = openAngle\n  OpenBrace = openBrace\n  OpenParen = openParen\n  OpenSquare = openSquare\n  Percent = percent\n  Semi = semi\n  Underscore = underscore\n\n  at = \"@\"\n  bang = \"!\"\n  bar = \"|\"\n  closeAngle = \">\"\n  closeBrace = \"}\"\n  closeParen = \")\"\n  closeSquare = \"]\"\n  comma = \",\"\n  dollar = \"$\"\n  dot = \".\"\n  doubleQuote = \"\\\\\"\"\n  equal = \"=\"\n  minus = \"-\"\n  newline = \"\\\\r\"? \"\\\\n\"\n  openAngle = \"<\"\n  openBrace = \"{\"\n  openParen = \"(\"\n  openSquare = \"[\"\n  percent = \"%\"\n  semi = \";\"\n  underscore = \"_\"\n\n  Value = identifier | number | boolean\n\n  boolean = true | false\n  True = true\n  False = false\n  true = \"true\"\n  false = \"false\"\n\n  Name = identifier\n  identifier = (letter|underscore) (alnum|underscore|dot|dollar)*\n\n  Number = number\n  number = hexNumber | decNumber | binNumber\n  binNumber = (\"%B\") (\"0\"|\"1\")+\n  hexNumber = (\"%X\") hexDigit+\n  decNumber = (\"%D\")? (wholeDec | realDec)\n  wholeDec = minus? digit+\n  realDec = minus? digit* \".\" digit+\n\n  String = DoubleQuote (~doubleQuote any)* doubleQuote\n  \n  spaces := (lineComment | comment | space)*\n  commentStart = \"/*\"\n  commentEnd = \"*/\"\n  comment = commentStart (~commentEnd any)* commentEnd\n  lineCommentStart = \"//\"\n  lineComment = lineCommentStart (~\"\\\\n\" any)* \"\\\\n\"\n\n  List<elem, sep> = NonemptyListOf<elem, sep> sep?\n  EmptyList<elem, sep> = EmptyList<elem, sep> sep?\n}`;\nexport default base;\n","const asm = `\nASM <: Base {\n  Root := ASM\n  ASM = Instruction*\n  \n  Instruction = Label|AInstruction|CInstruction\n  \n  Label = OpenParen identifier closeParen\n  AInstruction = at (identifier | decNumber)\n  CInstruction = assign? op jmp?\n  \n  assign = (\n      \"AMD\"\n      | \"AM\"\n      | \"AD\"\n      | \"MD\"\n      | \"M\"\n      | \"D\"\n      | \"A\"\n      ) equal\n      \n  op =\n      | \"0\" | \"1\" | \"-1\"\n      | \"!D\" | \"!A\" | \"!M\"\n      | \"-D\" | \"-A\" | \"-M\"\n      | \"D+1\" | \"A+1\" | \"M+1\"\n      | \"D-1\" | \"A-1\" | \"M-1\"\n      | \"D+A\" | \"D+M\"\n      | \"D-A\" | \"D-M\"\n      | \"A-D\" | \"M-D\"\n      | \"D&A\" | \"D&M\"\n      | \"D|A\" | \"D|M\"\n      | \"D\" | \"A\" | \"M\"\n\n\n  jmp = semi (\"JGT\" | \"JEQ\" | \"JGE\" | \"JLT\" | \"JNE\" | \"JLE\" | \"JMP\")\n}`;\nexport default asm;\n","import { assertExists } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport ohm from \"ohm-js\";\nimport {\n  ASSIGN,\n  ASSIGN_ASM,\n  ASSIGN_OP,\n  COMMANDS,\n  COMMANDS_ASM,\n  COMMANDS_OP,\n  JUMP,\n  JUMP_ASM,\n  JUMP_OP,\n} from \"../cpu/alu.js\";\nimport { KEYBOARD, SCREEN } from \"../cpu/memory.js\";\nimport { makeC } from \"../util/asm.js\";\nimport { grammars, makeParser, baseSemantics } from \"./base.js\";\n\nimport asmGrammar from \"./grammars/asm.ohm.js\";\n\nexport const grammar = ohm.grammar(asmGrammar, grammars);\nexport const asmSemantics = grammar.extendSemantics(baseSemantics);\n\nexport interface Asm {\n  instructions: AsmInstruction[];\n}\n\nexport type AsmInstruction =\n  | AsmAInstruction\n  | AsmCInstruction\n  | AsmLabelInstruction;\n\nexport type AsmAInstruction = AsmALabelInstruction | AsmAValueInstruction;\nexport interface AsmALabelInstruction {\n  type: \"A\";\n  label: string;\n}\n\nexport interface AsmAValueInstruction {\n  type: \"A\";\n  value: number;\n}\n\nfunction isALabelInstruction(\n  inst: AsmAInstruction\n): inst is AsmALabelInstruction {\n  return (inst as AsmALabelInstruction).label !== undefined;\n}\n\nexport interface AsmCInstruction {\n  type: \"C\";\n  op: COMMANDS_OP;\n  isM: boolean;\n  store?: ASSIGN_OP;\n  jump?: JUMP_OP;\n}\n\nexport interface AsmLabelInstruction {\n  type: \"L\";\n  label: string;\n}\n\nasmSemantics.addAttribute<Asm>(\"root\", {\n  Root(_) {\n    return this.asm;\n  },\n});\n\nasmSemantics.addAttribute<Asm>(\"asm\", {\n  Root(asm) {\n    return {\n      instructions: asm\n        .child(0)\n        .children.map(({ instruction }) => instruction as AsmInstruction),\n    };\n  },\n});\n\nasmSemantics.addAttribute<AsmInstruction>(\"instruction\", {\n  AInstruction(_at, val): AsmAInstruction {\n    try {\n      return {\n        type: \"A\",\n        label: val.name,\n      };\n    } catch (e) {\n      // Pass\n    }\n\n    try {\n      return {\n        type: \"A\",\n        value: val.value,\n      };\n    } catch (e) {\n      // pass\n    }\n\n    throw new Error(`AsmAInstruction must have either a name or a value`);\n  },\n  CInstruction(assignN, opN, jmpN): AsmCInstruction {\n    const assign = assignN.child(0)?.child(0)?.sourceString as ASSIGN_ASM;\n    const op = opN.sourceString.replace(\"M\", \"A\") as COMMANDS_ASM;\n    const jmp = jmpN.child(0)?.child(1)?.sourceString as JUMP_ASM;\n    const isM =\n      assignN.sourceString.includes(\"M\") || opN.sourceString.includes(\"M\");\n    const inst: AsmCInstruction = {\n      type: \"C\",\n      op: COMMANDS.asm[op],\n      isM,\n    };\n    if (jmp) inst.jump = JUMP.asm[jmp];\n    if (assign) inst.store = ASSIGN.asm[assign];\n    return inst;\n  },\n  Label(_o, { name }, _c): AsmLabelInstruction {\n    return {\n      type: \"L\",\n      label: name,\n    };\n  },\n});\n\nexport function fillLabel(asm: Asm) {\n  let nextLabel = 16;\n  const symbols = new Map<string, number>([\n    [\"R0\", 0],\n    [\"R1\", 1],\n    [\"R2\", 2],\n    [\"R3\", 3],\n    [\"R4\", 4],\n    [\"R5\", 5],\n    [\"R6\", 6],\n    [\"R7\", 7],\n    [\"R8\", 8],\n    [\"R9\", 9],\n    [\"R10\", 10],\n    [\"R11\", 11],\n    [\"R12\", 12],\n    [\"R13\", 13],\n    [\"R14\", 14],\n    [\"R15\", 15],\n    [\"SP\", 0],\n    [\"LCL\", 1],\n    [\"ARG\", 2],\n    [\"THIS\", 3],\n    [\"THAT\", 4],\n    [\"SCREEN\", SCREEN],\n    [\"KBD\", KEYBOARD],\n  ]);\n\n  function getLabelValue(label: string) {\n    if (!symbols.has(label)) {\n      symbols.set(label, nextLabel);\n      nextLabel += 1;\n    }\n    return assertExists(symbols.get(label), `Label not in symbols: ${label}`);\n  }\n\n  function transmuteAInstruction(instruction: AsmALabelInstruction) {\n    const value = getLabelValue(instruction.label);\n    (instruction as unknown as AsmAValueInstruction).value = value;\n    delete (instruction as unknown as { label: undefined }).label;\n  }\n\n  const unfilled: AsmALabelInstruction[] = [];\n  let line = 0;\n  for (const instruction of asm.instructions) {\n    if (instruction.type === \"L\") {\n      if (symbols.has(instruction.label)) {\n        throw new Error(`ASM Duplicate label ${instruction.label}`);\n      } else {\n        symbols.set(instruction.label, line);\n      }\n      continue;\n    }\n\n    line += 1;\n\n    if (instruction.type === \"A\") {\n      if (isALabelInstruction(instruction)) {\n        unfilled.push(instruction);\n      }\n    }\n  }\n\n  unfilled.forEach(transmuteAInstruction);\n}\n\nexport function emit(asm: Asm): number[] {\n  return asm.instructions\n    .map((inst) => {\n      if (inst.type === \"A\") {\n        if (isALabelInstruction(inst)) {\n          throw new Error(`ASM Emitting unfilled A instruction`);\n        }\n        return inst.value;\n      }\n      if (inst.type === \"C\") {\n        return makeC(inst.isM, inst.op, inst.store, inst.jump);\n      }\n      return undefined;\n    })\n    .filter((op): op is number => op !== undefined);\n}\n\nexport const ASM = {\n  grammar: asmGrammar,\n  semantics: asmSemantics,\n  parser: grammar,\n  parse: makeParser<Asm>(grammar, asmSemantics),\n  passes: {\n    fillLabel,\n    emit,\n  },\n};\n","import { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs.js\";\nimport { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result.js\";\nimport { ASM } from \"./languages/asm.js\";\nimport { int2 } from \"./util/twos.js\";\n\nexport async function load(fs: FileSystem, path: string): Promise<number[]> {\n  if (path.endsWith(\".hack\")) {\n    return loadHack(fs, path);\n  }\n\n  if (path.endsWith(\".asm\")) {\n    return loadAsm(fs, path);\n  }\n\n  throw new Error(`Cannot load file without hack or asm extension ${path}`);\n}\n\nexport async function loadAsm(fs: FileSystem, path: string): Promise<number[]> {\n  const source = await fs.readFile(path);\n  const parsed = ASM.parse(source);\n  if (isErr(parsed)) {\n    throw Err(parsed);\n  }\n\n  const asm = Ok(parsed);\n  ASM.passes.fillLabel(asm);\n  return ASM.passes.emit(asm);\n}\n\nexport async function loadHack(\n  fs: FileSystem,\n  path: string\n): Promise<number[]> {\n  return (await fs.readFile(path))\n    .split(\"\\n\")\n    .filter((line) => line.trim() !== \"\")\n    .map(int2);\n}\n","import { assert } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs.js\";\nimport { Subject } from \"rxjs\";\nimport { op } from \"../util/asm.js\";\nimport { int10, int16, int2 } from \"../util/twos.js\";\nimport { load } from \"../fs.js\";\n\nexport const FORMATS = [\"bin\", \"dec\", \"hex\", \"asm\"];\nexport type Format = typeof FORMATS[number];\n\nexport const SCREEN = 0x4000;\nexport const SCREEN_ROWS = 512;\nexport const SCREEN_COLS = 256;\nexport const KEYBOARD = 0x6000;\n\nexport class Memory {\n  #memory: Int16Array;\n  updates = new Subject<void>();\n\n  get size(): number {\n    return this.#memory.length;\n  }\n\n  constructor(memory: ArrayBuffer | number) {\n    if (typeof memory === \"number\") {\n      this.#memory = new Int16Array(memory);\n    } else {\n      this.#memory = new Int16Array(memory);\n    }\n  }\n\n  get(index: number): number {\n    if (index < 0 || index >= this.size) {\n      return 0xffff;\n    }\n    return this.#memory[index] ?? 0;\n  }\n\n  set(index: number, value: number): void {\n    if (index >= 0 && index < this.size) {\n      this.#memory[index] = value & 0xffff;\n    }\n  }\n\n  update(cell: number, value: string, format: Format) {\n    let current: number;\n    switch (format) {\n      case \"asm\":\n        current = op(value);\n        break;\n      case \"bin\":\n        current = int2(value);\n        break;\n      case \"hex\":\n        current = int16(value);\n        break;\n      case \"dec\":\n      default:\n        current = int10(value);\n        break;\n    }\n\n    if (isFinite(current) && current <= 0xffff) {\n      this.set(cell, current);\n      this.updates.next();\n    }\n  }\n\n  async load(fs: FileSystem, path: string) {\n    try {\n      (await load(fs, path)).map((v, i) => this.set(i, v));\n    } catch (cause) {\n      // throw new Error(`ROM32K Failed to load file ${path}`, { cause });\n      throw new Error(`Memory Failed to load file ${path}`);\n    }\n  }\n\n  range(start = 0, end = this.size): number[] {\n    return [...this.#memory.slice(start, end)];\n  }\n\n  *map<T>(\n    fn: (index: number, value: number) => T,\n    start = 0,\n    end = this.size\n  ): Iterable<T> {\n    assert(start < end);\n    for (let i = start; i < end; i++) {\n      yield fn(i, this.get(i));\n    }\n  }\n}\n","import { Bus, ClockedChip, Pin } from \"../../chip.js\";\nimport { assert } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { Memory, Memory as MemoryChip } from \"../../../cpu/memory.js\";\n\nexport class RAM extends ClockedChip {\n  protected _memory: MemoryChip;\n  private _nextData = 0;\n  private _address = 0;\n\n  get memory() {\n    return this._memory;\n  }\n  get address() {\n    return this._address;\n  }\n\n  constructor(readonly width: number, name?: string) {\n    super([\"in[16]\", \"load\", `address[${width}]`], [`out[16]`], name);\n    this._memory = new MemoryChip(Math.pow(2, this.width));\n  }\n\n  override tick() {\n    const load = this.in(\"load\").voltage();\n    this._address = this.in(\"address\").busVoltage;\n    if (load) {\n      this._nextData = this.in().busVoltage;\n      this._memory.set(this._address, this._nextData);\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this._memory?.get(this._address) ?? 0;\n  }\n\n  override eval() {\n    const address = this.in(\"address\").busVoltage;\n    this.out().busVoltage = this._memory?.get(address) ?? 0;\n  }\n\n  at(idx: number): Pin {\n    assert(\n      idx < this._memory.size,\n      () => `Request out of bounds (${idx} >= ${this._memory.size})`\n    );\n    return new RamBus(`${this.name}[${idx}]`, idx, this._memory);\n  }\n}\n\nexport class RamBus extends Bus {\n  constructor(\n    name: string,\n    private readonly index: number,\n    private ram: Memory\n  ) {\n    super(name);\n  }\n\n  override get busVoltage(): number {\n    return this.ram.get(this.index);\n  }\n\n  override set busVoltage(num: number) {\n    this.ram.set(this.index, num);\n  }\n}\n\nexport class RAM8 extends RAM {\n  constructor(name?: string) {\n    super(3, name);\n  }\n}\n\nexport class RAM64 extends RAM {\n  constructor(name?: string) {\n    super(6, name);\n  }\n}\n\nexport class RAM512 extends RAM {\n  constructor(name?: string) {\n    super(9, name);\n  }\n}\n\nexport class RAM4K extends RAM {\n  constructor(name?: string) {\n    super(12, name);\n  }\n}\n\nexport class RAM16K extends RAM {\n  constructor(name?: string) {\n    super(14, name);\n  }\n}\n","import { alu, COMMANDS_OP, Flags } from \"./alu.js\";\nimport { Memory } from \"./memory.js\";\n\nexport interface CPUInput {\n  inM: number;\n  instruction: number;\n  reset: boolean;\n}\n\nexport interface CPUOutput {\n  outM: number;\n  writeM: boolean;\n  addressM: number;\n}\n\nexport interface CPUState {\n  A: number;\n  D: number;\n  PC: number;\n  ALU: number;\n  flag: number;\n}\n\nexport function emptyState(): CPUState {\n  return { A: 0, D: 0, PC: 0, ALU: 0, flag: Flags.Zero };\n}\n\nconst BITS = {\n  c: 0b1000_0000_0000_0000,\n  x1: 0b1001_0000_0000_0000,\n  x2: 0b1001_0000_0000_0000,\n  am: 0b1001_0000_0000_0000,\n  op: 0b0000_1111_1100_0000,\n  d1: 0b1000_0000_0010_0000,\n  d2: 0b1000_0000_0001_0000,\n  d3: 0b1000_0000_0000_1000,\n  j1: 0b1000_0000_0000_0001,\n  j2: 0b1000_0000_0000_0010,\n  j3: 0b1000_0000_0000_0100,\n};\n\nexport function decode(instruction: number) {\n  function bit(bit: number): boolean {\n    return (instruction & bit) === bit;\n  }\n  const bits = {\n    c: bit(BITS.c),\n    x1: bit(BITS.x1),\n    x2: bit(BITS.x2),\n    am: bit(BITS.am),\n    op: ((instruction & BITS.op) >> 6) as COMMANDS_OP,\n    d1: bit(BITS.d1),\n    d2: bit(BITS.d2),\n    d3: bit(BITS.d3),\n    j1: bit(BITS.j1),\n    j2: bit(BITS.j2),\n    j3: bit(BITS.j3),\n  };\n\n  return bits;\n}\n\nexport function cpuTick(\n  { inM, instruction }: CPUInput,\n  { A, D, PC }: CPUState\n): [CPUState, boolean] {\n  const bits = decode(instruction);\n  const a = bits.am ? inM : A;\n  const [ALU, flag] = alu(bits.op, D, a);\n\n  return [{ A, D, PC: PC + 1, ALU, flag }, bits.d3];\n}\n\nexport function cpuTock(\n  { inM, instruction, reset }: CPUInput,\n  { A, D, PC, ALU, flag }: CPUState\n): [CPUOutput, CPUState] {\n  const bits = decode(instruction);\n\n  const j1 = bits.j1 && flag === Flags.Positive;\n  const j2 = bits.j2 && flag === Flags.Zero;\n  const j3 = bits.j3 && flag === Flags.Negative;\n  const jmp = j1 || j2 || j3;\n\n  PC = reset ? 0 : jmp ? A : PC;\n\n  if (bits.d2) {\n    D = ALU;\n  }\n\n  if (!bits.c) {\n    A = instruction & 0x7fff;\n  } else if (bits.d1) {\n    A = ALU;\n  }\n\n  const a = bits.am ? inM : A;\n  const alu2 = alu(bits.op, D, a);\n\n  ALU = alu2[0];\n  flag = alu2[1];\n\n  const output: CPUOutput = {\n    addressM: A,\n    outM: ALU,\n    writeM: bits.d3,\n  };\n\n  const state: CPUState = {\n    A,\n    D,\n    ALU,\n    flag,\n    PC,\n  };\n\n  return [output, state];\n}\n\nexport function cpu(input: CPUInput, state: CPUState): [CPUOutput, CPUState] {\n  const [tickState, _writeM] = cpuTick(input, state);\n  return cpuTock(input, tickState);\n}\n\nexport class CPU {\n  RAM: Memory;\n  ROM: Memory;\n\n  #pc = 0;\n  #a = 0;\n  #d = 0;\n\n  #tickState: CPUState = {\n    A: 0,\n    D: 0,\n    PC: 0,\n    ALU: 0,\n    flag: Flags.Zero,\n  };\n\n  get state(): CPUState {\n    return this.#tickState;\n  }\n\n  get PC() {\n    return this.#pc;\n  }\n\n  get A() {\n    return this.#a;\n  }\n\n  get D() {\n    return this.#d;\n  }\n\n  constructor({\n    RAM = new Memory(0x7fff),\n    ROM,\n  }: {\n    RAM?: Memory;\n    ROM: Memory;\n  }) {\n    this.RAM = RAM;\n    this.ROM = ROM;\n  }\n\n  reset() {\n    this.#pc = 0;\n    this.#a = 0;\n    this.#d = 0;\n  }\n\n  tick() {\n    const [{ addressM, outM, writeM }, { A, D, PC }] = cpu(\n      {\n        inM: this.RAM.get(this.#a),\n        instruction: this.ROM.get(this.#pc),\n        reset: false,\n      },\n      {\n        A: this.#a,\n        D: this.#d,\n        PC: this.#pc,\n        ALU: this.#d,\n        flag: Flags.Zero,\n      }\n    );\n\n    this.#a = A;\n    this.#d = D;\n    this.#pc = PC;\n\n    if (writeM) {\n      this.RAM.set(addressM, outM);\n    }\n  }\n}\n","import { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs.js\";\n// import { Screen as ScreenComponent } from \"../../../../app/components/chips/screen.js\";\n// import { Keyboard as KeyboardComponent } from \"../../../../app/components/chips/keyboard.js\";\n// import { RegisterComponent } from \"../../../../app/components/chips/register.js\";\n// import { ALUComponent } from \"../../../../app/components/chips/alu.js\";\n// import { Flags } from \"../../../cpu/alu.js\";\nimport { Chip, ClockedChip, ConstantBus, HIGH, LOW, Pin } from \"../../chip.js\";\nimport { RAM, RAM16K } from \"../sequential/ram.js\";\nimport {\n  CPUInput,\n  CPUState,\n  cpuTick,\n  cpuTock,\n  emptyState,\n} from \"../../../cpu/cpu.js\";\nimport { int10 } from \"../../../util/twos.js\";\nimport { load } from \"../../../fs.js\";\nimport { KEYBOARD, SCREEN } from \"../../../cpu/memory.js\";\n\nexport class ROM32K extends RAM {\n  constructor() {\n    super(16, \"ROM\");\n  }\n\n  override async load(fs: FileSystem, path: string) {\n    try {\n      (await load(fs, path)).map((v, i) => (this.at(i).busVoltage = v));\n    } catch (cause) {\n      // throw new Error(`ROM32K Failed to load file ${path}`, { cause });\n      throw new Error(`ROM32K Failed to load file ${path}`);\n    }\n  }\n}\n\nexport class Screen extends RAM {\n  static readonly OFFSET = SCREEN;\n\n  constructor() {\n    super(13, \"Screen\");\n  }\n}\n\nexport class Keyboard extends Chip {\n  static readonly OFFSET = KEYBOARD;\n\n  constructor() {\n    super([], [\"out[16]\"], \"Keyboard\");\n  }\n\n  setKey(key: number) {\n    this.out().busVoltage = key & 0xffff;\n  }\n\n  clearKey() {\n    this.out().busVoltage = 0;\n  }\n}\n\nexport class Memory extends ClockedChip {\n  private ram = new RAM16K();\n  private screen = new Screen();\n  private keyboard = new Keyboard();\n  private address = 0;\n\n  constructor() {\n    super([\"in[16]\", \"load\", \"address[15])\"], [\"out[16]\"], \"Memory\");\n    this.parts.add(this.keyboard);\n    this.parts.add(this.screen);\n    this.parts.add(this.ram);\n  }\n\n  override tick() {\n    const load = this.in(\"load\").voltage();\n    this.address = this.in(\"address\").busVoltage;\n    if (load) {\n      const inn = this.in().busVoltage;\n      if (this.address >= Keyboard.OFFSET) {\n        // Keyboard, do nothing\n      } else if (this.address >= Screen.OFFSET) {\n        this.screen.at(this.address - Screen.OFFSET).busVoltage = inn;\n      } else {\n        this.ram.at(this.address).busVoltage = inn;\n      }\n    }\n  }\n\n  override tock() {\n    this.eval();\n  }\n\n  override eval() {\n    if (!this.ram) return;\n    this.address = this.in(\"address\").busVoltage;\n    let out = 0;\n    if (this.address >= Keyboard.OFFSET) {\n      // Keyboard, do nothing\n      out = this.keyboard?.out().busVoltage ?? 0;\n    } else if (this.address >= Screen.OFFSET) {\n      out = this.screen?.at(this.address - Screen.OFFSET).busVoltage ?? 0;\n    } else {\n      out = this.ram?.at(this.address).busVoltage ?? 0;\n    }\n    this.out().busVoltage = out;\n  }\n\n  override in(pin?: string): Pin {\n    if (pin?.startsWith(\"RAM16K\")) {\n      const idx = int10(pin.match(/\\[(?<idx>\\d+)]/)?.groups?.idx ?? \"0\");\n      return this.ram.at(idx);\n    }\n    if (pin?.startsWith(\"Screen\")) {\n      const idx = int10(pin.match(/\\[(?<idx>\\d+)]/)?.groups?.idx ?? \"0\");\n      return this.screen.at(idx);\n    }\n    return super.in(pin);\n  }\n\n  override get(name: string, offset = 0): Pin | undefined {\n    if (name.startsWith(\"RAM16K\")) {\n      return this.at(offset & 0x3fff);\n    }\n    if (name.startsWith(\"Screen\")) {\n      return this.at(offset & (0x1fff + Screen.OFFSET));\n    }\n    if (name.startsWith(\"Keyboard\")) {\n      return this.at(Keyboard.OFFSET);\n    }\n    if (name.startsWith(\"Memory\")) {\n      return this.at(offset);\n    }\n    return super.get(name, offset);\n  }\n\n  at(offset: number): Pin {\n    if (offset >= Keyboard.OFFSET) {\n      return this.keyboard.out();\n    }\n    if (offset >= Screen.OFFSET) {\n      return this.screen.at(offset - Screen.OFFSET);\n    } else {\n      return this.ram.at(offset);\n    }\n  }\n}\n\nexport class CPU extends ClockedChip {\n  private _state: CPUState = emptyState();\n\n  get state(): CPUState {\n    return this._state;\n  }\n\n  constructor() {\n    super(\n      [\"inM[16]\", \"instruction[16]\", \"reset\"],\n      [\"outM[16]\", \"writeM\", \"addressM[15]\", \"pc[15]\"]\n    );\n  }\n\n  override tick(): void {\n    const [state, writeM] = cpuTick(this.cpuInput(), this._state);\n    this._state = state;\n    this.out(\"writeM\").pull(writeM ? HIGH : LOW);\n    this.out(\"outM\").busVoltage = this._state.ALU ?? 0;\n  }\n\n  override tock(): void {\n    if (!this._state) return; // Skip initial tock\n    const [output, state] = cpuTock(this.cpuInput(), this._state);\n    this._state = state;\n\n    this.out(\"addressM\").busVoltage = output.addressM ?? 0;\n    this.out(\"outM\").busVoltage = output.outM ?? 0;\n    this.out(\"writeM\").pull(output.writeM ? HIGH : LOW);\n    this.out(\"pc\").busVoltage = this._state?.PC ?? 0;\n  }\n\n  private cpuInput(): CPUInput {\n    const inM = this.in(\"inM\").busVoltage;\n    const instruction = this.in(\"instruction\").busVoltage;\n    const reset = this.in(\"reset\").busVoltage === 1;\n    return { inM, instruction, reset };\n  }\n\n  override get(pin: string, offset?: number): Pin | undefined {\n    if (pin?.startsWith(\"ARegister\")) {\n      return new ConstantBus(\"ARegister\", this._state.A);\n    }\n    if (pin?.startsWith(\"DRegister\")) {\n      return new ConstantBus(\"DRegister\", this._state.D);\n    }\n    if (pin?.startsWith(\"PC\")) {\n      return new ConstantBus(\"PC\", this._state.PC);\n    }\n    return super.get(pin, offset);\n  }\n\n  override reset() {\n    this._state = emptyState();\n    super.reset();\n  }\n}\n\nexport class Computer extends Chip {\n  #ram = new Memory();\n  #rom = new ROM32K();\n  #cpu = new CPU();\n\n  constructor() {\n    super([\"reset\"], []);\n\n    this.wire(this.#cpu, [\n      { from: { name: \"reset\", start: 0 }, to: { name: \"reset\", start: 0 } },\n      {\n        from: { name: \"instruction\", start: 0 },\n        to: { name: \"instruction\", start: 0 },\n      },\n      { from: { name: \"outM\", start: 0 }, to: { name: \"inM\", start: 0 } },\n      { from: { name: \"writeM\", start: 0 }, to: { name: \"writeM\", start: 0 } },\n      {\n        from: { name: \"addressM\", start: 0 },\n        to: { name: \"addressM\", start: 0 },\n      },\n    ]);\n\n    this.wire(this.#rom, [\n      { from: { name: \"pc\", start: 0 }, to: { name: \"address\", start: 0 } },\n      {\n        from: { name: \"instruction\", start: 0 },\n        to: { name: \"out\", start: 0 },\n      },\n    ]);\n\n    this.wire(this.#ram, [\n      { from: { name: \"inM\", start: 0 }, to: { name: \"in\", start: 0 } },\n      { from: { name: \"writeM\", start: 0 }, to: { name: \"load\", start: 0 } },\n      {\n        from: { name: \"addressM\", start: 0 },\n        to: { name: \"address\", start: 0 },\n      },\n      { from: { name: \"outM\", start: 0 }, to: { name: \"out\", start: 0 } },\n    ]);\n  }\n\n  override eval() {\n    super.eval();\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    if (\n      name.startsWith(\"PC\") ||\n      name.startsWith(\"ARegister\") ||\n      name.startsWith(\"DRegister\")\n    ) {\n      return this.#cpu.get(name);\n    }\n    if (name.startsWith(\"RAM16K\")) {\n      return this.#ram.get(name, offset);\n    }\n    return super.get(name, offset);\n  }\n\n  override load(fs: FileSystem, path: string): Promise<void> {\n    return this.#rom.load(fs, path);\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip.js\";\n\nexport function and(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 && b === 1 ? HIGH : LOW];\n}\n\nexport function and16(a: number, b: number): [number] {\n  return [a & b & 0xffff];\n}\n\nexport class And extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [n] = and(a, b);\n    this.out().pull(n);\n  }\n}\n\nexport class And16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [n] = and16(a, b);\n    this.out().busVoltage = n;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip.js\";\n\nexport function dmux(inn: Voltage, sel: Voltage): [Voltage, Voltage] {\n  const a = sel === LOW && inn === HIGH ? HIGH : LOW;\n  const b = sel === HIGH && inn === HIGH ? HIGH : LOW;\n  return [a, b];\n}\n\nexport function dmux4way(\n  inn: Voltage,\n  sel: number\n): [Voltage, Voltage, Voltage, Voltage] {\n  const a = sel === 0b00 && inn === HIGH ? HIGH : LOW;\n  const b = sel === 0b01 && inn === HIGH ? HIGH : LOW;\n  const c = sel === 0b10 && inn === HIGH ? HIGH : LOW;\n  const d = sel === 0b11 && inn === HIGH ? HIGH : LOW;\n  return [a, b, c, d];\n}\n\nexport function dmux8way(\n  inn: Voltage,\n  sel: number\n): [Voltage, Voltage, Voltage, Voltage, Voltage, Voltage, Voltage, Voltage] {\n  const a = sel === 0b000 && inn === HIGH ? HIGH : LOW;\n  const b = sel === 0b001 && inn === HIGH ? HIGH : LOW;\n  const c = sel === 0b010 && inn === HIGH ? HIGH : LOW;\n  const d = sel === 0b011 && inn === HIGH ? HIGH : LOW;\n  const e = sel === 0b100 && inn === HIGH ? HIGH : LOW;\n  const f = sel === 0b101 && inn === HIGH ? HIGH : LOW;\n  const g = sel === 0b110 && inn === HIGH ? HIGH : LOW;\n  const h = sel === 0b111 && inn === HIGH ? HIGH : LOW;\n  return [a, b, c, d, e, f, g, h];\n}\n\nexport class DMux extends Chip {\n  constructor() {\n    super([\"in\", \"sel\"], [\"a\", \"b\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").voltage();\n\n    const [a, b] = dmux(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n  }\n}\n\nexport class DMux4Way extends Chip {\n  constructor() {\n    super([\"in\", \"sel[2]\"], [\"a\", \"b\", \"c\", \"d\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").busVoltage;\n\n    const [a, b, c, d] = dmux4way(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n    this.out(\"c\").pull(c);\n    this.out(\"d\").pull(d);\n  }\n}\n\nexport class DMux8Way extends Chip {\n  constructor() {\n    super([\"in\", \"sel[3]\"], [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]);\n  }\n\n  override eval() {\n    const inn = this.in(\"in\").voltage();\n    const sel = this.in(\"sel\").busVoltage;\n\n    const [a, b, c, d, e, f, g, h] = dmux8way(inn, sel);\n    this.out(\"a\").pull(a);\n    this.out(\"b\").pull(b);\n    this.out(\"c\").pull(c);\n    this.out(\"d\").pull(d);\n    this.out(\"e\").pull(e);\n    this.out(\"f\").pull(f);\n    this.out(\"g\").pull(g);\n    this.out(\"h\").pull(h);\n  }\n}\n","import { Chip, LOW, Voltage } from \"../../chip.js\";\n\nexport function mux(a: Voltage, b: Voltage, sel: Voltage): [Voltage] {\n  return [sel === LOW ? a : b];\n}\n\nexport function mux16(a: number, b: number, sel: Voltage): [number] {\n  return [sel === LOW ? a : b];\n}\n\nexport function mux16_4(\n  a: number,\n  b: number,\n  c: number,\n  d: number,\n  sel: number\n): [number] {\n  const s2 = (sel & 0b01) as Voltage;\n  return (sel & 0b10) === 0b00 ? mux16(a, b, s2) : mux16(c, d, s2);\n}\n\nexport function mux16_8(\n  a: number,\n  b: number,\n  c: number,\n  d: number,\n  e: number,\n  f: number,\n  g: number,\n  h: number,\n  sel: number\n): [number] {\n  const s2 = (sel & 0b11) as Voltage;\n  return (sel & 0b100) === 0b000\n    ? mux16_4(a, b, c, d, s2)\n    : mux16_4(e, f, g, h, s2);\n}\n\nexport class Mux extends Chip {\n  constructor() {\n    super([\"a\", \"b\", \"sel\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const sel = this.in(\"sel\").voltage();\n\n    const [set] = mux(a, b, sel);\n    this.out().pull(set);\n  }\n}\n\nexport class Mux16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\", \"sel\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const sel = this.in(\"sel\").voltage();\n    const [out] = mux16(a, b, sel);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Mux4Way16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\", \"c[16]\", \"d[16]\", \"sel[2]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const c = this.in(\"c\").busVoltage;\n    const d = this.in(\"d\").busVoltage;\n    const sel = this.in(\"sel\").busVoltage;\n    const [out] = mux16_4(a, b, c, d, sel);\n\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Mux8Way16 extends Chip {\n  constructor() {\n    super(\n      [\n        \"a[16]\",\n        \"b[16]\",\n        \"c[16]\",\n        \"d[16]\",\n        \"e[16]\",\n        \"f[16]\",\n        \"g[16]\",\n        \"h[16]\",\n        \"sel[3]\",\n      ],\n      [\"out[16]\"]\n    );\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const c = this.in(\"c\").busVoltage;\n    const d = this.in(\"d\").busVoltage;\n    const e = this.in(\"e\").busVoltage;\n    const f = this.in(\"f\").busVoltage;\n    const g = this.in(\"g\").busVoltage;\n    const h = this.in(\"h\").busVoltage;\n    const sel = this.in(\"sel\").busVoltage;\n    const [out] = mux16_8(a, b, c, d, e, f, g, h, sel);\n\n    this.out().busVoltage = out;\n  }\n}\n","import { nand16 } from \"../../../util/twos.js\";\nimport { HIGH, LOW, Chip, Voltage } from \"../../chip.js\";\n\nexport function nand(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 && b === 1 ? LOW : HIGH];\n}\n\nexport class Nand extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = nand(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Nand16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    this.out().busVoltage = nand16(a, b);\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip.js\";\n\nexport function not(inn: Voltage): [Voltage] {\n  return [inn === LOW ? HIGH : LOW];\n}\n\nexport function not16(inn: number): [number] {\n  return [~inn & 0xffff];\n}\n\nexport class Not extends Chip {\n  constructor() {\n    super([\"in\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"in\").voltage();\n    const [out] = not(a);\n    this.out().pull(out);\n  }\n}\n\nexport class Not16 extends Chip {\n  constructor() {\n    super([\"in[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const [n] = not16(this.in().busVoltage);\n    this.out().busVoltage = n;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip.js\";\n\nexport function or(a: Voltage, b: Voltage): [Voltage] {\n  return [a === 1 || b === 1 ? HIGH : LOW];\n}\n\nexport function or16(a: number, b: number): [number] {\n  return [(a | b) & 0xffff];\n}\n\nexport function or8way(a: number): [Voltage] {\n  return [(a & 0xff) === 0 ? LOW : HIGH];\n}\n\nexport class Or extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = or(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Or16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = or16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class Or8way extends Chip {\n  constructor() {\n    super([\"in[8]\"], [\"out\"], \"Or8way\");\n  }\n\n  override eval() {\n    const inn = this.in().busVoltage;\n    const [out] = or8way(inn);\n    this.out().pull(out);\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip.js\";\n\nexport function xor(a: Voltage, b: Voltage): [Voltage] {\n  return [(a === HIGH && b === LOW) || (a === LOW && b === HIGH) ? HIGH : LOW];\n}\n\nexport function xor16(a: number, b: number): [number] {\n  return [(a ^ b) & 0xffff];\n}\n\nexport class Xor extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"out\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [out] = xor(a, b);\n    this.out().pull(out);\n  }\n}\n\nexport class Xor16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = xor16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n","import { Chip } from \"../../chip.js\";\n\nexport function add16(a: number, b: number): [number] {\n  return [(a + b) & 0xffff];\n}\n\nexport class Add16 extends Chip {\n  constructor() {\n    super([\"a[16]\", \"b[16]\"], [\"out[16]\"], \"Add16\");\n  }\n\n  override eval() {\n    const a = this.in(\"a\").busVoltage;\n    const b = this.in(\"b\").busVoltage;\n    const [out] = add16(a, b);\n    this.out().busVoltage = out;\n  }\n}\n","import { alu, COMMANDS_OP, Flags } from \"../../../cpu/alu.js\";\nimport { Chip, HIGH, LOW } from \"../../chip.js\";\n\nexport class ALUNoStat extends Chip {\n  constructor() {\n    super(\n      [\n        \"x[16]\",\n        \"y[16]\", // 16-bit inputs\n        \"zx\", // zero the x input?\n        \"nx\", // negate the x input?\n        \"zy\", // zero the y input?\n        \"ny\", // negate the y input?\n        \"f\", // compute out = x + y (if 1) or x & y (if 0)\n        \"no\", // negate the out output?\n      ],\n      [\n        \"out[16]\", // 16-bit output\n      ],\n      \"ALU\"\n    );\n  }\n\n  override eval() {\n    const x = this.in(\"x\").busVoltage;\n    const y = this.in(\"y\").busVoltage;\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    const [out] = alu(op, x, y);\n    this.out().busVoltage = out;\n  }\n}\n\nexport class ALU extends Chip {\n  constructor() {\n    super(\n      [\n        \"x[16]\",\n        \"y[16]\", // 16-bit inputs\n        \"zx\", // zero the x input?\n        \"nx\", // negate the x input?\n        \"zy\", // zero the y input?\n        \"ny\", // negate the y input?\n        \"f\", // compute out = x + y (if 1) or x & y (if 0)\n        \"no\", // negate the out output?\n      ],\n      [\n        \"out[16]\", // 16-bit output\n        \"zr\", // 1 if (out === 0), 0 otherwise\n        \"ng\", // 1 if (out < 0),  0 otherwise\n      ],\n      \"ALU\"\n    );\n  }\n\n  override eval() {\n    const x = this.in(\"x\").busVoltage;\n    const y = this.in(\"y\").busVoltage;\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    const [out, flags] = alu(op, x, y);\n    const ng = flags === Flags.Negative ? HIGH : LOW;\n    const zr = flags === Flags.Zero ? HIGH : LOW;\n    this.out(\"out\").busVoltage = out;\n    this.out(\"ng\").pull(ng);\n    this.out(\"zr\").pull(zr);\n  }\n\n  op(): COMMANDS_OP {\n    const zx = this.in(\"zx\").busVoltage << 5;\n    const nx = this.in(\"nx\").busVoltage << 4;\n    const zy = this.in(\"zy\").busVoltage << 3;\n    const ny = this.in(\"ny\").busVoltage << 2;\n    const f = this.in(\"f\").busVoltage << 1;\n    const no = this.in(\"no\").busVoltage << 0;\n    const op = zx + nx + zy + ny + f + no;\n    return op as COMMANDS_OP;\n  }\n}\n","import { Chip, HIGH, LOW, Voltage } from \"../../chip.js\";\n\nexport function halfAdder(a: Voltage, b: Voltage): [Voltage, Voltage] {\n  const sum = (a === 1 && b === 0) || (a === 0 && b === 1) ? HIGH : LOW;\n  const car = a === 1 && b === 1 ? HIGH : LOW;\n\n  return [sum, car];\n}\n\nexport class HalfAdder extends Chip {\n  constructor() {\n    super([\"a\", \"b\"], [\"sum\", \"carry\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const [sum, carry] = halfAdder(a, b);\n    this.out(\"sum\").pull(sum);\n    this.out(\"carry\").pull(carry);\n  }\n}\n","import { Chip, Voltage } from \"../../chip.js\";\nimport { or } from \"../logic/or.js\";\nimport { halfAdder } from \"./half_adder.js\";\n\nexport function fullAdder(\n  a: Voltage,\n  b: Voltage,\n  c: Voltage\n): [Voltage, Voltage] {\n  const [s, ca] = halfAdder(a, b);\n  const [sum, cb] = halfAdder(s, c);\n  const [carry] = or(ca, cb);\n\n  return [sum, carry];\n}\n\nexport class FullAdder extends Chip {\n  constructor() {\n    super([\"a\", \"b\", \"c\"], [\"sum\", \"carry\"]);\n  }\n\n  override eval() {\n    const a = this.in(\"a\").voltage();\n    const b = this.in(\"b\").voltage();\n    const c = this.in(\"c\").voltage();\n    const [sum, carry] = fullAdder(a, b, c);\n    this.out(\"sum\").pull(sum);\n    this.out(\"carry\").pull(carry);\n  }\n}\n","import { Chip } from \"../../chip.js\";\nimport { add16 } from \"./add_16.js\";\n\nexport function inc16(n: number): [number] {\n  return add16(n, 1);\n}\n\nexport class Inc16 extends Chip {\n  constructor() {\n    super([\"in[16]\"], [\"out[16]\"], \"Inc16\");\n  }\n\n  override eval() {\n    const a = this.in().busVoltage;\n    const [out] = inc16(a);\n    this.out().busVoltage = out;\n  }\n}\n","import { ClockedChip, HIGH, LOW, Pin, Voltage } from \"../../chip.js\";\n\nexport class Bit extends ClockedChip {\n  bit: Voltage = LOW;\n\n  constructor(name?: string) {\n    super([\"in\", \"load\"], [\"out\"], name);\n  }\n\n  override tick() {\n    if (this.in(\"load\").voltage() === HIGH) {\n      this.bit = this.in().voltage();\n    }\n  }\n\n  override tock() {\n    this.out().pull(this.bit ?? 0);\n  }\n\n  override reset() {\n    this.bit = LOW;\n  }\n}\n\nexport class Register extends ClockedChip {\n  bits = 0x00;\n\n  constructor(name?: string) {\n    super([\"in[16]\", \"load\"], [\"out[16]\"], name);\n  }\n\n  override tick() {\n    if (this.in(\"load\").voltage() === HIGH) {\n      this.bits = this.in().busVoltage & 0xffff;\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.bits & 0xffff;\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    return name === this.name ? this.out() : super.get(name, offset);\n  }\n\n  override reset() {\n    this.bits = 0x00;\n  }\n}\n\nexport class VRegister extends Register {}\n\nexport class PC extends ClockedChip {\n  bits = 0x00;\n\n  constructor(name?: string) {\n    super([\"in[16]\", \"load\", \"inc\", \"reset\"], [\"out[16]\"], name);\n  }\n\n  override tick() {\n    if (this.in(\"reset\").voltage() === HIGH) {\n      this.bits = 0;\n    } else if (this.in(\"load\").voltage() === HIGH) {\n      this.bits = this.in().busVoltage & 0xffff;\n    } else if (this.in(\"inc\").voltage() === HIGH) {\n      this.bits += 1;\n    }\n  }\n\n  override tock() {\n    this.out().busVoltage = this.bits & 0xffff;\n  }\n\n  override get(name: string, offset?: number): Pin | undefined {\n    return name === this.name ? this.out() : super.get(name, offset);\n  }\n\n  override reset() {\n    this.bits = 0x00;\n  }\n}\n","import { Err, Ok, Result } from \"@davidsouther/jiffies/lib/esm/result.js\";\nimport { Chip } from \"../chip.js\";\n\nimport { And, And16 } from \"./logic/and.js\";\nimport { DMux, DMux4Way, DMux8Way } from \"./logic/dmux.js\";\nimport { Mux, Mux16, Mux4Way16, Mux8Way16 } from \"./logic/mux.js\";\nimport { Nand, Nand16 } from \"./logic/nand.js\";\nimport { Not, Not16 } from \"./logic/not.js\";\nimport { Or, Or16, Or8way } from \"./logic/or.js\";\nimport { Xor, Xor16 } from \"./logic/xor.js\";\n\nimport { Add16 } from \"./arithmetic/add_16.js\";\nimport { ALU, ALUNoStat } from \"./arithmetic/alu.js\";\nimport { FullAdder } from \"./arithmetic/full_adder.js\";\nimport { HalfAdder } from \"./arithmetic/half_adder.js\";\nimport { Inc16 } from \"./arithmetic/inc16.js\";\n\nimport {\n  Computer,\n  CPU,\n  Keyboard,\n  Memory,\n  ROM32K,\n  Screen,\n} from \"./computer/computer.js\";\nimport { Bit, PC, Register, VRegister } from \"./sequential/bit.js\";\nimport { DFF } from \"./sequential/dff.js\";\nimport { RAM16K, RAM4K, RAM512, RAM64, RAM8 } from \"./sequential/ram.js\";\n\nexport {\n  And,\n  And16,\n  DMux,\n  Mux,\n  Mux16,\n  Mux4Way16,\n  Mux8Way16,\n  Nand,\n  Nand16,\n  Not,\n  Not16,\n  Or,\n  Or16,\n  Or8way,\n  Xor,\n  Xor16,\n  HalfAdder,\n  FullAdder,\n  Add16,\n  Inc16,\n  ALU,\n  Bit,\n  Register,\n  VRegister as ARegister,\n  VRegister as DRegister,\n  DFF,\n  RAM8,\n  RAM64,\n  RAM512,\n  RAM4K,\n  RAM16K,\n};\n\nexport const REGISTRY = new Map<string, () => Chip>(\n  (\n    [\n      [\"Nand\", Nand],\n      [\"Nand16\", Nand16],\n      [\"Not\", Not],\n      [\"Not16\", Not16],\n      [\"And\", And],\n      [\"And16\", And16],\n      [\"Or\", Or],\n      [\"Or16\", Or16],\n      [\"Or8Way\", Or8way],\n      [\"XOr\", Xor],\n      [\"XOr16\", Xor16],\n      [\"Xor\", Xor],\n      [\"Xor16\", Xor16],\n      [\"Mux\", Mux],\n      [\"Mux16\", Mux16],\n      [\"Mux4Way16\", Mux4Way16],\n      [\"Mux8Way16\", Mux8Way16],\n      [\"DMux\", DMux],\n      [\"DMux4Way\", DMux4Way],\n      [\"DMux8Way\", DMux8Way],\n      [\"HalfAdder\", HalfAdder],\n      [\"FullAdder\", FullAdder],\n      [\"Add16\", Add16],\n      [\"Inc16\", Inc16],\n      [\"ALU\", ALU],\n      [\"ALUNoStat\", ALUNoStat],\n      [\"DFF\", DFF],\n      [\"Bit\", Bit],\n      [\"Register\", Register],\n      [\"ARegister\", Register],\n      [\"DRegister\", Register],\n      [\"PC\", PC],\n      [\"RAM8\", RAM8],\n      [\"RAM64\", RAM64],\n      [\"RAM512\", RAM512],\n      [\"RAM4K\", RAM4K],\n      [\"RAM16K\", RAM16K],\n      [\"ROM32K\", ROM32K],\n      [\"Screen\", Screen],\n      [\"Keyboard\", Keyboard],\n      [\"CPU\", CPU],\n      [\"Computer\", Computer],\n      [\"Memory\", Memory],\n      [\"ARegister\", VRegister],\n      [\"DRegister\", VRegister],\n    ] as [string, { new (): Chip }][]\n  ).map(([name, ChipCtor]) => [\n    name,\n    () => {\n      const chip = new ChipCtor();\n      chip.name = name;\n      return chip;\n    },\n  ])\n);\n\nexport function getBuiltinChip(name: string): Result<Chip> {\n  const chip = REGISTRY.get(name);\n  return chip\n    ? Ok(chip())\n    : Err(new Error(`Chip ${name} not in builtin registry`));\n}\n","import { ClockedChip } from \"../../chip.js\";\n\nexport class DFF extends ClockedChip {\n  constructor(name?: string) {\n    super([\"in\"], [\"out\"], name, [\"t\"]);\n  }\n\n  override tick() {\n    // Read in into t\n    const t = this.in().voltage();\n    this.pin(\"t\").pull(t);\n  }\n\n  override tock() {\n    // write t into out\n    const t = this.pin(\"t\").voltage();\n    this.out().pull(t);\n  }\n}\n","import {\n  COMMANDS,\n  COMMANDS_OP,\n  Flags,\n} from \"@computron5k/simulator/cpu/alu.js\";\nimport { bin } from \"@computron5k/simulator/util/twos.js\";\n\nexport const ALUComponent = ({\n  A,\n  op,\n  D,\n  out,\n  flag,\n}: {\n  A: number;\n  op: COMMANDS_OP;\n  D: number;\n  out: number;\n  flag: keyof typeof Flags;\n}) => (\n  <div>\n    <span>ALU</span>\n    <dl>\n      <dt>A</dt> <dd>{bin(A)}</dd>\n      <dt>op</dt> <dd>{COMMANDS.op[op] ?? \"(??)\"}</dd>\n      <dt>D</dt> <dd>{bin(D)}</dd>\n      <dt>=</dt> <dd>{bin(out)}</dd>\n      <dd>{Flags[flag as keyof typeof Flags]}</dd>\n    </dl>\n  </div>\n);\n","import { dec } from \"@computron5k/simulator/util/twos.js\";\n\nexport const RegisterComponent = ({\n  name,\n  bits,\n}: {\n  name: string;\n  bits: number;\n}) => (\n  <div>\n    {name}: {dec(bits)}\n  </div>\n);\n","import { Keyboard as KeyboardChip } from \"@computron5k/simulator/chip/builtins/computer/computer.js\";\nimport { KeyboardEvent, useCallback, useState } from \"react\";\nimport { RegisterComponent } from \"./register.js\";\n\nconst KeyMap: Record<string, number | undefined> = {\n  // Delete: 127,\n  Enter: 128,\n  Backspace: 129,\n  ArrowLeft: 130,\n  ArrowUp: 131,\n  ArrowRight: 132,\n  ArrowDown: 133,\n  Home: 134,\n  End: 135,\n  PageUp: 136,\n  PageDown: 137,\n  Insert: 138,\n  Delete: 139,\n  Escape: 140,\n  F1: 141,\n  F2: 142,\n  F3: 143,\n  F4: 144,\n  F5: 145,\n  F6: 146,\n  F7: 147,\n  F8: 148,\n  F9: 149,\n  F10: 150,\n  F11: 151,\n  F12: 152,\n};\n\nfunction keyPressToHackCharacter(keypress: KeyboardEvent): number {\n  const mapping = KeyMap[keypress.key];\n  if (mapping !== undefined) {\n    return mapping;\n  }\n  if (keypress.key.length === 1) {\n    const code = keypress.key.charCodeAt(0);\n    if (code >= 32 && code <= 126) {\n      return code;\n    }\n  }\n\n  return 0;\n}\n\nexport const Keyboard = ({ keyboard }: { keyboard: KeyboardChip }) => {\n  const [showPicker, setShowPicker] = useState(false);\n  const [bits, setBits] = useState(keyboard.out().busVoltage);\n\n  const setKey = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      const key = keyPressToHackCharacter(event);\n      if (key === 0) {\n        return;\n      }\n      event.preventDefault();\n      keyboard.setKey(key);\n      setBits(keyboard.out().busVoltage);\n      setShowPicker(false);\n    },\n    [keyboard, setShowPicker, setBits]\n  );\n\n  const changeKey = useCallback(() => {\n    setShowPicker(true);\n  }, []);\n\n  return (\n    <div className=\"flex row align-baseline\">\n      <div className=\"flex-1\">\n        <RegisterComponent name=\"Keyboard\" bits={bits} />\n      </div>\n      <div className=\"flex-1\">\n        {showPicker ? (\n          <input ref={(e) => e?.focus()} type=\"text\" onKeyDown={setKey} />\n        ) : (\n          <button onClick={changeKey}>\n            {/* <Icon name=\"keyboard\" /> */}\n            ⌨️\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import produce from \"immer\";\nimport { Dispatch, useEffect, useReducer, useState } from \"react\";\n\nexport function useImmerReducer<\n  T,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Reducers extends Record<string, (state: T, action?: any) => T | void>\n>(reducers: Reducers, initialState: T) {\n  return useReducer(\n    (\n      state: T,\n      command: {\n        action: keyof Reducers;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        payload?: any;\n      }\n    ): T =>\n      produce(state, (draft: T) => {\n        reducers[command.action](draft, command.payload);\n      }),\n    initialState\n  );\n}\n\nexport function useStateInitializer<T>(init: T): [T, Dispatch<T>] {\n  const [state, setState] = useState<T>(init);\n  useEffect(() => {\n    setState(init);\n  }, [init]);\n  return [state, setState];\n}\n","import { width } from \"@davidsouther/jiffies/lib/esm/dom/css/sizing.js\";\nimport { useCallback, useState } from \"react\";\nimport { useStateInitializer } from \"./react.js\";\n\nconst Mode = { VIEW: 0, EDIT: 1 };\n\nexport const InlineEdit = (props: {\n  mode?: keyof typeof Mode;\n  value: string;\n  onChange: (value: string) => void;\n}) => {\n  const [mode, setMode] = useState(props.mode ?? Mode.VIEW);\n  const [value, setValue] = useStateInitializer(props.value);\n\n  const render = () => {\n    switch (mode) {\n      case Mode.EDIT:\n        return edit();\n      case Mode.VIEW:\n        return view();\n      default:\n        return <span />;\n    }\n  };\n\n  const view = () => (\n    <span\n      style={{ cursor: \"text\", ...width(\"full\", \"inline\") }}\n      onClick={() => {\n        setMode(Mode.EDIT);\n      }}\n    >\n      {value}\n    </span>\n  );\n\n  const doSelect = useCallback(\n    (ref: HTMLInputElement | null) => ref?.select(),\n    []\n  );\n  const doChange = useCallback(\n    (target: HTMLInputElement) => {\n      setMode(Mode.VIEW);\n      setValue(target.value ?? \"\");\n      props.onChange(target.value ?? \"\");\n    },\n    [props, setMode, setValue]\n  );\n  const edit = () => {\n    const edit = (\n      <span style={{ display: \"block\", position: \"relative\" }}>\n        <input\n          ref={doSelect}\n          style={{\n            zIndex: \"10\",\n            position: \"absolute\",\n            left: \"0\",\n            marginTop: \"-0.375rem\",\n          }}\n          onBlur={({ target }) => doChange(target)}\n          onKeyPress={({ key, target }) => {\n            if (key === \"Enter\") {\n              doChange(target as HTMLInputElement);\n            }\n          }}\n          type=\"text\"\n          defaultValue={value}\n        />\n      </span>\n    );\n    return edit;\n  };\n\n  return render();\n};\n\nexport default InlineEdit;\n","/* eslint-disable @typescript-eslint/ban-types */\nimport {\n  Key,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n} from \"react\";\n\nexport interface VirtualScrollSettings {\n  /**Minimum offset into the adapter. Default is 0.  */\n  minIndex: number;\n  /** Maximum offset into the adapter. Default is Number.MAX_SAFE_INTEGER.  */\n  maxIndex: number;\n  /** Initial index to start rendering from. Default is minIndex.  */\n  startIndex: number;\n  /**\n   * Number of items to render in visible area. Default is entire range from\n   * minIndex to maxIndex.\n   */\n  count: number;\n  /**\n   * Maximum number of items to render on either side of the visible area.\n   * Default is `count`.\n   */\n  tolerance: number;\n  /** Height of each item, in pixels. Default is 20px. */\n  itemHeight: number;\n}\n\nexport interface VirtualScrollDataAdapter<T> {\n  (offset: number, limit: number): Iterable<T>;\n}\n\nexport function arrayAdapter<T>(data: T[]): VirtualScrollDataAdapter<T> {\n  return (offset, limit) => data.slice(offset, offset + limit);\n}\n\nexport interface VirtualScrollProps<T, U extends ReactNode> {\n  settings?: Partial<VirtualScrollSettings>;\n  get: VirtualScrollDataAdapter<T>;\n  row: (t: T) => U;\n  rowKey: (t: T) => Key;\n}\n\nexport function fillVirtualScrollSettings(\n  settings: Partial<VirtualScrollSettings>\n): VirtualScrollSettings {\n  const {\n    minIndex = 0,\n    maxIndex = Number.MAX_SAFE_INTEGER,\n    startIndex = 0,\n    itemHeight = 20,\n    count = maxIndex - minIndex + 1,\n    tolerance = count,\n  } = settings;\n\n  return { minIndex, maxIndex, startIndex, itemHeight, count, tolerance };\n}\n\nexport function initialState<T>(\n  settings: VirtualScrollSettings,\n  adapter: VirtualScrollDataAdapter<T>\n): VirtualScrollState<T> {\n  // From Denis Hilt, https://blog.logrocket.com/virtual-scrolling-core-principles-and-basic-implementation-in-react/\n  const { minIndex, maxIndex, startIndex, itemHeight, count, tolerance } =\n    settings;\n  const bufferedItems = count + 2 * tolerance;\n  const itemsAbove = Math.max(0, startIndex - tolerance - minIndex);\n\n  const viewportHeight = count * itemHeight;\n  const totalHeight = (maxIndex - minIndex + 1) * itemHeight;\n  const toleranceHeight = tolerance * itemHeight;\n  const bufferHeight = viewportHeight + 2 * toleranceHeight;\n  const topPaddingHeight = itemsAbove * itemHeight;\n  const bottomPaddingHeight = totalHeight - (topPaddingHeight + bufferHeight);\n\n  const state: VirtualScrollState<T> = {\n    scrollTop: 0,\n    settings,\n    viewportHeight,\n    totalHeight,\n    toleranceHeight,\n    bufferedItems,\n    topPaddingHeight,\n    bottomPaddingHeight,\n    data: [],\n  };\n\n  return {\n    ...state,\n    ...doScroll(topPaddingHeight + toleranceHeight, state, adapter),\n  };\n}\n\nexport function getData<T>(\n  minIndex: number,\n  maxIndex: number,\n  offset: number,\n  limit: number,\n  get: VirtualScrollDataAdapter<T>\n): T[] {\n  const start = Math.max(0, minIndex, offset);\n  const end = Math.min(maxIndex, offset + limit - 1);\n  const data = get(start, end - start);\n  return [...data];\n}\n\ninterface ScrollUpdate<T> {\n  scrollTop: number;\n  topPaddingHeight: number;\n  bottomPaddingHeight: number;\n  data: T[];\n}\n\nexport function doScroll<T>(\n  scrollTop: number,\n  state: VirtualScrollState<T>,\n  get: VirtualScrollDataAdapter<T>\n): ScrollUpdate<T> {\n  const {\n    totalHeight,\n    toleranceHeight,\n    bufferedItems,\n    settings: { itemHeight, minIndex, maxIndex },\n  } = state;\n  const index =\n    minIndex + Math.floor((scrollTop - toleranceHeight) / itemHeight);\n  const data = getData(minIndex, maxIndex, index, bufferedItems, get);\n  const topPaddingHeight = Math.max((index - minIndex) * itemHeight, 0);\n  const bottomPaddingHeight = Math.max(\n    totalHeight - (topPaddingHeight + data.length * itemHeight),\n    0\n  );\n\n  return { scrollTop, topPaddingHeight, bottomPaddingHeight, data };\n}\n\ninterface VirtualScrollState<T> {\n  settings: VirtualScrollSettings;\n  scrollTop: number; // px\n  bufferedItems: number; // count\n  totalHeight: number; // px\n  viewportHeight: number; // px\n  topPaddingHeight: number; // px\n  bottomPaddingHeight: number; // px\n  toleranceHeight: number; // px\n  data: T[];\n}\n\nconst scrollReducer =\n  <T extends {}>(get: VirtualScrollDataAdapter<T>) =>\n  (state: VirtualScrollState<T>, scrollTop: number) => ({\n    ...state,\n    ...doScroll(scrollTop, state, get),\n  });\n\nexport const VirtualScroll = <T extends {}, U extends ReactNode = ReactNode>(\n  props: VirtualScrollProps<T, U> & { className?: string }\n) => {\n  const viewportRef = useRef<HTMLDivElement | null>(null);\n\n  const { settings, startState, reducer } = useMemo(() => {\n    const settings = fillVirtualScrollSettings(props.settings ?? {});\n    const startState = initialState<T>(settings, props.get);\n    const reducer = scrollReducer(props.get);\n    return { settings, reducer, startState };\n  }, [props.settings, props.get]);\n\n  const [state, dispatchScroll] = useReducer(reducer, startState);\n\n  useEffect(() => {\n    if (viewportRef.current !== null) {\n      dispatchScroll(viewportRef.current.scrollTop);\n    }\n  }, [settings, props.row]);\n\n  const initialScroll = useCallback(\n    (div: HTMLDivElement | null) => {\n      if (div) {\n        div.scrollTop = viewportRef.current\n          ? viewportRef.current.scrollTop\n          : settings.startIndex * settings.itemHeight;\n      }\n      viewportRef.current = div;\n    },\n    [viewportRef, settings.startIndex, settings.itemHeight]\n  );\n\n  const rows = state.data.map((d) => (\n    <div key={props.rowKey(d)} style={{ height: `${settings.itemHeight}px` }}>\n      {props.row(d)}\n    </div>\n  ));\n\n  return (\n    <div\n      ref={initialScroll}\n      style={{\n        height: `${state.viewportHeight}px`,\n        overflowY: \"scroll\",\n        overflowAnchor: \"none\",\n      }}\n      className={props.className ?? \"\"}\n      onScroll={(e) => dispatchScroll((e.target as HTMLDivElement).scrollTop)}\n    >\n      <div style={{ height: `${state.topPaddingHeight}px` }} />\n      {rows}\n      <div style={{ height: `${state.bottomPaddingHeight}px` }} />\n    </div>\n  );\n};\n\nexport default VirtualScroll;\n","import { rounded } from \"@davidsouther/jiffies/lib/esm/dom/css/border.js\";\nimport { ReactNode, useCallback, useMemo, useState } from \"react\";\n\nimport {\n  Format,\n  FORMATS,\n  Memory as MemoryChip,\n} from \"@computron5k/simulator/cpu/memory.js\";\nimport { asm } from \"@computron5k/simulator/util/asm.js\";\nimport { bin, dec, hex } from \"@computron5k/simulator/util/twos.js\";\nimport InlineEdit from \"../inline_edit.js\";\nimport VirtualScroll, { VirtualScrollSettings } from \"../virtual_scroll.js\";\n\nconst ITEM_HEIGHT = 34;\n\nexport const MemoryBlock = ({\n  memory,\n  jmp = { value: 0 },\n  highlight = -1,\n  editable = false,\n  format = dec,\n  onChange = () => undefined,\n}: {\n  jmp?: { value: number };\n  memory: MemoryChip;\n  highlight?: number;\n  editable?: boolean;\n  format?: (v: number) => string;\n  onChange?: (i: number, value: string, previous: number) => void;\n}) => {\n  const settings = useMemo<Partial<VirtualScrollSettings>>(\n    () => ({\n      count: 20,\n      maxIndex: memory.size,\n      itemHeight: ITEM_HEIGHT,\n      startIndex: jmp.value,\n    }),\n    [memory.size, jmp]\n  );\n  const get = useCallback(\n    (offset: number, count: number) =>\n      memory\n        .range(offset, offset + count)\n        .map((v, i) => [i + offset, v] as [number, number]),\n    [memory]\n  );\n  const row = useCallback(\n    ([i, v]: [number, number]) => (\n      <MemoryCell\n        index={i}\n        value={format(v)}\n        editable={editable}\n        highlight={i === highlight}\n        onChange={onChange}\n      />\n    ),\n    [format, editable, highlight, onChange]\n  );\n\n  return (\n    <VirtualScroll<[number, number], ReactNode>\n      settings={settings}\n      get={get}\n      row={row}\n      rowKey={([i]) => i}\n    />\n  );\n};\n\nexport const MemoryCell = ({\n  index,\n  value,\n  highlight = false,\n  editable = false,\n  onChange = () => undefined,\n}: {\n  index: number;\n  value: string;\n  highlight?: boolean;\n  editable?: boolean;\n  onChange?: (i: number, value: string, previous: number) => void;\n}) => (\n  <div style={{ display: \"flex\", height: \"100%\" }}>\n    <code\n      style={{\n        ...rounded(\"none\"),\n        ...(highlight\n          ? { background: \"var(--code-kbd-background-color)\" }\n          : {}),\n      }}\n    >\n      {hex(index)}\n    </code>\n    <code\n      style={{\n        flex: \"1\",\n        textAlign: \"right\",\n        ...rounded(\"none\"),\n        ...(highlight\n          ? { background: \"var(--code-kbd-background-color)\" }\n          : {}),\n      }}\n    >\n      {editable ? (\n        <InlineEdit\n          value={value}\n          onChange={(newValue: string) =>\n            onChange(index, newValue, Number(value))\n          }\n        />\n      ) : (\n        <span>{value}</span>\n      )}\n    </code>\n  </div>\n);\n\nexport const Memory = ({\n  name = \"Memory\",\n  highlight = -1,\n  editable = true,\n  memory,\n  format = \"dec\",\n}: {\n  name?: string;\n  editable?: boolean;\n  highlight?: number;\n  memory: MemoryChip;\n  format: Format;\n}) => {\n  const [fmt, setFormat] = useState(format);\n  const [jmp, setJmp] = useState(\"0\");\n  const [goto, setGoto] = useState({ value: 0 });\n\n  const jumpTo = () => {\n    setGoto({ value: Number(jmp) });\n  };\n\n  // const { filePicker, fs } = useContext(AppContext);\n  // const doLoad = useCallback(async () => {\n  //   try {\n  //     const file = await filePicker.select();\n  //     await memory.load(fs, file);\n  //   } catch (e) {\n  //     console.error(e);\n  //   }\n  // }, [fs, filePicker, memory]);\n\n  const doLoad = () => undefined;\n\n  const doUpdate = useCallback(\n    (i: number, v: string) => {\n      memory.update(i, v, fmt ?? \"dec\");\n    },\n    [memory, fmt]\n  );\n\n  return (\n    <article className=\"panel\">\n      <header>\n        <div>{name}</div>\n        <fieldset role=\"group\">\n          <button onClick={doLoad} className=\"flex-0\">\n            {/* <Icon name=\"upload_file\" /> */}\n            📂\n          </button>\n          <input\n            style={{ width: \"4em\", height: \"100%\" }}\n            placeholder=\"Goto\"\n            onKeyDown={({ key }) => key === \"Enter\" && jumpTo()}\n            onChange={({ target: { value } }) => setJmp(value ?? \"0\")}\n          />\n          <button onClick={jumpTo} className=\"flex-0\">\n            {/* <Icon name=\"move_down\" /> */}\n            ⤵️\n          </button>\n          {FORMATS.map((option) => (\n            <label\n              className=\"flex-0\"\n              key={option}\n              role=\"button\"\n              aria-current={option === fmt}\n            >\n              <input\n                type=\"radio\"\n                name={name}\n                value={option}\n                checked={option === fmt}\n                onChange={() => setFormat(option)}\n              />\n              {option}\n            </label>\n          ))}\n        </fieldset>\n      </header>\n      <MemoryBlock\n        jmp={goto}\n        memory={memory}\n        highlight={highlight}\n        editable={editable}\n        format={(v: number) => doFormat(fmt, v)}\n        onChange={doUpdate}\n      />\n    </article>\n  );\n};\n\nexport default Memory;\n\nfunction doFormat(format: Format, v: number): string {\n  switch (format) {\n    case \"bin\":\n      return bin(v);\n    case \"hex\":\n      return hex(v);\n    case \"asm\":\n      return asm(v);\n    case \"dec\":\n    default:\n      return dec(v);\n  }\n}\n","import { useEffect, useMemo, useState } from \"react\";\n\nimport { display } from \"@davidsouther/jiffies/lib/esm/display.js\";\nimport { Clock } from \"@computron5k/simulator/chip/clock.js\";\n\nexport function useClock(actions: {\n  tick?: () => void;\n  toggle?: () => void;\n  reset?: () => void;\n}) {\n  const clock = useMemo(() => Clock.get(), []);\n\n  useEffect(() => {\n    const subscription = clock.$.subscribe(() => {\n      actions.tick?.();\n    });\n    return () => subscription.unsubscribe();\n  }, [actions, clock.$]);\n\n  return {\n    toggle() {\n      clock.tick();\n      actions.toggle?.();\n    },\n\n    reset() {\n      clock.reset();\n      actions.reset?.();\n    },\n  };\n}\n\nexport function useClockFrame(frameFinished: () => void) {\n  useEffect(() => {\n    const subscription = Clock.get().frame$.subscribe(() => {\n      frameFinished();\n    });\n    return () => subscription.unsubscribe();\n  }, [frameFinished]);\n}\n\nexport function displayClock() {\n  return display(Clock.get());\n}\n\nexport function useClockface() {\n  const [clockface, setClockface] = useState(displayClock());\n\n  useEffect(() => {\n    const subscription = Clock.get().$.subscribe(() => {\n      setClockface(displayClock());\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n\n  return clockface;\n}\n\nexport const Clockface = () => {\n  const clockface = useClockface();\n  return <span style={{ whiteSpace: \"nowrap\" }}>{clockface}</span>;\n};\n","import { Memory } from \"@computron5k/simulator/cpu/memory.js\";\nimport { assertExists } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { useCallback, useRef } from \"react\";\nimport { useClockFrame } from \"../clockface.js\";\n\nconst WHITE = \"white\";\nconst BLACK = \"black\";\ntype COLOR = typeof WHITE | typeof BLACK;\n\nexport interface ScreenMemory {\n  get(idx: number): number;\n}\n\nexport function reduceScreen(memory: Memory, offset = 0): ScreenMemory {\n  return {\n    get(idx: number): number {\n      return memory.get(offset + idx);\n    },\n  };\n}\n\nfunction get(mem: ScreenMemory, x: number, y: number): COLOR {\n  const byte = mem.get(32 * y + ((x / 16) | 0));\n  const bit = byte & (1 << x % 16);\n  return bit === 0 ? WHITE : BLACK;\n}\n\nfunction set(data: Uint8ClampedArray, x: number, y: number, value: COLOR) {\n  const pixel = (y * 512 + x) * 4;\n  const color = value === WHITE ? 255 : 0;\n  data[pixel] = color;\n  data[pixel + 1] = color;\n  data[pixel + 2] = color;\n  data[pixel + 3] = 255;\n}\n\nfunction drawImage(ctx: CanvasRenderingContext2D, memory: ScreenMemory) {\n  const image = assertExists(\n    ctx.getImageData(0, 0, 512, 256),\n    \"Failed to create Context2d\"\n  );\n  for (let col = 0; col < 512; col++) {\n    for (let row = 0; row < 256; row++) {\n      const color = get(memory, col, row);\n      set(image.data, col, row, color);\n    }\n  }\n  ctx.putImageData(image, 0, 0);\n}\n\nexport const Screen = ({ memory }: { memory: ScreenMemory }) => {\n  const canvas = useRef<HTMLCanvasElement>();\n  useClockFrame(\n    useCallback(() => {\n      const ctx = canvas.current?.getContext(\"2d\") ?? undefined;\n\n      if (ctx) {\n        drawImage(ctx, memory);\n      }\n    }, [memory])\n  );\n\n  return (\n    <figure\n      style={{\n        width: \"100%\",\n        maxWidth: \"512px\",\n        boxSizing: \"content-box\",\n        marginInline: \"auto\",\n        margin: \"0\",\n        borderTop: \"2px solid gray\",\n        borderLeft: \"2px solid gray\",\n        borderBottom: \"2px solid lightgray\",\n        borderRight: \"2px solid lightgray\",\n      }}\n    >\n      <canvas\n        ref={(ref) => (canvas.current = ref ?? undefined)}\n        width={512}\n        height={256}\n      ></canvas>\n    </figure>\n  );\n};\n","import {\n  Keyboard,\n  Screen,\n} from \"@computron5k/simulator/chip/builtins/computer/computer.js\";\nimport { ALU } from \"@computron5k/simulator/chip/builtins/index.js\";\nimport {\n  PC,\n  VRegister,\n} from \"@computron5k/simulator/chip/builtins/sequential/bit.js\";\nimport {\n  RAM,\n  RAM8,\n} from \"@computron5k/simulator/chip/builtins/sequential/ram.js\";\nimport { Chip, HIGH } from \"@computron5k/simulator/chip/chip.js\";\nimport { Flags } from \"@computron5k/simulator/cpu/alu.js\";\nimport { CPU, decode } from \"@computron5k/simulator/cpu/cpu.js\";\nimport { ReactElement } from \"react\";\nimport { ALUComponent } from \"./alu.js\";\nimport { Keyboard as KeyboardComponent } from \"./keyboard.js\";\nimport { Memory as MemoryComponent } from \"./memory.js\";\nimport { RegisterComponent } from \"./register.js\";\nimport { Screen as ScreenComponent } from \"./screen.js\";\n\nexport function getBuiltinVisualization(part: Chip): ReactElement | undefined {\n  switch (part.name) {\n    case \"Register\":\n    case \"ARegister\":\n    case \"DRegister\":\n    case \"PC\":\n    case \"KEYBOARD\":\n    case \"RAM8\":\n    case \"RAM64\":\n    case \"RAM512\":\n    case \"RAM4K\":\n    case \"RAM16K\":\n    case \"ROM32K\":\n    case \"Screen\":\n    case \"Memory\":\n    default:\n      return undefined;\n  }\n}\n\nexport function makeVisualization(chip: Chip): ReactElement | undefined {\n  if (chip instanceof ALU) {\n    return (\n      <ALUComponent\n        A={chip.in(\"x\").busVoltage}\n        op={chip.op()}\n        D={chip.in(\"y\").busVoltage}\n        out={chip.out().busVoltage}\n        flag={\n          (chip.out(\"zr\").voltage() === HIGH\n            ? Flags.Zero\n            : chip.out(\"ng\").voltage() === HIGH\n            ? Flags.Negative\n            : Flags.Positive) as keyof typeof Flags\n        }\n      />\n    );\n  }\n  if (chip instanceof VRegister) {\n    return (\n      <RegisterComponent\n        name={chip.name ?? `Chip ${chip.id}`}\n        bits={chip.bits}\n      />\n    );\n  }\n  if (chip instanceof PC) {\n    return <RegisterComponent name=\"PC\" bits={chip.bits} />;\n  }\n  if (chip instanceof RAM) {\n    return (\n      <MemoryComponent\n        name={chip.name}\n        memory={chip.memory}\n        format=\"dec\"\n        highlight={chip.address}\n      />\n    );\n  }\n  if (chip instanceof RAM8) {\n    return <span>RAM {chip.width}</span>;\n  }\n  if (chip instanceof Keyboard) {\n    return <KeyboardComponent keyboard={chip} />;\n  }\n  if (chip instanceof Screen) {\n    return <ScreenComponent memory={chip.memory} />;\n  }\n  if (chip instanceof CPU) {\n    const bits = decode(chip.in(\"instruction\").busVoltage);\n    return (\n      <>\n        <RegisterComponent name={\"A\"} bits={chip.state.A} />\n        <RegisterComponent name={\"D\"} bits={chip.state.D} />\n        <RegisterComponent name={\"PC\"} bits={chip.state.PC} />\n        <ALUComponent\n          A={bits.am ? chip.in(\"inM\").busVoltage : chip.state.A}\n          D={chip.state.D}\n          out={chip.state.ALU}\n          op={bits.op}\n          flag={chip.state.flag as keyof typeof Flags}\n        />\n      </>\n    );\n  }\n\n  const vis = [...chip.parts]\n    .map(makeVisualization)\n    .filter((v) => v !== undefined);\n  return vis.length > 0 ? <>{vis}</> : undefined;\n}\n\nexport function makeVisualizationsWithId(chip: {\n  parts: Chip[];\n}): [string, ReactElement][] {\n  return [...chip.parts]\n    .map((part, i): [string, ReactElement | undefined] => [\n      `${part.id}_${i}`,\n      makeVisualization(part),\n    ])\n    .filter(([_, v]) => v !== undefined) as [string, ReactElement][];\n}\n","const cmp = `\nCmp <: Base {\n  Root := line*\n  line = bar cell+ newline?\n  cell = cellvalue bar\n  cellvalue = (~(bar|newline) any)*\n}`;\nexport default cmp;\n","import ohm from \"ohm-js\";\nimport { grammars, makeParser, baseSemantics } from \"./base.js\";\n\nexport type Cell = string;\nexport type Line = Cell[];\nexport type Cmp = Line[];\n\nimport cmpGrammar from \"./grammars/cmp.ohm.js\";\nexport const grammar = ohm.grammar(cmpGrammar, grammars);\nexport const cmpSemantics = grammar.extendSemantics(baseSemantics);\n\ncmpSemantics.addAttribute<Cell>(\"cell\", {\n  cell(value, _) {\n    return value.sourceString;\n  },\n});\n\ncmpSemantics.addAttribute<Line>(\"line\", {\n  line(_a, cells, _b) {\n    return cells.children.map((c) => c.cell);\n  },\n});\n\ncmpSemantics.addAttribute<Cmp>(\"root\", {\n  Root(lines) {\n    return lines.children.map((c) => c.line);\n  },\n});\n\nexport const CMP = {\n  grammar: cmpGrammar,\n  semantics: cmpSemantics,\n  parser: grammar,\n  parse: makeParser<Cmp>(grammar, cmpSemantics),\n};\n","import { CMP } from \"@computron5k/simulator/languages/cmp.js\";\nimport { display } from \"@davidsouther/jiffies/lib/esm/display.js\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range.js\";\nimport { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result.js\";\nimport { ReactElement } from \"react\";\n\nexport const DiffTable = ({\n  className = \"\",\n  out,\n  cmp,\n  zeroState,\n}: {\n  out: string;\n  cmp: string;\n  className?: string;\n  zeroState?: ReactElement;\n}) => {\n  const output = CMP.parse(out);\n  const compare = CMP.parse(cmp);\n\n  if (isErr(output)) {\n    return (\n      <details>\n        <summary>Failed to parse output</summary>\n        <pre>{display(Err(output))}</pre>\n        <code>\n          <pre>{out}</pre>\n        </code>\n      </details>\n    );\n  }\n\n  if (isErr(compare)) {\n    return (\n      <details>\n        <summary>Failed to parse compare</summary>\n        <code>\n          <pre>{display(Err(compare))}</pre>\n          <pre>{cmp}</pre>\n        </code>\n      </details>\n    );\n  }\n\n  const cmpData = Ok(compare);\n  const outData = Ok(output);\n  let failures = 0;\n  const table = range(0, Math.min(cmpData.length, outData.length)).map((i) => {\n    const cmpI = cmpData[i] ?? [];\n    const outI = outData[i] ?? [];\n    return range(0, Math.max(cmpI.length, outI.length))\n      .map((_, j) => [cmpI[j] ?? \"\", outI[j] ?? \"\"])\n      .map(([cmp, out]) => {\n        const cell = {\n          cmp: cmp ?? '\"',\n          out: out ?? '\"',\n          pass:\n            cmp?.trim().match(/^\\*+$/) !== null || out?.trim() === cmp?.trim(),\n        };\n        if (!cell.pass) {\n          failures += 1;\n        }\n        return cell;\n      });\n  });\n\n  return (\n    <div className={\"scroll-x \" + className}>\n      {failures > 0 && (\n        <p>\n          {failures} failure{failures === 1 ? \"\" : \"s\"}\n        </p>\n      )}\n      {table.length > 0 ? (\n        <table\n          style={{\n            fontFamily: \"var(--font-family-monospace)\",\n            marginBottom: \"none\",\n          }}\n        >\n          <tbody>\n            {table.map((row, i) => (\n              <tr key={i}>\n                {row.map(({ cmp, out, pass }, i) => (\n                  <DiffCell cmp={cmp} out={out} pass={pass} key={i} />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        zeroState ?? <p>Execute test script to compare output.</p>\n      )}\n    </div>\n  );\n};\n\nconst DiffCell = ({\n  cmp,\n  out,\n  pass,\n}: {\n  cmp: string;\n  out: string;\n  pass: boolean;\n}) => {\n  return pass ? (\n    <>\n      <td>{cmp}</td>\n    </>\n  ) : (\n    <>\n      <td>\n        <ins>{cmp}</ins>\n        <br />\n        <del>{out}</del>\n      </td>\n    </>\n  );\n};\n","// import { plural, Trans } from \"@lingui/macro\";\nimport {\n  Pin as ChipPin,\n  Pins,\n  Voltage,\n} from \"@computron5k/simulator/chip/chip.js\";\nimport { range } from \"@davidsouther/jiffies/lib/esm/range.js\";\nimport { ChipSim } from \"./stores/chip.store.js\";\n\nexport interface ImmPin {\n  bits: [number, Voltage][];\n  pin: ChipPin;\n}\n\nexport function reducePin(pin: ChipPin) {\n  return {\n    pin,\n    bits: range(0, pin.width)\n      .map((i) => [i, pin.voltage(i)] as [number, Voltage])\n      .reverse(),\n  };\n}\n\nexport function reducePins(pins: Pins): ImmPin[] {\n  return [...pins.entries()].map(reducePin);\n}\n\nexport interface PinoutPins {\n  pins: ImmPin[];\n  toggle?: (pin: ChipPin, bit?: number) => void;\n}\n\nexport const FullPinout = (props: {\n  sim: ChipSim;\n  toggle: (pin: ChipPin, i: number | undefined) => void;\n}) => {\n  const { inPins, outPins, internalPins } = props.sim;\n  return (\n    <>\n      <style>{`\n        table.pinout th {\n          font-weight: bold;\n        }\n\n        table.pinout tbody td:first-child {\n          text-align: right;\n          --font-size: 1rem;\n          width: 0;\n          white-space: nowrap;\n          border-right: var(--border-width) solid var(--table-border-color);\n        }\n\n        table.pinout tbody button {\n          --font-size: 0.875em;\n          font-family: var(--font-family-monospace);\n          max-width: 2em;\n        }\n        `}</style>\n      <table className=\"pinout\">\n        <tbody>\n          <PinoutBlock\n            pins={inPins}\n            header=\"Input pins\"\n            toggle={props.toggle}\n          />\n          <PinoutBlock\n            pins={outPins}\n            header=\"Output pins\"\n            disabled={props.sim.pending}\n          />\n          <PinoutBlock\n            pins={internalPins}\n            header=\"Internal pins\"\n            disabled={props.sim.pending}\n          />\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport const PinoutBlock = (\n  props: PinoutPins & { header: string; disabled?: boolean }\n) => (\n  <>\n    {props.pins.length > 0 && (\n      <tr>\n        <th colSpan={2}>{props.header}</th>\n      </tr>\n    )}\n    {[...props.pins].map((immPin) => (\n      <tr key={immPin.pin.name}>\n        <td>{immPin.pin.name}</td>\n        <td>\n          <Pin pin={immPin} toggle={props.toggle} disabled={props.disabled} />\n        </td>\n      </tr>\n    ))}\n  </>\n);\n\nexport const Pinout = ({\n  pins,\n  toggle,\n}: {\n  pins: ImmPin[];\n  toggle?: (pin: ChipPin, bit?: number) => void;\n}) => {\n  if (pins.length === 0) {\n    return <>None</>;\n  }\n  return (\n    <table className=\"pinout\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {[...pins].map((immPin) => (\n          <tr key={immPin.pin.name}>\n            <td>{immPin.pin.name}</td>\n            <td>\n              <Pin pin={immPin} toggle={toggle} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst Pin = ({\n  pin,\n  toggle,\n  disabled = false,\n}: {\n  pin: ImmPin;\n  toggle: ((pin: ChipPin, bit?: number) => void) | undefined;\n  disabled?: boolean;\n}) => {\n  return (\n    <fieldset role=\"group\" style={{ width: `${pin.bits.length}rem` }}>\n      {pin.bits.map(([i, v]) => (\n        <button\n          key={i}\n          onClick={() => toggle?.(pin.pin, i)}\n          disabled={disabled}\n          data-testid={`pin-${i}`}\n        >\n          {v}\n        </button>\n      ))}\n    </fieldset>\n  );\n};\n","import { ReactNode } from \"react\";\nimport { Timer } from \"@computron5k/simulator/timer.js\";\nimport { useTimer } from \"./timer.js\";\n\nexport const Runbar = (props: { runner: Timer; children?: ReactNode }) => {\n  const runner = useTimer(props.runner);\n  return (\n    <fieldset role=\"group\">\n      <button\n        className=\"flex-0\"\n        onClick={() => runner.actions.frame()}\n        data-tooltip={`Step`}\n        data-placement=\"bottom\"\n      >\n        {/* <Icon name=\"play_arrow\" /> */}\n        ➡️\n      </button>\n      <button\n        className=\"flex-0\"\n        onClick={() =>\n          runner.state.running ? runner.actions.stop() : runner.actions.start()\n        }\n        data-tooltip={runner.state.running ? `Pause` : `Play`}\n        data-placement=\"bottom\"\n      >\n        {/* <Icon name={runner.state.running ? \"pause\" : \"fast_forward\"} /> */}\n        {runner.state.running ? \"⏸\" : \"▶️\"}\n      </button>\n      <button\n        className=\"flex-0\"\n        onClick={() => runner.actions.reset()}\n        data-tooltip={`Reset`}\n        data-placement=\"bottom\"\n      >\n        {/* <Icon name=\"fast_rewind\" /> */}⏮\n      </button>\n      <select\n        className=\"flex-1\"\n        name=\"speed\"\n        value={runner.state.speed}\n        onChange={(e) => {\n          runner.dispatch({\n            action: \"setSpeed\",\n            payload: Number(e.target?.value ?? runner.state.speed),\n          });\n        }}\n        disabled={runner.state.running}\n      >\n        {[\n          // [2000, `Slow`], // For debugging, basically the same as clicking through\n          [1000, `Normal`],\n          [500, `Fast`],\n          [16, `Faster`],\n        ].map(([speed, label]) => (\n          <option key={speed} value={speed}>\n            {label}\n          </option>\n        ))}\n      </select>\n      <select\n        className=\"flex-1\"\n        name=\"steps\"\n        value={runner.state.steps}\n        onChange={(e) => {\n          runner.dispatch({\n            action: \"setSteps\",\n            payload: Number(e.target?.value ?? runner.state.steps),\n          });\n        }}\n        disabled={runner.state.running}\n      >\n        {[\n          [1, `1 Step`],\n          [500, \"500\"],\n          [1000, \"1000\"],\n          [2000, \"2000\"],\n        ].map(([steps, label]) => (\n          <option key={steps} value={steps}>\n            {label}\n          </option>\n        ))}\n      </select>\n      {props.children}\n    </fieldset>\n  );\n};\n","import { Timer } from \"@computron5k/simulator/timer.js\";\nimport { useImmerReducer } from \"./react.js\";\n\nexport interface TimerStoreState {\n  steps: number;\n  speed: number;\n  running: boolean;\n}\n\nimport { Dispatch, MutableRefObject, useMemo, useRef } from \"react\";\nexport type TimerStoreDispatch = Dispatch<{\n  action: keyof ReturnType<typeof makeTimerStore>[\"reducers\"];\n  payload?: unknown;\n}>;\n\nconst makeTimerStore = (\n  timer: Timer,\n  dispatch: MutableRefObject<TimerStoreDispatch>\n) => {\n  const initialState: TimerStoreState = {\n    running: timer.running,\n    speed: timer.speed,\n    steps: timer.steps,\n  };\n\n  const finishFrame = timer.finishFrame.bind(timer);\n  timer.finishFrame = function () {\n    finishFrame();\n    dispatch.current({ action: \"update\" });\n  };\n\n  const reducers = {\n    update(state: TimerStoreState) {\n      state.running = timer.running;\n      state.speed = timer.speed;\n      state.steps = timer.steps;\n    },\n    setSteps(state: TimerStoreState, steps: number) {\n      state.steps = steps;\n      timer.steps = steps;\n    },\n    setSpeed(state: TimerStoreState, speed: number) {\n      state.speed = speed;\n      timer.speed = speed;\n    },\n  };\n\n  const actions = {\n    frame() {\n      timer.frame();\n    },\n    start() {\n      timer.start();\n      dispatch.current({ action: \"update\" });\n    },\n    stop() {\n      timer.stop();\n      dispatch.current({ action: \"update\" });\n    },\n    reset() {\n      timer.reset();\n      dispatch.current({ action: \"update\" });\n    },\n  };\n\n  return { initialState, reducers, actions };\n};\n\nexport function useTimer(timer: Timer) {\n  const dispatch = useRef<TimerStoreDispatch>(() => undefined);\n\n  const { initialState, reducers, actions } = useMemo(\n    () => makeTimerStore(timer, dispatch),\n    [timer, dispatch]\n  );\n\n  const [state, dispatcher] = useImmerReducer(reducers, initialState);\n\n  dispatch.current = dispatcher;\n\n  return { state, dispatch: dispatch.current, actions };\n}\n","const hdl = `\nHdl <: Base{\n  Root := Chip\n  Chip = \"CHIP\" Name OpenBrace ChipBody CloseBrace\n  ChipBody = InList? OutList? PartList ClockedList?\n  InList = \"IN\" PinList Semi\n  OutList = \"OUT\" PinList Semi\n  PartList = BuiltinPart | Parts\n  PinList = List<PinDecl, Comma>\n  PinDecl = Name PinWidth?\n  PinWidth = OpenSquare decNumber CloseSquare\n  BuiltinPart = \"BUILTIN\" Semi\n  Parts = \"PARTS:\" Part*\n  Part = Name \"(\" Wires \")\" Semi\n  Wires = List<Wire, Comma>\n  Wire = WireSide Equal (WireSide | True | False) \n  WireSide = Name SubBus? \n  SubBus = OpenSquare decNumber subBusRest? CloseSquare\n  subBusRest = \"..\" decNumber\n  ClockedList = \"CLOCKED\" SimplePinList Semi\n  SimplePinList = List<Name, Comma>\n}`;\nexport default hdl;\n","/** Reads and parses HDL chip descriptions. */\nimport ohm from \"ohm-js\";\nimport { grammars, baseSemantics } from \"./base.js\";\nimport { makeParser } from \"./base.js\";\n\nexport interface PinIndex {\n  start?: number | undefined;\n  end?: number | undefined;\n}\n\nexport interface PinParts extends PinIndex {\n  pin: string;\n}\n\nexport interface PinDeclaration {\n  pin: string | string;\n  width: number;\n}\n\nexport interface Wire {\n  lhs: PinParts;\n  rhs: PinParts;\n}\n\nexport interface Part {\n  name: string;\n  wires: Wire[];\n}\n\nexport interface HdlParse {\n  name: string;\n  ins: PinDeclaration[];\n  outs: PinDeclaration[];\n  clocked: string[];\n  parts: \"BUILTIN\" | Part[];\n}\n\nimport hdlGrammar from \"./grammars/hdl.ohm.js\";\nexport const grammar = ohm.grammar(hdlGrammar, grammars);\n\nexport const hdlSemantics = grammar.extendSemantics(baseSemantics);\n\nhdlSemantics.addAttribute<PinIndex>(\"SubBus\", {\n  SubBus(_a, startNode, endNode, _b) {\n    const start = startNode.value;\n    const end = endNode.child(0)?.child(1)?.value ?? start;\n    return { start, end };\n  },\n});\n\nhdlSemantics.addAttribute<PinParts>(\"WireSide\", {\n  WireSide({ name }, index) {\n    const { start, end } = (index.child(0)?.SubBus as PinIndex) ?? {\n      start: undefined,\n      end: undefined,\n    };\n    return { pin: name, start, end };\n  },\n});\n\nhdlSemantics.addAttribute<Wire>(\"Wire\", {\n  Wire(left, _, right) {\n    const rhs: PinParts = right.isTerminal()\n      ? { pin: right.sourceString }\n      : right.WireSide;\n    return { lhs: left.WireSide as PinParts, rhs };\n  },\n});\n\nhdlSemantics.addAttribute<Wire[]>(\"Wires\", {\n  Wires(list) {\n    return list.asIteration().children.map(({ Wire }: { Wire: Wire }) => Wire);\n  },\n});\n\nhdlSemantics.addAttribute<Part>(\"Part\", {\n  Part({ name }, _a, { Wires }, _b, _c) {\n    return { name: name as string, wires: Wires as Wire[] };\n  },\n});\n\nhdlSemantics.addAttribute<Part[] | \"BUILTIN\">(\"Parts\", {\n  Parts(_, parts) {\n    return parts.children.map((c) => c.Part);\n  },\n  BuiltinPart(_a, _b) {\n    return \"BUILTIN\";\n  },\n});\n\nhdlSemantics.addAttribute<\"BUILTIN\" | Part[]>(\"PartList\", {\n  PartList(list) {\n    return list.Parts;\n  },\n});\n\nhdlSemantics.addAttribute<string[]>(\"Clocked\", {\n  ClockedList(_a, clocked, _b) {\n    return (\n      clocked\n        .asIteration()\n        .children.map(\n          ({ sourceString }: { sourceString: string }) => sourceString\n        ) ?? []\n    );\n  },\n});\n\nhdlSemantics.addAttribute<PinDeclaration>(\"PinDecl\", {\n  PinDecl({ name }, width) {\n    return {\n      pin: name,\n      width: width.child(0)?.child(1)?.value ?? 1,\n    };\n  },\n});\n\nhdlSemantics.addAttribute<PinDeclaration[]>(\"PinList\", {\n  PinList(list) {\n    return list\n      .asIteration()\n      .children.map(({ PinDecl }: { PinDecl: PinDeclaration }) => PinDecl);\n  },\n});\n\nhdlSemantics.addAttribute<HdlParse>(\"Chip\", {\n  Chip(_a, { name }, _b, body, _c) {\n    return {\n      name,\n      ins: body.child(0).child(0)?.child(1)?.PinList ?? [],\n      outs: body.child(1).child(0)?.child(1)?.PinList ?? [],\n      parts: body.child(2).PartList ?? [],\n      clocked: body.child(3).child(0)?.Clocked,\n    };\n  },\n});\n\nhdlSemantics.addAttribute<HdlParse>(\"Root\", {\n  Root(root) {\n    return root.child(0)?.Chip;\n  },\n});\n\nexport const HDL = {\n  parser: grammar,\n  grammar: hdlGrammar,\n  semantics: hdlSemantics,\n  parse: makeParser<HdlParse>(grammar, hdlSemantics, (n) => n.Chip),\n};\n","const tst = `\nTst <: Base {\n  Root := Tst\n  Tst = (TstStatement | TstRepeat | TstWhile)+\n\n  TstRepeat = Repeat Number? OpenBrace TstStatement+ CloseBrace\n  TstWhile = While Condition OpenBrace TstStatement+ CloseBrace\n  TstStatement = List<TstOperation, \",\"> (Semi | Bang)\n\n  TstOperation =\n    | TstFileOperation\n    | TstOutputListOperation\n    | TstEvalOperation\n    | TstSetOperation\n    | TstOutputOperation\n    | TstEchoOperation\n    | TstClearEchoOperation\n    | TstLoadROMOperation\n\n  TstLoadROMOperation = ROM32K Load FileName\n  TstFileOperation = FileOperation FileName\n  TstOutputListOperation = \"output-list\" OutputFormat+\n  OutputFormat = Name Index? percent FormatStyle wholeDec dot wholeDec dot wholeDec\n  TstSetOperation = Set Name Index? Number\n  Index = OpenSquare wholeDec? CloseSquare\n  Condition = Value CompareOp Value\n  TstEvalOperation = Eval | Tick | Tock\n  TstOutputOperation = Output\n  TstEchoOperation = Echo String\n  TstClearEchoOperation = ClearEcho\n\n  FileName = Name\n  FileOperation = \"load\" | \"output-file\" | \"compare-to\"\n\n  Set = \"set\"\n  Eval = \"eval\"\n  Tick = \"tick\"\n  Tock = \"tock\"\n  Echo = \"echo\"\n  Repeat = \"repeat\"\n  ClearEcho = \"clear-echo\"\n  Output = \"output\"\n  OutputList = \"output-list\"\n  FormatStyle = \"B\"|\"D\"|\"S\"|\"X\"\n  ROM32K = \"ROM32K\"\n  Load = \"load\"\n  While = \"while\"\n\n  CompareOp = \"<>\" | \"<=\" | \">=\" | \"=\" | \"<\" | \">\"\n}`;\nexport default tst;\n","/** Reads tst files to apply and perform test runs. */\n\nimport ohm from \"ohm-js\";\nimport { baseSemantics, grammars, makeParser, Span } from \"./base.js\";\n\nexport interface TstEchoOperation {\n  op: \"echo\";\n  message: string;\n}\n\nexport interface TstClearEchoOperation {\n  op: \"clear-echo\";\n}\n\nexport interface TstSetOperation {\n  op: \"set\";\n  id: string;\n  index?: number;\n  value: number;\n}\n\nexport interface TstEvalOperation {\n  op: \"eval\" | \"tick\" | \"tock\";\n}\n\nexport interface TstOutputOperation {\n  op: \"output\";\n}\n\nexport interface TstOutputSpec {\n  id: string;\n  builtin: boolean;\n  address: number;\n  style: \"D\" | \"X\" | \"B\" | \"S\";\n  width: number;\n  lpad: number;\n  rpad: number;\n}\n\nexport interface TstOutputListOperation {\n  op: \"output-list\";\n  spec: TstOutputSpec[];\n}\n\nexport interface TstLoadROMOperation {\n  op: \"load\";\n  file: string;\n}\n\nexport type TstOperation =\n  | TstEvalOperation\n  | TstEchoOperation\n  | TstClearEchoOperation\n  | TstOutputOperation\n  | TstSetOperation\n  | TstOutputListOperation\n  | TstLoadROMOperation;\n\nexport interface TstLineStatement {\n  ops: TstOperation[];\n  break?: true;\n  span: Span;\n}\n\nexport interface TstRepeat {\n  statements: TstLineStatement[];\n  count: number;\n  span: Span;\n}\n\nexport interface TstWhileCondition {\n  op: \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"<>\";\n  left: string | number;\n  right: string | number;\n}\n\nexport interface TstWhileStatement {\n  statements: TstLineStatement[];\n  condition: TstWhileCondition;\n  span: Span;\n}\n\nexport type TstStatement = TstLineStatement | TstRepeat | TstWhileStatement;\n\nexport interface Tst {\n  lines: TstStatement[];\n}\n\nimport tstGrammar from \"./grammars/tst.ohm.js\";\nexport const grammar = ohm.grammar(tstGrammar, grammars);\nexport const tstSemantics = grammar.extendSemantics(baseSemantics);\n\ntstSemantics.extendAttribute<number>(\"value\", {\n  Index(_a, idx, _b) {\n    return idx?.child(0)?.value ?? -1;\n  },\n});\n\ntstSemantics.extendAttribute<string>(\"name\", {\n  FileName({ name }) {\n    return name;\n  },\n});\n\ntstSemantics.addAttribute<number>(\"index\", {\n  Index(_open, dec, _close) {\n    return dec.child(0)?.value ?? 0;\n  },\n});\n\ntstSemantics.addAttribute<TstOutputSpec>(\"format\", {\n  OutputFormat(\n    { name: id },\n    index,\n    _a,\n    { sourceString: style },\n    { value: lpad },\n    _b,\n    { value: width },\n    _c,\n    { value: rpad }\n  ) {\n    return {\n      id,\n      builtin: index?.child(0) !== undefined,\n      address: index?.child(0)?.value ?? -1,\n      style: style as TstOutputSpec[\"style\"],\n      width,\n      lpad,\n      rpad,\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstOperation>(\"operation\", {\n  TstEvalOperation(op) {\n    return { op: op.sourceString as TstEvalOperation[\"op\"] };\n  },\n  TstOutputOperation(_) {\n    return { op: \"output\" };\n  },\n  TstOutputListOperation(_, formats) {\n    return {\n      op: \"output-list\",\n      spec: formats.children.map((n) => n.format),\n    };\n  },\n  TstSetOperation(op, { name }, index, { value }) {\n    const setOp: TstSetOperation = {\n      op: \"set\",\n      id: name,\n      value,\n    };\n    const child = index.child(0)?.child(1)?.child(0);\n    if (child) {\n      setOp.index = child.value;\n    }\n    return setOp;\n  },\n  TstEchoOperation(op, str) {\n    return {\n      op: \"echo\",\n      message: str.String as string,\n    };\n  },\n  TstClearEchoOperation(op) {\n    return {\n      op: \"clear-echo\",\n    };\n  },\n  TstLoadROMOperation(_r, _l, { name }) {\n    return {\n      op: \"load\",\n      file: name,\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstWhileCondition>(\"condition\", {\n  Condition({ value: left }, { sourceString: op }, { value: right }) {\n    return {\n      left,\n      right,\n      op: op as \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"<>\",\n    };\n  },\n});\n\ntstSemantics.addAttribute<TstStatement>(\"statement\", {\n  TstWhile(op, cond, _o, statements, _c) {\n    return {\n      statements: statements.children.map(({ statement }) => statement),\n      condition: cond.condition,\n      span: {\n        start: op.source.startIdx,\n        end: cond.source.endIdx,\n      },\n    };\n  },\n  TstRepeat(op, count, _o, statements, _c) {\n    return {\n      statements: statements.children.map(({ statement }) => statement),\n      count: count.child(0)?.value ?? -1,\n      span: {\n        start: op.source.startIdx,\n        end: count.source.endIdx,\n      },\n    };\n  },\n  TstStatement(list, end) {\n    const stmt: TstStatement = {\n      ops: list\n        .asIteration()\n        .children.map(\n          ({ operation }: { operation: TstOperation }) => operation\n        ),\n      span: {\n        start: this.source.startIdx,\n        end: this.source.endIdx,\n      },\n    };\n    if (end.sourceString === \"!\") {\n      stmt.break = true;\n    }\n    return stmt;\n  },\n});\n\ntstSemantics.addAttribute<Tst>(\"tst\", {\n  Tst(lines) {\n    return {\n      lines: lines.children.map((n) => n.statement),\n    };\n  },\n});\n\ntstSemantics.addAttribute<Tst>(\"root\", {\n  Root({ tst }) {\n    return tst;\n  },\n});\n\nexport const TST = {\n  grammar: tstGrammar,\n  semantics: tstSemantics,\n  parser: grammar,\n  parse: makeParser<Tst>(grammar, tstSemantics),\n};\n","import { Clock } from \"./chip/clock.js\";\n\nexport const MAX_STEPS = 1000;\n\nconst clock = Clock.get();\n\nexport abstract class Timer {\n  frame() {\n    this.tick();\n    this.finishFrame();\n  }\n\n  abstract tick(): Promise<boolean> | boolean;\n\n  finishFrame() {\n    clock.frame();\n  }\n\n  abstract reset(): void;\n\n  abstract toggle(): void;\n\n  steps = 1; // How many steps to take per update\n  speed = 1000; // how often to update, in ms\n  get running() {\n    return this.#running;\n  }\n\n  #running = false;\n  #sinceLastFrame = 0;\n  #lastUpdate = 0;\n  #run = async () => {\n    if (!this.#running) {\n      return;\n    }\n    const now = Date.now();\n    const delta = now - this.#lastUpdate;\n    this.#lastUpdate = now;\n    this.#sinceLastFrame += delta;\n    if (this.#sinceLastFrame > this.speed) {\n      let done = false;\n      for (let i = 0; i < Math.min(this.steps, MAX_STEPS) && !done; i++) {\n        done = await this.tick();\n      }\n      this.finishFrame();\n      if (done) {\n        this.stop();\n      }\n      this.#sinceLastFrame -= this.speed;\n    }\n    requestAnimationFrame(this.#run);\n  };\n\n  start() {\n    this.#running = true;\n    this.#lastUpdate = Date.now() - this.speed;\n    this.#run();\n    this.toggle();\n  }\n\n  stop() {\n    this.#running = false;\n    this.toggle();\n  }\n}\n","import { debounce } from \"@davidsouther/jiffies/lib/esm/debounce\";\nimport { Trans } from \"@lingui/macro\";\nimport MonacoEditor, { useMonaco } from \"@monaco-editor/react\";\nimport type * as monacoT from \"monaco-editor/esm/vs/editor/editor.api\";\nimport { OnMount } from \"@monaco-editor/react\";\nimport ohm from \"ohm-js\";\nimport {\n  CSSProperties,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { AppContext } from \"../App.context\";\n\nimport {\n  Span,\n  UNKNOWN_PARSE_ERROR,\n} from \"@computron5k/simulator/languages/base.js\";\n\nimport \"./editor.scss\";\n\nexport const ErrorPanel = ({ error }: { error?: ohm.MatchResult }) => {\n  return error?.failed() ? (\n    <details className=\"ErrorPanel\" open>\n      <summary role=\"button\" className=\"secondary\">\n        <Trans>Parse Error</Trans>\n      </summary>\n      <pre>\n        <code>\n          {error?.message ?? error?.shortMessage ?? UNKNOWN_PARSE_ERROR}\n        </code>\n      </pre>\n    </details>\n  ) : (\n    <></>\n  );\n};\n\nconst Textarea = ({\n  value,\n  onChange,\n  language,\n  disabled = false,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n  language: string;\n  disabled?: boolean;\n}) => {\n  const [text, setText] = useState(value);\n  return (\n    <textarea\n      data-testid={`editor-${language}`}\n      disabled={disabled}\n      value={text}\n      onChange={(e) => {\n        const value = e.target?.value;\n        setText(value);\n        onChange(value);\n      }}\n    />\n  );\n};\n\nconst MONACO_LIGHT_THEME = \"vs\";\nconst MONACO_DARK_THEME = \"vs-dark\";\n\nconst Monaco = ({\n  value,\n  onChange,\n  language,\n  error,\n  disabled = false,\n  highlight,\n}: {\n  value: string;\n  onChange: (value: string) => void;\n  language: string;\n  error?: ohm.MatchResult | undefined;\n  disabled?: boolean;\n  highlight?: Span;\n}) => {\n  const { theme } = useContext(AppContext);\n  const monaco = useMonaco();\n\n  const editor = useRef<monacoT.editor.IStandaloneCodeEditor>();\n  const decorations = useRef<string[]>([]);\n\n  const codeTheme = useCallback(() => {\n    const isDark =\n      theme === \"system\"\n        ? window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n        : theme === \"dark\";\n    return isDark ? MONACO_DARK_THEME : MONACO_LIGHT_THEME;\n  }, [theme]);\n\n  // Set options when mounting\n  const onMount: OnMount = useCallback(\n    (ed) => {\n      editor.current = ed;\n      editor.current?.updateOptions({\n        fontFamily: `\"JetBrains Mono\", source-code-pro, Menlo, Monaco,\n      Consolas, \"Roboto Mono\", \"Ubuntu Monospace\", \"Noto Mono\", \"Oxygen Mono\",\n      \"Liberation Mono\", monospace, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\", \"Noto Color Emoji\"`,\n        fontSize: 16,\n        minimap: {\n          enabled: false,\n        },\n        theme: codeTheme(),\n        scrollBeyondLastLine: false,\n      });\n    },\n    [codeTheme]\n  );\n\n  // Mark and center highlighted spans\n  useEffect(() => {\n    if (!editor.current) return;\n    const model = editor.current.getModel();\n    const nextDecoration: monacoT.editor.IModelDeltaDecoration[] = [];\n    if (model && highlight) {\n      const start = model.getPositionAt(highlight.start);\n      const end = model.getPositionAt(highlight.end);\n      const range = monaco?.Range.fromPositions(start, end);\n      if (range) {\n        nextDecoration.push({\n          range,\n          options: { inlineClassName: \"highlight\" },\n        });\n        editor.current.revealRangeInCenter(range);\n      }\n    }\n    decorations.current = editor.current.deltaDecorations(\n      decorations.current,\n      nextDecoration\n    );\n  }, [editor, highlight, monaco]);\n\n  // Set themes\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    editor.current.updateOptions({ theme: codeTheme() });\n  }, [editor, codeTheme]);\n\n  // Prevent editing disabled editors\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    editor.current.updateOptions({ readOnly: disabled });\n  }, [editor, disabled]);\n\n  // Add error markers on parse failure\n  useEffect(() => {\n    if (editor.current === undefined) return;\n    if (monaco === null) return;\n    const model = editor.current.getModel();\n    if (model === null) return;\n    if (error === undefined || error.succeeded()) {\n      monaco.editor.setModelMarkers(model, language, []);\n      return;\n    }\n    // Line 7, col 5:\n    const { line, column, message } =\n      /Line (?<line>\\d+), col (?<column>\\d+): (?<message>.*)/.exec(\n        error.shortMessage ?? \"\"\n      )?.groups ?? { line: 1, column: 1, message: \"could not parse error\" };\n    const startLineNumber = Number(line);\n    const endLineNumber = startLineNumber;\n    const startColumn = Number(column);\n    const restOfLine = model\n      .getLineContent(startLineNumber)\n      .substring(startColumn - 1);\n    let endColumn =\n      startColumn + (restOfLine.match(/([^\\s]+)/)?.[0].length ?? 1);\n    if (endColumn <= startColumn) {\n      endColumn = startColumn + 1;\n    }\n\n    monaco.editor.setModelMarkers(model, language, [\n      {\n        message,\n        startColumn,\n        startLineNumber,\n        endColumn,\n        endLineNumber,\n        severity: 8, // monacoT.MarkerSeverity.Error,\n      },\n    ]);\n  }, [error, editor, monaco, language]);\n\n  return (\n    <>\n      <MonacoEditor\n        value={value}\n        onChange={(v = \"\") => onChange(v)}\n        language={language}\n        onMount={onMount}\n      />\n      {disabled && <div className=\"overlay\" />}\n    </>\n  );\n};\n\nexport const Editor = ({\n  className = \"\",\n  style = {},\n  disabled = false,\n  value,\n  onChange,\n  grammar,\n  language,\n  highlight,\n}: {\n  className?: string;\n  style?: CSSProperties;\n  disabled?: boolean;\n  value: string;\n  onChange: (source: string) => void;\n  grammar: ohm.Grammar;\n  language: string;\n  highlight?: Span;\n}) => {\n  const [error, setError] = useState<ohm.MatchResult>();\n  const { monaco } = useContext(AppContext);\n\n  const parse = useCallback(\n    (text = \"\") => {\n      const parsed = grammar.match(text);\n      setError(parsed.failed() ? parsed : undefined);\n    },\n    [setError, grammar]\n  );\n\n  useEffect(() => parse(value), [parse, value]);\n  const doParse = useMemo(() => debounce(parse, 500), [parse]);\n\n  const onChangeCB = useCallback(\n    (text = \"\") => {\n      onChange(text);\n      doParse(text);\n    },\n    [doParse, onChange]\n  );\n\n  return (\n    <div className={`Editor ${className}`} style={style}>\n      {monaco.canUse && monaco.wants ? (\n        <Monaco\n          value={value}\n          onChange={onChangeCB}\n          language={language}\n          error={error}\n          disabled={disabled}\n          highlight={highlight}\n        />\n      ) : (\n        <>\n          <Textarea\n            value={value}\n            onChange={onChangeCB}\n            language={language}\n            disabled={disabled}\n          />\n          <ErrorPanel error={error} />\n        </>\n      )}\n    </div>\n  );\n};\n","import { CSSProperties, ReactNode } from \"react\";\n\nexport const Panel = (props: {\n  children: ReactNode;\n  header?: ReactNode;\n  footer?: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n}) => {\n  return (\n    <article className={[\"panel\", props.className ?? \"\"].join(\" \")}>\n      {props.header && <header>{props.header}</header>}\n      <main>{props.children}</main>\n      {props.footer && <footer>{props.footer}</footer>}\n    </article>\n  );\n};\n\nexport const Accordian = (props: {\n  children: ReactNode;\n  summary: ReactNode;\n  className?: string;\n  style?: CSSProperties;\n  open?: boolean;\n}) => {\n  return (\n    <details\n      className={props.className ?? \"\"}\n      open={props.open}\n      style={props.style}\n    >\n      <summary>\n        <div className=\"flex row align-baseline\">{props.summary}</div>\n      </summary>\n      {props.children}\n    </details>\n  );\n};\n","import {\n  Err,\n  isErr,\n  Ok,\n  Result,\n} from \"@davidsouther/jiffies/lib/esm/result.js\";\nimport { HDL, HdlParse } from \"../languages/hdl.js\";\nimport { getBuiltinChip } from \"./builtins/index.js\";\nimport { Chip, Connection } from \"./chip.js\";\n\nfunction pinWidth(start: number, end: number | undefined): number | undefined {\n  if (end === undefined) {\n    return undefined;\n  }\n  if (end >= start) {\n    return end - start + 1;\n  }\n  if (start > 0 && end === 0) {\n    return 1;\n  }\n  throw new Error(`Bus specification has start > end (${start} > ${end})`);\n}\n\nexport function parse(\n  code: string\n): Result<Chip, Error | { message: string; shortMessage: string }> {\n  const parsed = HDL.parse(code.toString());\n  if (isErr(parsed)) return parsed;\n  return build(Ok(parsed));\n}\n\nexport function build(parts: HdlParse): Result<Chip, Error> {\n  if (parts.parts === \"BUILTIN\") {\n    return getBuiltinChip(parts.name.toString());\n  }\n\n  const buildChip = new Chip(\n    parts.ins.map(({ pin, width }) => ({ pin: pin.toString(), width })),\n    parts.outs.map(({ pin, width }) => ({ pin: pin.toString(), width })),\n    parts.name.toString(),\n    [],\n    parts.clocked\n  );\n\n  for (const part of parts.parts) {\n    const builtin = getBuiltinChip(part.name.toString());\n    if (isErr(builtin)) return builtin;\n    const partChip = Ok(builtin);\n\n    const wires = part.wires.map<Connection>(({ lhs, rhs }) => ({\n      to: {\n        name: lhs.pin.toString(),\n        start: lhs.start ?? 0,\n        width: pinWidth(lhs.start ?? 0, lhs.end),\n      },\n      from: {\n        name: rhs.pin.toString(),\n        start: rhs.start ?? 0,\n        width: pinWidth(rhs.start ?? 0, rhs.end),\n      },\n    }));\n\n    try {\n      buildChip.wire(partChip, wires);\n    } catch (e) {\n      return Err(e as Error);\n    }\n  }\n\n  return Ok(buildChip);\n}\n","import { assert } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { bin, dec, hex } from \"./util/twos.js\";\nimport { Test } from \"./tst.js\";\n\nexport class Output {\n  private readonly fmt: \"B\" | \"X\" | \"D\" | \"S\";\n  private readonly lPad: number;\n  private readonly rPad: number;\n  private readonly len: number;\n  private readonly index: number;\n  private readonly builtin: boolean;\n\n  // new Output(inst.id, inst.style, inst.width, inst.lpad, inst.rpad)\n  constructor(\n    private variable: string,\n    format = \"%B1.1.1\",\n    len?: number,\n    lPad?: number,\n    rPad?: number,\n    builtin?: boolean,\n    index?: number\n  ) {\n    if (\n      format.startsWith(\"%\") &&\n      len === undefined &&\n      lPad === undefined &&\n      rPad === undefined\n    ) {\n      const { fmt, lPad, rPad, len } = format.match(\n        /^%(?<fmt>[BDXS])(?<lPad>\\d+)\\.(?<len>\\d+)\\.(?<rPad>\\d+)$/\n      )?.groups as {\n        fmt: \"B\" | \"X\" | \"D\" | \"S\";\n        lPad: string;\n        rPad: string;\n        len: string;\n      };\n      this.fmt = fmt;\n      this.lPad = parseInt(lPad);\n      this.rPad = parseInt(rPad);\n      this.len = parseInt(len);\n      this.builtin = false;\n      this.index = -1;\n    } else {\n      assert([\"B\", \"X\", \"D\", \"S\"].includes(format[0]));\n      this.fmt = format[0] as \"B\" | \"X\" | \"D\" | \"S\";\n      this.len = len ?? 3;\n      this.lPad = lPad ?? 1;\n      this.rPad = rPad ?? 1;\n      this.builtin = builtin ?? false;\n      this.index = index ?? -1;\n    }\n  }\n\n  header(test: Test) {\n    let variable = `${this.variable}`;\n    if (this.builtin) {\n      const index = this.index >= 0 ? this.index : \"\";\n      variable = `${variable}[${index}]`;\n    }\n    if (variable.length > this.len + this.lPad + this.rPad) {\n      return variable.substring(0, this.len + this.lPad + this.rPad);\n    }\n    return this.padCenter(variable);\n  }\n\n  print(test: Test) {\n    const val = test.getVar(this.variable, this.index);\n    if (this.fmt === \"S\") {\n      return this.padLeft(val as string);\n    }\n\n    const fmt = { B: bin, D: dec, X: hex }[this.fmt];\n    const value = fmt(val as number);\n    if (this.fmt === \"D\") {\n      return this.padRight(value);\n    } else {\n      return this.padCenter(value.slice(value.length - this.len));\n    }\n  }\n\n  private padCenter(value: string) {\n    const space = this.lPad + this.len + this.rPad;\n    const leftSpace = Math.floor((space - value.length) / 2);\n    const rightSpace = space - leftSpace - value.length;\n    const padLeft = leftSpace + value.length;\n    const padRight = padLeft + rightSpace;\n    value = value.padStart(padLeft);\n    value = value.padEnd(padRight);\n    return value;\n  }\n\n  private padLeft(value: string) {\n    value = value.substring(0, this.len);\n    const padRight = this.rPad + this.len;\n    const padLeft = this.lPad + padRight;\n    value = value.padEnd(padRight);\n    value = value.padStart(padLeft);\n    return value;\n  }\n\n  private padRight(value: string) {\n    value = value.substring(0, this.len);\n    const padLeft = this.lPad + this.len;\n    const padRight = this.rPad + padLeft;\n    value = value.padStart(padLeft);\n    value = value.padEnd(padRight);\n    return value;\n  }\n}\n","import { checkExhaustive } from \"@davidsouther/jiffies/lib/esm/assert.js\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs.js\";\nimport { Span } from \"./languages/base.js\";\nimport {\n  Tst,\n  TstLineStatement,\n  TstOperation,\n  TstOutputSpec,\n  TstStatement,\n  TstWhileStatement,\n} from \"./languages/tst.js\";\nimport { Bus, Chip, HIGH, Low, LOW } from \"./chip/chip.js\";\nimport { Clock } from \"./chip/clock.js\";\nimport { Output } from \"./output.js\";\n\nexport abstract class Test<IS extends TestInstruction = TestInstruction> {\n  protected readonly instructions: (IS | TestInstruction)[] = [];\n  protected _outputList: Output[] = [];\n  protected _log = \"\";\n  fs: FileSystem = new FileSystem();\n\n  setFileSystem(fs: FileSystem) {\n    this.fs = fs;\n  }\n\n  echo(_content: string) {\n    return undefined;\n  }\n  clearEcho() {\n    return undefined;\n  }\n\n  async load(_filename: string): Promise<void> {\n    return undefined;\n  }\n  async compareTo(_filename: string): Promise<void> {\n    return undefined;\n  }\n  outputFile(_filename: string): void {\n    return undefined;\n  }\n  outputList(outputs: Output[]): void {\n    this._outputList = outputs;\n  }\n\n  addInstruction(instruction: IS | TestInstruction): void {\n    this.instructions.push(instruction);\n  }\n\n  reset(): void {\n    // No generator arrow functions\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const test = this;\n    this._steps = (function* () {\n      for (const instruction of test.instructions) {\n        yield* instruction.steps(test);\n      }\n    })();\n    this._log = \"\";\n  }\n\n  _steps: IterableIterator<IS | TestInstruction> | undefined;\n  _step: IteratorResult<IS | TestInstruction, IS | TestInstruction> | undefined;\n\n  get steps(): Iterator<IS | TestInstruction> {\n    if (this._steps === undefined) {\n      this.reset();\n    }\n    if (this._steps === undefined) {\n      throw new Error(\"Reset did not initialize steps\");\n    }\n    return this._steps;\n  }\n\n  get currentStep(): IS | TestInstruction | undefined {\n    return this._step?.value;\n  }\n\n  async step() {\n    this._step = this.steps.next();\n    if (!this._step.done) {\n      await this._step.value.do(this);\n      return false;\n    }\n    return true;\n  }\n\n  async run() {\n    while (!(await this.step()));\n  }\n\n  protected readonly breakpoints: Map<string, number> = new Map();\n  addBreakpoint(variable: string, value: number) {\n    this.breakpoints.set(variable, value);\n  }\n  clearBreakpoints() {\n    this.breakpoints.clear();\n  }\n\n  output() {\n    const values = this._outputList.map((output) => output.print(this));\n    this._log += `|${values.join(\"|\")}|\\n`;\n  }\n\n  header() {\n    const values = this._outputList.map((output) => output.header(this));\n    this._log += `|${values.join(\"|\")}|\\n`;\n  }\n\n  log() {\n    return this._log;\n  }\n\n  abstract hasVar(variable: string | number): boolean;\n  abstract getVar(variable: string | number, offset?: number): number | string;\n  abstract setVar(variable: string, value: number, offset?: number): void;\n}\n\nfunction isTstLineStatment(line: TstStatement): line is TstLineStatement {\n  return (line as TstLineStatement).ops !== undefined;\n}\n\nfunction isTstWhileStatement(line: TstStatement): line is TstWhileStatement {\n  return (line as TstWhileStatement).condition !== undefined;\n}\n\nexport class ChipTest extends Test<ChipTestInstruction> {\n  private chip: Chip = new Low();\n  private clock = Clock.get();\n\n  static from(tst: Tst): ChipTest {\n    const test = new ChipTest();\n\n    for (const line of tst.lines) {\n      if (isTstLineStatment(line)) {\n        test.addInstruction(ChipTest.makeLineStatement(line));\n      } else {\n        const repeat = isTstWhileStatement(line)\n          ? new TestWhileInstruction(\n              new Condition(\n                line.condition.left,\n                line.condition.right,\n                line.condition.op\n              )\n            )\n          : new TestRepeatInstruction(line.count);\n        repeat.span = line.span;\n        test.addInstruction(repeat);\n        for (const statement of line.statements) {\n          repeat.addInstruction(ChipTest.makeLineStatement(statement));\n        }\n      }\n    }\n\n    return test;\n  }\n\n  private static makeLineStatement(line: TstLineStatement) {\n    const statement = new TestCompoundInstruction();\n    statement.span = line.span;\n    for (const op of line.ops) {\n      statement.addInstruction(ChipTest.makeInstruction(op));\n    }\n    return statement;\n  }\n\n  private static makeInstruction(inst: TstOperation) {\n    const { op } = inst;\n    switch (op) {\n      case \"tick\":\n        return new TestTickInstruction();\n      case \"tock\":\n        return new TestTockInstruction();\n      case \"eval\":\n        return new TestEvalInstruction();\n      case \"output\":\n        return new TestOutputInstruction();\n      case \"set\":\n        return new TestSetInstruction(inst.id, inst.value, inst.index);\n      case \"output-list\":\n        return new TestOutputListInstruction(inst.spec);\n      case \"echo\":\n        return new TestEchoInstruction(inst.message);\n      case \"clear-echo\":\n        return new TestClearEchoInstruction();\n      case \"load\":\n        return new TestLoadROMInstruction(inst.file);\n      default:\n        checkExhaustive(op, `Unknown tst operation ${op}`);\n    }\n  }\n\n  with(chip: Chip): this {\n    this.chip = chip;\n    return this;\n  }\n\n  hasVar(variable: string | number): boolean {\n    if (variable === \"time\") {\n      return true;\n    }\n    variable = `${variable}`;\n    // Look up built-in chip state variables\n    return this.chip.hasIn(variable) || this.chip.hasOut(variable);\n  }\n\n  getVar(variable: string | number, offset?: number): number | string {\n    variable = `${variable}`;\n    if (variable === \"time\") {\n      return this.clock.toString();\n    }\n    const pin = this.chip.get(variable, offset);\n    if (!pin) return 0;\n    return pin instanceof Bus ? pin.busVoltage : pin.voltage();\n  }\n\n  setVar(variable: string, value: number, offset?: number): void {\n    // Look up built-in chip state variables\n    const pinOrBus = this.chip.get(variable, offset);\n    if (pinOrBus instanceof Bus) {\n      pinOrBus.busVoltage = value;\n    } else {\n      pinOrBus?.pull(value === 0 ? LOW : HIGH);\n    }\n  }\n\n  eval(): void {\n    this.chip.eval();\n  }\n\n  tick(): void {\n    this.chip.eval();\n    this.clock.tick();\n  }\n\n  tock(): void {\n    this.chip.eval();\n    this.clock.tock();\n  }\n\n  override async load(filename: string) {\n    await this.chip.load(this.fs, filename);\n  }\n\n  override async run() {\n    this.clock.reset();\n    await super.run();\n  }\n}\n\nexport class CPUTest extends Test<CPUTestInstruction> {\n  hasVar(_variable: string | number): boolean {\n    return false;\n  }\n  getVar(_variable: string | number): number {\n    return 0;\n  }\n  setVar(_variable: string, _value: number): void {\n    return undefined;\n  }\n  ticktock(): void {\n    return undefined;\n  }\n}\n\nexport class VMTest extends Test<VMTestInstruction> {\n  hasVar(_variable: string | number): boolean {\n    return false;\n  }\n  getVar(_variable: string | number): number {\n    return 0;\n  }\n  setVar(_variable: string, _value: number): void {\n    return undefined;\n  }\n  vmstep(): void {\n    return undefined;\n  }\n}\n\nexport interface TestInstruction {\n  span?: Span;\n  do(test: Test): void;\n  steps(test: Test): IterableIterator<TestInstruction>;\n}\n\nexport class TestSetInstruction implements TestInstruction {\n  constructor(\n    private variable: string,\n    private value: number,\n    private index?: number | undefined\n  ) {}\n\n  do(test: Test) {\n    test.setVar(this.variable, this.value, this.index);\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestOutputInstruction implements TestInstruction {\n  do(test: Test) {\n    test.output();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestOutputListInstruction implements TestInstruction {\n  private outputs: Output[] = [];\n\n  constructor(specs: TstOutputSpec[] = []) {\n    for (const spec of specs) {\n      this.addOutput(spec);\n    }\n  }\n\n  addOutput(inst: TstOutputSpec) {\n    this.outputs.push(\n      new Output(\n        inst.id,\n        inst.style,\n        inst.width,\n        inst.lpad,\n        inst.rpad,\n        inst.builtin,\n        inst.address\n      )\n    );\n  }\n\n  do(test: Test) {\n    test.outputList(this.outputs);\n    test.header();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestCompoundInstruction implements TestInstruction {\n  protected readonly instructions: TestInstruction[] = [];\n  span?: Span;\n\n  addInstruction(instruction: TestInstruction) {\n    this.instructions.push(instruction);\n  }\n\n  do(test: Test<TestInstruction>): void {\n    for (const instruction of this.instructions) {\n      instruction.do(test);\n    }\n  }\n\n  *steps(_test: Test): Generator<TestInstruction> {\n    yield this;\n  }\n}\n\nexport class TestRepeatInstruction extends TestCompoundInstruction {\n  constructor(public readonly repeat: number) {\n    super();\n  }\n\n  override do() {\n    return undefined;\n  }\n\n  private *innerSteps(test: Test) {\n    for (const instruction of this.instructions) {\n      yield* instruction.steps(test);\n    }\n  }\n\n  override *steps(test: Test) {\n    if (this.repeat === -1) {\n      yield this;\n      while (true) {\n        yield* this.innerSteps(test);\n      }\n    } else {\n      for (let i = 0; i < this.repeat; i++) {\n        yield this;\n        yield* this.innerSteps(test);\n      }\n    }\n  }\n}\n\nexport class Condition {\n  constructor(\n    public readonly x: string | number,\n    public readonly y: string | number,\n    public readonly op: \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"<>\"\n  ) {}\n\n  check(test: Test): boolean {\n    const x = test.hasVar(this.x) ? test.getVar(this.x) : this.x;\n    const y = test.hasVar(this.y) ? test.getVar(this.y) : this.y;\n\n    if (typeof x === \"string\" || typeof y === \"string\") {\n      switch (this.op) {\n        case \"=\":\n          return `${x}` === `${y}`;\n        case \"<>\":\n          return `${x}` !== `${y}`;\n      }\n    } else {\n      switch (this.op) {\n        case \"<\":\n          return x < y;\n        case \"<=\":\n          return x <= y;\n        case \">\":\n          return x > y;\n        case \">=\":\n          return x >= y;\n        case \"=\":\n          return x === y;\n        case \"<>\":\n          return x !== y;\n      }\n    }\n    return false;\n  }\n}\n\nexport class TestWhileInstruction extends TestCompoundInstruction {\n  constructor(public readonly condition: Condition) {\n    super();\n  }\n\n  override *steps(test: Test) {\n    while (this.condition.check(test)) {\n      yield this;\n      for (const instruction of this.instructions) {\n        yield* instruction.steps(test);\n      }\n    }\n  }\n}\n\nexport class TestEchoInstruction implements TestInstruction {\n  constructor(public readonly content: string) {}\n  do(test: Test) {\n    test.echo(this.content);\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestClearEchoInstruction implements TestInstruction {\n  do(test: Test) {\n    test.clearEcho();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestLoadROMInstruction implements TestInstruction {\n  constructor(readonly file: string) {}\n  async do(test: Test) {\n    test.fs.pushd(\"/samples\");\n    await test.load(this.file);\n    test.fs.popd();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestBreakpointInstruction implements TestInstruction {\n  constructor(readonly variable: string, readonly value: number) {}\n\n  do(test: Test) {\n    test.addBreakpoint(this.variable, this.value);\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestClearBreakpointsInstruction implements TestInstruction {\n  do(test: Test) {\n    test.clearBreakpoints();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport interface ChipTestInstruction extends TestInstruction {\n  _chipTestInstruction_: true;\n  do(test: ChipTest): void | Promise<void>;\n}\n\nexport class TestEvalInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.eval();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestTickInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.tick();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport class TestTockInstruction implements ChipTestInstruction {\n  readonly _chipTestInstruction_ = true;\n  do(test: ChipTest) {\n    test.tock();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport interface CPUTestInstruction extends TestInstruction {\n  _cpuTestInstruction_: true;\n  do(test: CPUTest): void | Promise<void>;\n}\n\nexport class TestTickTockInstruction implements CPUTestInstruction {\n  readonly _cpuTestInstruction_ = true;\n  do(test: CPUTest) {\n    test.ticktock();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n\nexport interface VMTestInstruction extends TestInstruction {\n  _vmTestInstruction_: true;\n  do(test: VMTest): void | Promise<void>;\n}\n\nexport class TestVMStepInstruction implements VMTestInstruction {\n  readonly _vmTestInstruction_ = true;\n  do(test: VMTest) {\n    test.vmstep();\n  }\n\n  *steps() {\n    yield this;\n  }\n}\n","import { display } from \"@davidsouther/jiffies/lib/esm/display.js\";\nimport { FileSystem } from \"@davidsouther/jiffies/lib/esm/fs.js\";\nimport { Err, isErr, Ok } from \"@davidsouther/jiffies/lib/esm/result.js\";\nimport { Dispatch, MutableRefObject, useContext, useMemo, useRef } from \"react\";\n\nimport { build as buildChip } from \"@computron5k/simulator/chip/builder.js\";\nimport {\n  getBuiltinChip,\n  REGISTRY,\n} from \"@computron5k/simulator/chip/builtins/index.js\";\nimport {\n  Chip,\n  Chip as SimChip,\n  Low,\n  Pin,\n} from \"@computron5k/simulator/chip/chip.js\";\nimport { Clock } from \"@computron5k/simulator/chip/clock.js\";\nimport { Span } from \"@computron5k/simulator/languages/base.js\";\nimport { HDL } from \"@computron5k/simulator/languages/hdl.js\";\nimport { TST } from \"@computron5k/simulator/languages/tst.js\";\nimport { ChipProjects, CHIP_PROJECTS } from \"@computron5k/projects/index.js\";\nimport { ChipTest } from \"@computron5k/simulator/tst.js\";\n\nimport { ImmPin, reducePins } from \"../pinout.js\";\nimport { useImmerReducer } from \"../react.js\";\n\nimport { BaseContext } from \"./base.context.js\";\n\nexport const PROJECT_NAMES = [\n  [\"01\", `Project 1`],\n  [\"02\", `Project 2`],\n  [\"03\", `Project 3`],\n  [\"05\", `Project 5`],\n];\n\nfunction findDropdowns(storage: Record<string, string>) {\n  const project =\n    (storage[\"/chip/project\"] as keyof typeof CHIP_PROJECTS) ?? \"01\";\n  const chips = CHIP_PROJECTS[project];\n  const chipName = storage[\"/chip/chip\"] ?? chips[0];\n  return { project, chips, chipName };\n}\n\nfunction makeHdl(name: string) {\n  return `CHIP ${name} {\n  IN in;\n  OUT out;\n  PARTS:\n}`;\n}\n\nfunction makeTst() {\n  return `repeat 10 {\n  tick,\n  tock;\n}`;\n}\n\nfunction makeCmp() {\n  return `| in|out|`;\n}\n\nexport interface ChipPageState {\n  files: Files;\n  sim: ChipSim;\n  controls: ControlsState;\n}\n\nexport interface ChipSim {\n  clocked: boolean;\n  inPins: ImmPin[];\n  outPins: ImmPin[];\n  internalPins: ImmPin[];\n  chip: [Chip];\n  pending: boolean;\n  invalid: boolean;\n}\n\nexport interface Files {\n  hdl: string;\n  cmp: string;\n  tst: string;\n  out: string;\n}\n\nexport interface ControlsState {\n  project: keyof typeof CHIP_PROJECTS;\n  chips: string[];\n  chipName: string;\n  hasBuiltin: boolean;\n  runningTest: boolean;\n  span?: Span;\n}\n\nfunction reduceChip(chip: SimChip, pending = false, invalid = false): ChipSim {\n  return {\n    clocked: chip.clocked,\n    inPins: reducePins(chip.ins),\n    outPins: reducePins(chip.outs),\n    internalPins: reducePins(chip.pins),\n    chip: [chip],\n    pending,\n    invalid,\n  };\n}\n\nconst clock = Clock.get();\n\nexport type ChipStoreDispatch = Dispatch<{\n  action: keyof ReturnType<typeof makeChipStore>[\"reducers\"];\n  payload?: unknown;\n}>;\n\nexport function makeChipStore(\n  fs: FileSystem,\n  setStatus: (status: string) => void,\n  storage: Record<string, string>,\n  dispatch: MutableRefObject<ChipStoreDispatch>\n) {\n  const dropdowns = findDropdowns(storage);\n  let { project, chipName } = dropdowns;\n  const { chips } = dropdowns;\n  let chip = new Low();\n  let test = new ChipTest();\n\n  const initialState: ChipPageState = (() => {\n    const controls: ControlsState = {\n      project,\n      chips,\n      chipName,\n      hasBuiltin: REGISTRY.has(chipName),\n      runningTest: false,\n    };\n\n    const maybeChip = getBuiltinChip(controls.chipName);\n    if (isErr(maybeChip)) {\n      setStatus(display(Err(maybeChip)));\n    } else {\n      chip = Ok(maybeChip);\n    }\n\n    const sim = reduceChip(chip);\n\n    setTimeout(() => {\n      actions.reloadChip();\n    });\n\n    return {\n      controls,\n      files: {\n        hdl: \"\",\n        cmp: \"\",\n        tst: \"\",\n        out: \"\",\n      },\n      sim,\n    };\n  })();\n\n  const reducers = {\n    setFiles(\n      state: ChipPageState,\n      {\n        hdl = state.files.hdl,\n        tst = state.files.tst,\n        cmp = state.files.cmp,\n        out = \"\",\n      }: {\n        hdl?: string;\n        tst?: string;\n        cmp?: string;\n        out?: string;\n      }\n    ) {\n      state.files.hdl = hdl;\n      state.files.tst = tst;\n      state.files.cmp = cmp;\n      state.files.out = out;\n    },\n\n    updateChip(\n      state: ChipPageState,\n      payload?: { pending?: boolean; invalid?: boolean }\n    ) {\n      state.sim = reduceChip(chip, payload?.pending, payload?.invalid);\n      state.controls.chips = CHIP_PROJECTS[state.controls.project];\n      state.controls.chipName = chip.name ?? chipName;\n      if (!state.controls.chips.includes(state.controls.chipName)) {\n        state.controls.chips = [\n          ...state.controls.chips,\n          state.controls.chipName,\n        ];\n      }\n    },\n\n    setProject(state: ChipPageState, project: keyof typeof CHIP_PROJECTS) {\n      const chips = CHIP_PROJECTS[project];\n      const chipName =\n        state.controls.chipName && chips.includes(state.controls.chipName)\n          ? state.controls.chipName\n          : chips[0];\n      state.controls.project = project;\n      state.controls.chips = chips;\n      this.setChip(state, chipName);\n    },\n\n    setChip(state: ChipPageState, chipName: string) {\n      state.controls.chipName = chipName;\n      state.controls.hasBuiltin = REGISTRY.has(chipName);\n    },\n\n    testRunning(state: ChipPageState) {\n      state.controls.runningTest = true;\n    },\n\n    testFinished(state: ChipPageState) {\n      state.controls.runningTest = false;\n      const passed = state.files.out.trim() === state.files.cmp.trim();\n      setStatus(\n        passed\n          ? `Simulation successful: The output file is identical to the compare file`\n          : `Simulation error: The output file differs from the compare file`\n      );\n    },\n\n    updateTestStep(state: ChipPageState) {\n      state.files.out = test?.log() ?? \"\";\n      state.controls.span = test?.currentStep?.span;\n      this.updateChip(state, {\n        pending: state.sim.pending,\n        invalid: state.sim.invalid,\n      });\n    },\n  };\n\n  const actions = {\n    setProject(p: keyof typeof CHIP_PROJECTS) {\n      project = storage[\"/chip/project\"] = p;\n      dispatch.current({ action: \"setProject\", payload: project });\n      this.setChip(CHIP_PROJECTS[project][0]);\n    },\n\n    setChip(\n      chip: string,\n      project = storage[\"/chip/project\"] ?? ChipProjects[\"01\"]\n    ) {\n      chipName = storage[\"/chip/chip\"] = chip;\n      dispatch.current({ action: \"setChip\", payload: chipName });\n      this.loadChip(project, chipName);\n    },\n\n    reset() {\n      Clock.get().reset();\n      chip.reset();\n      test.reset();\n      dispatch.current({ action: \"setFiles\", payload: {} });\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    updateFiles({ hdl, tst, cmp }: { hdl: string; tst: string; cmp: string }) {\n      dispatch.current({ action: \"setFiles\", payload: { hdl, tst, cmp } });\n      try {\n        this.compileChip(hdl);\n        this.compileTest(tst);\n      } catch (e) {\n        setStatus(display(e));\n      }\n    },\n\n    compileChip(hdl: string) {\n      chip.remove();\n      const maybeParsed = HDL.parse(hdl);\n      if (isErr(maybeParsed)) {\n        setStatus(\"Failed to parse chip\");\n        dispatch.current({ action: \"updateChip\", payload: { invalid: true } });\n        return;\n      }\n      const maybeChip = buildChip(Ok(maybeParsed));\n      if (isErr(maybeChip)) {\n        setStatus(display(Err(maybeChip)));\n        dispatch.current({ action: \"updateChip\", payload: { invalid: true } });\n        return;\n      }\n      setStatus(`Compiled ${chip.name}`);\n      this.replaceChip(Ok(maybeChip));\n    },\n\n    replaceChip(nextChip: SimChip) {\n      // Store current inPins\n      const inPins = chip.ins;\n      for (const [pin, { busVoltage }] of inPins) {\n        const nextPin = nextChip.ins.get(pin);\n        if (nextPin) {\n          nextPin.busVoltage = busVoltage;\n        }\n      }\n      clock.reset();\n      nextChip.eval();\n      chip = nextChip;\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    async loadChip(project: string, name: string) {\n      storage[\"/chip/chip\"] = name;\n      const fsName = (ext: string) =>\n        `/projects/${project}/${name}/${name}.${ext}`;\n\n      const [hdl, tst, cmp] = await Promise.all([\n        fs.readFile(fsName(\"hdl\")).catch(() => makeHdl(name)),\n        fs.readFile(fsName(\"tst\")).catch((e) => {\n          console.log(e);\n          return makeTst();\n        }),\n        fs.readFile(fsName(\"cmp\")).catch(() => makeCmp()),\n      ]);\n\n      dispatch.current({ action: \"setFiles\", payload: { hdl, tst, cmp } });\n      this.compileChip(hdl);\n      this.compileTest(tst);\n    },\n\n    async saveChip(hdl: string, prj = project, name = chipName) {\n      dispatch.current({ action: \"setFiles\", payload: { hdl } });\n      const path = `/projects/${prj}/${name}/${name}.hdl`;\n      await fs.writeFile(path, hdl);\n      setStatus(`Saved ${path}`);\n    },\n\n    toggle(pin: Pin, i: number | undefined) {\n      if (i !== undefined) {\n        pin.busVoltage = pin.busVoltage ^ (1 << i);\n      } else {\n        if (pin.width === 1) {\n          pin.toggle();\n        } else {\n          pin.busVoltage += 1;\n        }\n      }\n      dispatch.current({ action: \"updateChip\", payload: { pending: true } });\n    },\n\n    eval() {\n      chip.eval();\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    clock() {\n      clock.toggle();\n      if (clock.isLow) {\n        clock.frame();\n      }\n      dispatch.current({ action: \"updateChip\" });\n    },\n\n    useBuiltin() {\n      const builtinName = chip.name ?? chipName;\n      const nextChip = getBuiltinChip(builtinName);\n      if (isErr(nextChip)) {\n        setStatus(\n          `Failed to load builtin ${builtinName}: ${display(Err(nextChip))}`\n        );\n        return;\n      }\n      this.replaceChip(Ok(nextChip));\n    },\n\n    reloadChip() {\n      this.loadChip(project, chipName);\n    },\n\n    compileTest(file: string) {\n      dispatch.current({ action: \"setFiles\", payload: { tst: file } });\n      const tst = TST.parse(file);\n\n      if (isErr(tst)) {\n        setStatus(`Failed to parse test`);\n        return false;\n      }\n      setStatus(`Parsed tst`);\n\n      test = ChipTest.from(Ok(tst)).with(chip);\n      test.setFileSystem(fs);\n      dispatch.current({ action: \"updateTestStep\" });\n      return true;\n    },\n\n    async runTest(file: string) {\n      if (!this.compileTest(file)) {\n        return;\n      }\n      dispatch.current({ action: \"testRunning\" });\n\n      fs.pushd(\"/samples\");\n      await test.run();\n      fs.popd();\n\n      dispatch.current({ action: \"updateTestStep\" });\n      dispatch.current({ action: \"testFinished\" });\n    },\n\n    async tick() {\n      const done = await test.step();\n      dispatch.current({ action: \"updateTestStep\" });\n      if (done) {\n        dispatch.current({ action: \"testFinished\" });\n      }\n      return done;\n    },\n  };\n\n  return { initialState, reducers, actions };\n}\n\nexport function useChipPageStore() {\n  const { fs, setStatus, storage } = useContext(BaseContext);\n\n  const dispatch = useRef<ChipStoreDispatch>(() => undefined);\n\n  const { initialState, reducers, actions } = useMemo(\n    () => makeChipStore(fs, setStatus, storage, dispatch),\n    [fs, setStatus, storage, dispatch]\n  );\n\n  const [state, dispatcher] = useImmerReducer(\n    reducers as unknown as Record<\n      string,\n      (state: ChipPageState, action?: unknown) => ChipPageState\n    >,\n    initialState\n  );\n  dispatch.current = dispatcher;\n\n  return { state, dispatch, actions };\n}\n","import { Trans } from \"@lingui/macro\";\nimport {\n  CSSProperties,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\nimport \"./chip.scss\";\n\nimport { makeVisualizationsWithId } from \"@computron5k/components/chips/visualizations.js\";\nimport { Clockface } from \"@computron5k/components/clockface.js\";\nimport { DiffTable } from \"@computron5k/components/difftable.js\";\nimport { FullPinout } from \"@computron5k/components/pinout.js\";\nimport { useStateInitializer } from \"@computron5k/components/react.js\";\nimport { Runbar } from \"@computron5k/components/runbar.js\";\nimport { CMP } from \"@computron5k/simulator/languages/cmp.js\";\nimport { HDL } from \"@computron5k/simulator/languages/hdl.js\";\nimport { TST } from \"@computron5k/simulator/languages/tst.js\";\nimport { CHIP_PROJECTS } from \"@computron5k/projects/index.js\";\nimport { Timer } from \"@computron5k/simulator/timer.js\";\nimport { AppContext } from \"../App.context\";\nimport { Icon } from \"../pico/icon\";\nimport { Editor } from \"../shell/editor\";\nimport { Accordian, Panel } from \"../shell/panel\";\nimport {\n  Files,\n  PROJECT_NAMES,\n  useChipPageStore,\n} from \"@computron5k/components/stores/chip.store.js\";\nimport { BaseContext } from \"@computron5k/components/stores/base.context.js\";\n\nexport const Chip = () => {\n  const { fs, setStatus } = useContext(BaseContext);\n  const { filePicker } = useContext(AppContext);\n  const { state, actions, dispatch } = useChipPageStore();\n\n  const [hdl, setHdl] = useStateInitializer(state.files.hdl);\n  const [tst, setTst] = useStateInitializer(state.files.tst);\n  const [cmp, setCmp] = useStateInitializer(state.files.cmp);\n  const [out] = useStateInitializer(state.files.out);\n\n  const saveChip = () => {\n    actions.saveChip(hdl);\n  };\n\n  const compile = useRef<(files?: Partial<Files>) => void>(() => undefined);\n  compile.current = async (files: Partial<Files> = {}) => {\n    await actions.updateFiles({\n      hdl: files.hdl ?? hdl,\n      tst: files.tst ?? tst,\n      cmp: files.cmp ?? cmp,\n    });\n  };\n\n  const loadTest = useCallback(async () => {\n    try {\n      const path = await filePicker.select();\n      const tst = await fs.readFile(path);\n      await compile.current({ tst });\n    } catch (e) {\n      console.error(e);\n      setStatus(`Failed to load into memory`);\n    }\n  }, [filePicker, setStatus, fs, compile]);\n\n  const runner = useRef<Timer>();\n  useEffect(() => {\n    runner.current = new (class ChipTimer extends Timer {\n      async reset(): Promise<void> {\n        await compile.current();\n        await actions.reset();\n      }\n\n      override finishFrame(): void {\n        super.finishFrame();\n        dispatch.current({ action: \"updateTestStep\" });\n      }\n\n      async tick(): Promise<boolean> {\n        return actions.tick();\n      }\n\n      toggle(): void {\n        dispatch.current({ action: \"updateTestStep\" });\n      }\n    })();\n\n    return () => {\n      runner.current?.stop();\n    };\n  }, [compile, actions, dispatch]);\n\n  const clockActions = useMemo(\n    () => ({\n      toggle() {\n        actions.clock();\n      },\n      reset() {\n        actions.reset();\n      },\n    }),\n    [actions]\n  );\n\n  const [useBuiltin, setUseBuiltin] = useState(false);\n  const toggleUseBuiltin = async () => {\n    if (useBuiltin) {\n      compile.current();\n      setUseBuiltin(false);\n    } else {\n      actions.useBuiltin();\n      setUseBuiltin(true);\n    }\n  };\n\n  const selectors = (\n    <>\n      <fieldset role=\"group\">\n        <select\n          value={state.controls.project}\n          onChange={({ target: { value } }) => {\n            actions.setProject(value as keyof typeof CHIP_PROJECTS);\n          }}\n          data-testid=\"project-picker\"\n        >\n          {PROJECT_NAMES.map(([number, label]) => (\n            <option key={number} value={number}>\n              {label}\n            </option>\n          ))}\n        </select>\n        <select\n          value={state.controls.chipName}\n          onChange={({ target: { value } }) => {\n            actions.setChip(value);\n          }}\n          data-testid=\"chip-picker\"\n        >\n          {state.controls.chips.map((chip) => (\n            <option key={chip} value={chip}>\n              {chip}\n            </option>\n          ))}\n        </select>\n        <button className=\"flex-0\" onClick={saveChip} disabled={useBuiltin}>\n          <Trans>Save</Trans>\n        </button>\n      </fieldset>\n    </>\n  );\n  const hdlPanel = (\n    <Panel\n      className=\"_hdl_panel\"\n      header={\n        <>\n          <div tabIndex={0}>HDL</div>\n          <fieldset>\n            {state.controls.hasBuiltin && (\n              <label>\n                <input\n                  type=\"checkbox\"\n                  role=\"switch\"\n                  checked={useBuiltin}\n                  onChange={toggleUseBuiltin}\n                />\n                <Trans>Builtin</Trans>\n              </label>\n            )}\n          </fieldset>\n          {selectors}\n        </>\n      }\n    >\n      <Editor\n        className=\"flex-1\"\n        value={hdl}\n        onChange={(source) => {\n          setHdl(source);\n          compile.current({ hdl: source });\n        }}\n        grammar={HDL.parser}\n        language={\"hdl\"}\n        disabled={useBuiltin}\n      />\n    </Panel>\n  );\n\n  const chipButtons = (\n    <fieldset role=\"group\">\n      <button\n        onClick={actions.eval}\n        onKeyDown={actions.eval}\n        disabled={!state.sim.pending}\n      >\n        <Trans>Eval</Trans>\n      </button>\n      <button\n        onClick={clockActions.toggle}\n        style={{ maxWidth: \"initial\" }}\n        disabled={!state.sim.clocked}\n      >\n        <Trans>Clock</Trans>:{\"\\u00a0\"}\n        <Clockface />\n      </button>\n      <button\n        onClick={clockActions.reset}\n        style={{ maxWidth: \"initial\" }}\n        disabled={!state.sim.clocked}\n      >\n        <Trans>Reset</Trans>\n      </button>\n    </fieldset>\n  );\n\n  const visualizations: [string, ReactNode][] = makeVisualizationsWithId({\n    parts: state.sim.chip,\n  });\n\n  const pinsPanel = (\n    <Panel\n      className=\"_parts_panel\"\n      header={\n        <>\n          <div>\n            <Trans>Chip</Trans>\n          </div>\n          {chipButtons}\n        </>\n      }\n    >\n      {state.sim.invalid ? (\n        <Trans>Invalid Chip</Trans>\n      ) : (\n        <>\n          <FullPinout sim={state.sim} toggle={actions.toggle} />\n          <Accordian summary={<Trans>Visualizations</Trans>} open={true}>\n            <main>\n              {visualizations.length > 0 ? (\n                visualizations.map(([p, v]) => <div key={p}>{v}</div>)\n              ) : (\n                <p>None</p>\n              )}\n            </main>\n          </Accordian>\n        </>\n      )}\n    </Panel>\n  );\n\n  const [selectedTestTab, setSelectedTestTab] = useState<\"tst\" | \"cmp\" | \"out\">(\n    \"tst\"\n  );\n\n  const testPanel = (\n    <Panel\n      className=\"_test_panel\"\n      header={\n        <>\n          <div className=\"flex-1\">\n            <Trans>Test</Trans>\n          </div>\n          <div className=\"flex-2\">\n            {runner.current && <Runbar runner={runner.current} />}\n          </div>\n          <div>\n            <button onClick={loadTest}>\n              <Icon name=\"upload_file\" />{\" \"}\n            </button>\n          </div>\n        </>\n      }\n    >\n      <div role=\"tablist\" style={{ \"--tab-count\": \"3\" } as CSSProperties}>\n        <div\n          role=\"tab\"\n          id=\"test-tab-tst\"\n          aria-controls=\"test-tabpanel-tst\"\n          aria-selected={selectedTestTab === \"tst\"}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              name=\"test-tabs\"\n              aria-controls=\"test-tabpanel-tst\"\n              value=\"tst\"\n              checked={selectedTestTab === \"tst\"}\n              onChange={() => setSelectedTestTab(\"tst\")}\n            />\n            Test Script\n          </label>\n        </div>\n        <div\n          role=\"tabpanel\"\n          aria-labelledby=\"test-tab-tst\"\n          id=\"test-tabpanel-tst\"\n        >\n          <Editor\n            value={tst}\n            onChange={setTst}\n            grammar={TST.parser}\n            language={\"tst\"}\n            highlight={state.controls.span}\n          />\n        </div>\n        <div\n          role=\"tab\"\n          id=\"test-tab-cmp\"\n          aria-controls=\"test-tablpanel-cmp\"\n          aria-selected={selectedTestTab === \"cmp\"}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              name=\"test-tabs\"\n              aria-controls=\"test-tabpanel-cmp\"\n              value=\"cmp\"\n              checked={selectedTestTab === \"cmp\"}\n              onChange={() => setSelectedTestTab(\"cmp\")}\n            />\n            Compare File\n          </label>\n        </div>\n        <div\n          role=\"tabpanel\"\n          aria-labelledby=\"test-tab-cmp\"\n          id=\"test-tabpanel-cmp\"\n          style={{ position: \"relative\" }}\n        >\n          <Editor\n            value={cmp}\n            onChange={setCmp}\n            grammar={CMP.parser}\n            language={\"cmp\"}\n          />\n        </div>\n        <div\n          role=\"tab\"\n          id=\"test-tab-out\"\n          aria-controls=\"test-tabpanel-out\"\n          aria-selected={selectedTestTab === \"out\"}\n        >\n          <label>\n            <input\n              type=\"radio\"\n              name=\"test-tabs\"\n              aria-controls=\"test-tabpanel-out\"\n              value=\"out\"\n              checked={selectedTestTab === \"out\"}\n              onChange={() => setSelectedTestTab(\"out\")}\n            />\n            Output File\n          </label>\n        </div>\n        <div\n          role=\"tabpanel\"\n          id=\"test-tabpanel-out\"\n          aria-labelledby=\"test-tab-out\"\n        >\n          <DiffTable cmp={cmp} out={out} />\n        </div>\n      </div>\n    </Panel>\n  );\n\n  return (\n    <div className=\"ChipPage grid\">\n      {hdlPanel}\n      {pinsPanel}\n      {testPanel}\n    </div>\n  );\n};\n\nexport default Chip;\n","export type COMMANDS_ASM =\n  | \"0\"\n  | \"1\"\n  | \"-1\"\n  | \"D\"\n  | \"A\"\n  | \"M\"\n  | \"!D\"\n  | \"!A\"\n  | \"-D\"\n  | \"-A\"\n  | \"D+1\"\n  | \"A+1\"\n  | \"D-1\"\n  | \"A-1\"\n  | \"D+A\"\n  | \"D-A\"\n  | \"D-M\"\n  | \"A-D\"\n  | \"D&A\"\n  | \"D&M\"\n  | \"D|A\"\n  | \"D|M\";\n\nexport type COMMANDS_OP =\n  | 0b101010\n  | 0b111111\n  | 0b111010\n  | 0b001100\n  | 0b110000\n  | 0b110000\n  | 0b001101\n  | 0b110001\n  | 0b001111\n  | 0b110011\n  | 0b011111\n  | 0b110111\n  | 0b001110\n  | 0b110010\n  | 0b000010\n  | 0b010011\n  | 0b010011\n  | 0b000111\n  | 0b000000\n  | 0b000000\n  | 0b010101\n  | 0b010101;\n\nexport const COMMANDS: {\n  asm: Record<COMMANDS_ASM, COMMANDS_OP>;\n  op: Record<COMMANDS_OP, COMMANDS_ASM>;\n} = {\n  asm: {\n    \"0\": 0b101010, // 42 0x2A\n    \"1\": 0b111111, // 63 0x3F\n    \"-1\": 0b111010, // 58 0x3A\n    D: 0b001100, // 12 0x0C\n    A: 0b110000, // 48 0x30\n    M: 0b110000, // 48 0x30\n    \"!D\": 0b001101, // 13 0x0D\n    \"!A\": 0b110001, // 49 0x31\n    \"-D\": 0b001111, // 15 0x0F\n    \"-A\": 0b110011, // 51 0x33\n    \"D+1\": 0b011111, // 31 0x1F\n    \"A+1\": 0b110111, // 55 0x37\n    \"D-1\": 0b001110, // 14 0x0E\n    \"A-1\": 0b110010, // 50 0x32\n    \"D+A\": 0b000010, //  2 0x02\n    \"D-A\": 0b010011, // 19 0x13\n    \"D-M\": 0b010011, // 19 0x13\n    \"A-D\": 0b000111, //  7 0x07\n    \"D&A\": 0b000000, //  0 0x00\n    \"D&M\": 0b000000, //  0 0x00\n    \"D|A\": 0b010101, // 21 0x15\n    \"D|M\": 0b010101, // 21 0x15\n  },\n  op: {\n    0x2a: \"0\",\n    0x3f: \"1\",\n    0x3a: \"-1\",\n    0x0c: \"D\",\n    0x30: \"A\",\n    0x0d: \"!D\",\n    0x31: \"!A\",\n    0x0f: \"-D\",\n    0x33: \"-A\",\n    0x1f: \"D+1\",\n    0x37: \"A+1\",\n    0x0e: \"D-1\",\n    0x32: \"A-1\",\n    0x02: \"D+A\",\n    0x13: \"D-A\",\n    0x07: \"A-D\",\n    0x00: \"D&A\",\n    0x15: \"D|A\",\n  },\n};\n\nexport type ASSIGN_ASM = \"\" | \"M\" | \"D\" | \"MD\" | \"A\" | \"AM\" | \"AD\" | \"AMD\";\nexport type ASSIGN_OP = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\nexport const ASSIGN: {\n  asm: Record<ASSIGN_ASM, ASSIGN_OP>;\n  op: Record<ASSIGN_OP, ASSIGN_ASM>;\n} = {\n  asm: {\n    \"\": 0x0,\n    M: 0b001,\n    D: 0b010,\n    MD: 0b011,\n    A: 0b100,\n    AM: 0b101,\n    AD: 0b110,\n    AMD: 0b111,\n  },\n  op: {\n    0x0: \"\",\n    0x1: \"M\",\n    0x2: \"D\",\n    0x3: \"MD\",\n    0x4: \"A\",\n    0x5: \"AM\",\n    0x6: \"AD\",\n    0x7: \"AMD\",\n  },\n};\n\nexport type JUMP_ASM =\n  | \"\"\n  | \"JGT\"\n  | \"JEQ\"\n  | \"JGE\"\n  | \"JLT\"\n  | \"JNE\"\n  | \"JLE\"\n  | \"JMP\";\nexport type JUMP_OP = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\nexport const JUMP: {\n  asm: Record<JUMP_ASM, JUMP_OP>;\n  op: Record<JUMP_OP, JUMP_ASM>;\n} = {\n  asm: {\n    \"\": 0b0,\n    JGT: 0b001,\n    JEQ: 0b010,\n    JGE: 0b011,\n    JLT: 0b100,\n    JNE: 0b101,\n    JLE: 0b110,\n    JMP: 0b111,\n  },\n  op: {\n    0x0: \"\",\n    0x1: \"JGT\",\n    0x2: \"JEQ\",\n    0x3: \"JGE\",\n    0x4: \"JLT\",\n    0x5: \"JNE\",\n    0x6: \"JLE\",\n    0x7: \"JMP\",\n  },\n};\n\nexport const Flags = {\n  0x01: \"Positive\",\n  0x00: \"Zero\",\n  0x0f: \"Negative\",\n  Positive: 0x01,\n  Zero: 0x00,\n  Negative: 0x0f,\n};\n\nexport function alu(op: number, d: number, a: number): [number, number] {\n  let o = 0;\n  switch (op) {\n    case 0x2a:\n      o = 0;\n      break;\n    case 0x3f:\n      o = 1;\n      break;\n    case 0x3a:\n      o = -1;\n      break;\n    case 0x0c:\n      o = d;\n      break;\n    case 0x30:\n      o = a;\n      break;\n    case 0x0d:\n      o = ~d;\n      break;\n    case 0x31:\n      o = ~a;\n      break;\n    case 0x0f:\n      o = -d;\n      break;\n    case 0x33:\n      o = -a;\n      break;\n    case 0x1f:\n      o = d + 1;\n      break;\n    case 0x37:\n      o = a + 1;\n      break;\n    case 0x0e:\n      o = d - 1;\n      break;\n    case 0x32:\n      o = a - 1;\n      break;\n    case 0x02:\n      o = d + a;\n      break;\n    case 0x13:\n      o = d - a;\n      break;\n    case 0x07:\n      o = a - d;\n      break;\n    case 0x00:\n      o = d & a;\n      break;\n    case 0x15:\n      o = d | a;\n      break;\n  }\n\n  o = o & 0xffff;\n  const flags =\n    o === 0 ? Flags.Zero : o & 0x8000 ? Flags.Negative : Flags.Positive;\n  return [o, flags];\n}\n","import {\n  ASSIGN,\n  ASSIGN_ASM,\n  ASSIGN_OP,\n  COMMANDS,\n  COMMANDS_ASM,\n  COMMANDS_OP,\n  JUMP,\n  JUMP_ASM,\n  JUMP_OP,\n} from \"../cpu/alu.js\";\n\nexport type CommandOps = keyof typeof COMMANDS.op;\nexport type JumpOps = keyof typeof JUMP.op;\nexport type StoreOps = keyof typeof ASSIGN.op;\n\nexport function asm(op: number): string {\n  if (op & 0x8000) {\n    return cInstruction(op);\n  }\n  return aInstruction(op);\n}\n\nfunction cInstruction(op: number): string {\n  op = op & 0xffff; // Clear high order bits\n  const mop = (op & 0x1000) >> 12;\n  const cop: CommandOps = ((op & 0b0000111111000000) >> 6) as CommandOps;\n  const sop: StoreOps = ((op & 0b0000000000111000) >> 3) as StoreOps;\n  const jop: JumpOps = (op & 0b0000000000000111) as JumpOps;\n\n  if (COMMANDS.op[cop] === undefined) {\n    // Invalid commend\n    return \"#ERR\";\n  }\n\n  let command = COMMANDS.op[cop];\n  if (mop) {\n    command = command.replace(/A/g, \"M\") as COMMANDS_ASM;\n  }\n\n  const store = ASSIGN.op[sop];\n  const jump = JUMP.op[jop];\n\n  let instruction: string = command;\n  if (store) {\n    instruction = `${store}=${instruction}`;\n  }\n  if (jump) {\n    instruction = `${instruction};${jump}`;\n  }\n\n  return instruction;\n}\n\nfunction aInstruction(op: number): string {\n  return \"@\" + (op & 0x7fff).toString(10);\n}\n\nexport function op(asm: string): number {\n  if (asm[0] === \"@\") {\n    return aop(asm);\n  } else {\n    return cop(asm);\n  }\n}\n\nfunction aop(asm: string): number {\n  return parseInt(asm.substring(1), 10);\n}\n\nfunction cop(asm: string): number {\n  const parts = asm.match(\n    /(?:(?<assign>[AMD]{1,3})=)?(?<operation>[-!01ADM&|]{1,3})(?:;(?<jump>JGT|JLT|JGE|JLE|JEQ|JMP))?/\n  );\n  const { assign, operation, jump } = parts?.groups ?? {};\n  const mode = operation.includes(\"M\") || assign.includes(\"M\");\n  const aop = ASSIGN.asm[(assign as ASSIGN_ASM) ?? \"\"];\n  const jop = JUMP.asm[(jump as JUMP_ASM) ?? \"\"];\n  const cop = COMMANDS.asm[(operation as COMMANDS_ASM) ?? \"\"];\n\n  return makeC(mode, cop, aop, jop);\n}\n\nexport function makeC(\n  isM: boolean,\n  op: COMMANDS_OP,\n  assign: ASSIGN_OP = 0,\n  jmp: JUMP_OP = 0\n): number {\n  const C = 0xe000;\n  const A = isM ? 0x1000 : 0;\n  const O = op << 6;\n  const D = (assign ?? 0) << 3;\n  const J = jmp ?? 0;\n  return C + A + O + D + J;\n}\n","const Hex = [\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n];\n\nexport function chars(i: number): string {\n  return Hex[i] ?? \"X\";\n}\n\nexport function bits(i: number): string {\n  switch (i) {\n    case 0x0:\n      return \"0000\";\n    case 0x1:\n      return \"0001\";\n    case 0x2:\n      return \"0010\";\n    case 0x3:\n      return \"0011\";\n    case 0x4:\n      return \"0100\";\n    case 0x5:\n      return \"0101\";\n    case 0x6:\n      return \"0110\";\n    case 0x7:\n      return \"0111\";\n    case 0x8:\n      return \"1000\";\n    case 0x9:\n      return \"1001\";\n    case 0xa:\n      return \"1010\";\n    case 0xb:\n      return \"1011\";\n    case 0xc:\n      return \"1100\";\n    case 0xd:\n      return \"1101\";\n    case 0xe:\n      return \"1110\";\n    case 0xf:\n      return \"1111\";\n    default:\n      return \"erro\";\n  }\n}\n\nexport function int(n: string, radix: number): number {\n  const i = parseInt(n.replace(/[^\\d+-.xa-fA-F]/g, \"\"), radix);\n  return i & 0xffff;\n}\n\nexport function int16(i: string): number {\n  return int(i, 16);\n}\n\nexport function int10(i: string): number {\n  return int(i, 10);\n}\n\nexport function int2(i: string): number {\n  return int(i, 2);\n}\n\nexport function hex(i: number): string {\n  const hu = chars((i & 0xf000) >> 12);\n  const hl = chars((i & 0x0f00) >> 8);\n  const lu = chars((i & 0x00f0) >> 4);\n  const ll = chars(i & 0x000f);\n\n  return `0x${hu}${hl}${lu}${ll}`;\n}\n\nexport function bin(i: number, precision = 16): string {\n  const hu = bits((i & 0xf000) >> 12);\n  const hl = bits((i & 0x0f00) >> 8);\n  const lu = bits((i & 0x00f0) >> 4);\n  const ll = bits(i & 0x000f);\n\n  // return `${hu} ${hl} ${lu} ${ll}`;\n  return `${hu}${hl}${lu}${ll}`.substring(16 - precision); // Match the book's formatting\n}\n\nexport function dec(i: number): string {\n  i = i & 0xffff;\n  if (i === 0x8000) {\n    return \"-32768\";\n  }\n  if (i & 0x8000) {\n    i = (~i + 1) & 0x7fff;\n    return `-${i}`;\n  }\n  return `${i}`;\n}\n\nexport function uns(i: number): string {\n  i = i & 0xffff;\n  return `${i}`;\n}\n\nexport function nand16(a: number, b: number): number {\n  a = a & 0xffff;\n  b = b & 0xffff;\n  let c = ~(a & b);\n  c = c & 0xffff;\n  return c;\n}\n"],"names":["clock","Clock","LOW","BehaviorSubject","level","this","ticks","Subject","subject","frameSubject","HIGH","next","assert","tock","tick","undefined","Bus","name","width","state","range","map","newWidth","push","busVoltage","voltage","bit","forEach","n","pull","reduce","b","i","nextVoltage","InSubBus","bus","start","connect","mask","high","low","mid","OutSubBus","ConstantBus","value","TRUE_BUS","FALSE_BUS","parsePinDecl","toPin","match","groups","pin","w","Number","Symbol","iterator","Pins","Map","has","set","minWidth","get","insert","values","id","Chip","ins","outs","internals","clocked","Set","inn","out","internal","pins","clockedPins","$","subscribe","eval","size","parts","reset","hasIn","hasOut","offset","getBuiltin","BUILTIN_NAMES","includes","part","connections","add","to","from","isOutPin","wireOutPin","wireInPin","toLowerCase","emplace","partPin","assertExists","chipPin","findPin","isInternal","Error","ensureWidth","remove","fs","path","load","Low","ClockedChip","unsubscribe","Math","pow","UNKNOWN_PARSE_ERROR","grammars","Base","ohm","baseSemantics","createSemantics","makeParser","grammar","semantics","property","root","source","succeeded","parsed","parse","Ok","Err","message","shortMessage","e","extendOperation","List","list","_","asIteration","addAttribute","decNumber","digits","int10","sourceString","wholeDec","binNumber","int2","hexNumber","int16","num","Name","ident","identifier","__","child","String","_a","str","_b","asmGrammar","asmSemantics","extendSemantics","isALabelInstruction","inst","label","Root","asm","instructions","children","instruction","AInstruction","_at","val","type","CInstruction","assignN","opN","jmpN","assign","op","replace","jmp","isM","COMMANDS","jump","JUMP","store","ASSIGN","Label","_o","_c","ASM","parser","passes","fillLabel","nextLabel","symbols","SCREEN","KEYBOARD","unfilled","line","emit","makeC","filter","endsWith","loadHack","loadAsm","readFile","isErr","split","trim","FORMATS","Memory","memory","Int16Array","length","index","cell","format","current","isFinite","updates","v","end","slice","fn","RAM","_memory","MemoryChip","_address","in","_nextData","address","idx","RamBus","ram","RAM8","RAM64","RAM512","RAM4K","RAM16K","emptyState","A","D","PC","ALU","flag","Flags","BITS","decode","c","x1","x2","am","d1","d2","d3","j1","j2","j3","cpuTick","inM","bits","a","alu","cpuTock","alu2","addressM","outM","writeM","CPU","ROM","input","tickState","cpu","ROM32K","at","Screen","Keyboard","key","keyboard","screen","OFFSET","startsWith","_state","cpuInput","output","Computer","wire","And","and","And16","and16","DMux","sel","dmux","DMux4Way","dmux4way","d","DMux8Way","dmux8way","f","g","h","mux16","mux16_4","s2","Mux","mux","Mux16","Mux4Way16","Mux8Way16","mux16_8","Nand","nand","Nand16","nand16","Not","Not16","or","Or","Or16","or16","Or8way","Xor","xor","Xor16","xor16","add16","Add16","ALUNoStat","x","y","flags","ng","zr","halfAdder","HalfAdder","sum","carry","FullAdder","s","ca","fullAdder","Inc16","Bit","Register","VRegister","REGISTRY","t","ChipCtor","chip","getBuiltinChip","ALUComponent","_jsxs","_jsx","bin","RegisterComponent","dec","KeyMap","Enter","Backspace","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Home","End","PageUp","PageDown","Insert","Delete","Escape","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","useState","showPicker","setShowPicker","setBits","setKey","useCallback","event","keypress","mapping","code","charCodeAt","keyPressToHackCharacter","preventDefault","changeKey","className","ref","focus","onKeyDown","onClick","useImmerReducer","reducers","initialState","useReducer","command","produce","draft","action","payload","useStateInitializer","init","setState","useEffect","Mode","props","mode","setMode","setValue","view","style","cursor","doSelect","select","doChange","target","onChange","edit","display","position","zIndex","left","marginTop","onBlur","onKeyPress","defaultValue","render","doScroll","scrollTop","totalHeight","toleranceHeight","bufferedItems","settings","itemHeight","minIndex","maxIndex","floor","data","limit","max","min","getData","topPaddingHeight","bottomPaddingHeight","viewportRef","useRef","useMemo","MAX_SAFE_INTEGER","startIndex","count","tolerance","fillVirtualScrollSettings","startState","adapter","viewportHeight","reducer","scrollReducer","dispatchScroll","row","initialScroll","div","rows","height","rowKey","overflowY","overflowAnchor","onScroll","MemoryBlock","highlight","editable","MemoryCell","VirtualScroll","rounded","background","hex","flex","textAlign","InlineEdit","newValue","fmt","setFormat","setJmp","goto","setGoto","jumpTo","doUpdate","update","role","placeholder","option","checked","doFormat","displayClock","Clockface","clockface","setClockface","subscription","useClockface","whiteSpace","WHITE","pixel","color","frameFinished","canvas","ctx","getContext","image","getImageData","col","putImageData","drawImage","frame$","maxWidth","boxSizing","marginInline","margin","borderTop","borderLeft","borderBottom","borderRight","makeVisualization","MemoryComponent","KeyboardComponent","ScreenComponent","vis","cmpGrammar","cmpSemantics","cells","lines","CMP","DiffTable","cmp","zeroState","compare","cmpData","outData","failures","table","cmpI","outI","j","pass","fontFamily","marginBottom","DiffCell","reducePin","reverse","reducePins","entries","FullPinout","sim","inPins","outPins","internalPins","PinoutBlock","header","toggle","disabled","pending","colSpan","immPin","Pin","Runbar","runner","timer","dispatch","running","speed","steps","finishFrame","bind","setSteps","setSpeed","actions","frame","stop","makeTimerStore","dispatcher","useTimer","hdlGrammar","hdlSemantics","SubBus","startNode","endNode","WireSide","Wire","right","rhs","isTerminal","lhs","Wires","Part","wires","Parts","BuiltinPart","PartList","ClockedList","PinDecl","PinList","body","Clocked","HDL","tstGrammar","tstSemantics","extendAttribute","Index","FileName","_open","_close","OutputFormat","lpad","rpad","builtin","TstEvalOperation","TstOutputOperation","TstOutputListOperation","formats","spec","TstSetOperation","setOp","TstEchoOperation","TstClearEchoOperation","TstLoadROMOperation","_r","_l","file","Condition","TstWhile","cond","statements","statement","condition","span","startIdx","endIdx","TstRepeat","TstStatement","stmt","ops","operation","break","Tst","tst","TST","Timer","now","Date","delta","done","requestAnimationFrame","ErrorPanel","error","failed","open","Textarea","language","text","setText","Monaco","theme","useContext","AppContext","monaco","useMonaco","editor","decorations","codeTheme","window","matchMedia","matches","onMount","ed","updateOptions","fontSize","minimap","enabled","scrollBeyondLastLine","model","getModel","nextDecoration","getPositionAt","Range","fromPositions","options","inlineClassName","revealRangeInCenter","deltaDecorations","readOnly","setModelMarkers","exec","column","startLineNumber","endLineNumber","startColumn","endColumn","getLineContent","substring","severity","Editor","setError","doParse","debounce","onChangeCB","canUse","wants","Panel","join","footer","Accordian","summary","pinWidth","build","toString","buildChip","partChip","Output","variable","len","lPad","rPad","parseInt","test","padCenter","getVar","padLeft","B","X","padRight","space","leftSpace","rightSpace","padStart","padEnd","Test","FileSystem","_content","_filename","outputs","_outputList","_steps","_log","_step","do","step","breakpoints","clear","print","isTstLineStatment","isTstWhileStatement","ChipTest","pinOrBus","filename","addInstruction","makeLineStatement","repeat","TestWhileInstruction","TestRepeatInstruction","TestCompoundInstruction","makeInstruction","TestTickInstruction","TestTockInstruction","TestEvalInstruction","TestOutputInstruction","TestSetInstruction","TestOutputListInstruction","TestEchoInstruction","TestClearEchoInstruction","TestLoadROMInstruction","checkExhaustive","setVar","specs","addOutput","outputList","_test","innerSteps","hasVar","check","content","echo","clearEcho","pushd","popd","PROJECT_NAMES","makeHdl","reduceChip","invalid","makeChipStore","setStatus","storage","dropdowns","project","chips","CHIP_PROJECTS","chipName","findDropdowns","controls","hasBuiltin","runningTest","maybeChip","setTimeout","reloadChip","files","hdl","setFiles","updateChip","setProject","setChip","testRunning","testFinished","passed","updateTestStep","log","currentStep","p","ChipProjects","loadChip","updateFiles","compileChip","compileTest","maybeParsed","replaceChip","nextChip","nextPin","fsName","ext","Promise","all","catch","console","saveChip","prj","writeFile","isLow","useBuiltin","builtinName","with","setFileSystem","runTest","run","BaseContext","filePicker","useChipPageStore","setHdl","setTst","setCmp","compile","loadTest","clockActions","setUseBuiltin","toggleUseBuiltin","selectors","number","hdlPanel","tabIndex","chipButtons","visualizations","makeVisualizationsWithId","pinsPanel","selectedTestTab","setSelectedTestTab","testPanel","M","MD","AM","AD","AMD","JGT","JEQ","JGE","JLT","JNE","JLE","JMP","Positive","Zero","Negative","o","mop","cop","sop","jop","cInstruction","aInstruction","aop","C","O","J","Hex","chars","int","radix","hu","hl","lu","ll","precision","uns"],"sourceRoot":""}