ASM <: Base {
  Root := ASM
  ASM = intermediateInstruction* instruction?
  
  instruction = label|aInstruction|cInstruction
  intermediateInstruction = instruction space+

  label = openParen identifier closeParen
  aInstruction = at (identifier | decNumber)
  cInstruction = assign? op jmp?

  assignChar = "A" | "M" | "D"
  opChar = assignChar | "0" | "1" | "!" | "-" | "+" | "|" | "&"
  
  assign = assignChar+ equal
  op = opChar+

  jmp = semi ("JGT" | "JEQ" | "JGE" | "JLT" | "JNE" | "JLE" | "JMP")
}